# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <\u96c6\u5408>, <\u96c6\u5408>, ... ]
AffineRatio.Syntax=[ <\u9ede>, <\u9ede>, <\u9ede> ]
Angle.Syntax=[ <\u7269\u4ef6> ]\n[ <\u5411\u91cf>, <\u5411\u91cf> ]\n[ <\u7dda>, <\u7dda> ]\n[ <\u9ede>, <\u89d2\u9ede>, <\u9ede> ]\n[ <\u9ede>, <\u89d2\u9ede>, <\u89d2\u5ea6> ]
AngularBisector.Syntax=[ <\u7dda>, <\u7dda> ]\n[ <\u9ede>, <\u9ede>, <\u9ede> ]
Append.Syntax=[ <\u96c6\u5408>, <\u7269\u4ef6> ]\n[ <\u7269\u4ef6>, <\u96c6\u5408> ]
ApplyMatrix.Syntax=[ <\u77e9\u9663>, <\u7269\u4ef6> ]
Arc.Syntax=[ <\u5713>, <\u9ede>, <\u9ede> ]\n[ <\u6a62\u5713>, <\u9ede>, <\u9ede> ]\n[ <\u5713>, <\u53c3\u6578\u503c>, <\u53c3\u6578\u503c> ]\n[ <\u6a62\u5713>, <\u53c3\u6578\u503c>, <\u53c3\u6578\u503c> ]
Area.Syntax=[ <\u5713\u9310\u66f2\u7dda> ]\n[ <\u591a\u908a\u5f62> ]\n[ <\u9ede>, ..., <\u9ede> ]
Asymptote.Syntax=[ <\u5713\u9310\u66f2\u7dda> ]\n[ <\u51fd\u6578> ]\n[ <\u66f2\u7dda\u65b9\u7a0b\u5f0f> ]
Axes.Syntax=[ <\u5713\u9310\u66f2\u7dda> ]
BarCode.Syntax=[ ]\n[ <Image> ]\n[ <Text or Number>, "<Format (optional)>", "<Error Correction (optional)>", <Width (optional)>, <Height (optional)> ]
Barycenter.Syntax=[ <\u9ede\u96c6>, <\u52a0\u6b0a\u503c\u96c6\u5408> ]
Bernoulli.Syntax=[ <\u6a5f\u7387>, <\u662f\u5426\u7d2f\u7a4d\uff1f> ]
Binomial.Syntax=[ <\u6578\u503c n>, <\u6578\u503c r> ]
BinomialDist.Syntax=[ <\u8a66\u9a57\u6b21\u6578>, <\u6210\u529f\u6a5f\u7387> ]\n[ <\u8a66\u9a57\u6b21\u6578>, <\u6210\u529f\u6a5f\u7387>, <\u662f\u5426\u7d2f\u7a4d\uff1f> ]\n[ <\u8a66\u9a57\u6b21\u6578>, <\u6210\u529f\u6a5f\u7387>, <\u8b8a\u6578\u503c>, <\u662f\u5426\u7d2f\u7a4d\uff1f> ]
BinomialDist.SyntaxCAS=[ <\u8a66\u9a57\u6b21\u6578>, <\u6210\u529f\u6a5f\u7387>, <\u8b8a\u6578\u503c>, <\u7d2f\u7a4d\uff1f> ]
Button.Syntax=[ ]\n[ <\u6587\u5b57> ]
CIFactor.SyntaxCAS=[ <\u591a\u9805\u5f0f> ]\n[ <\u591a\u9805\u5f0f>, <\u8b8a\u6578> ]
Cauchy.Syntax=[ <Median>, <Scale>, <Variable Value> ]\n[ <Median>, <Scale>, x, <Boolean Cumulative> ]
Cell.Syntax=[ <\u6b04>, <\u5217> ]
CellRange.Syntax=[ <\u5132\u5b58\u683c>, <\u5132\u5b58\u683c> ]
Center.Syntax=[ <\u5713\u9310\u66f2\u7dda> ]
Centroid.Syntax=[ <\u591a\u908a\u5f62> ]
Checkbox.Syntax=[ ]\n[ <\u6587\u5b57> ]\n[ <\u7269\u4ef6\u96c6\u5408> ]\n[ <\u6587\u5b57>, <\u7269\u4ef6\u96c6\u5408> ]
ChiSquared.Syntax=[ <Degrees of Freedom>, <Variable Value> ]\n[ <Degrees of Freedom>, x, <Boolean Cumulative> ]
Circle.Syntax=[ <\u5713\u5fc3>, <\u534a\u5f91\u6578\u503c> ]\n[ <\u5713\u5fc3>, <\u534a\u5f91\u7dda\u6bb5> ]\n[ <\u5713\u5fc3>, <\u9ede> ]\n[ <\u9ede>, <\u9ede>, <\u9ede> ]
Circle.Syntax3D=[ <Point>, <Radius Number> ]\n[ <Point>, <Segment> ]\n[ <Point>, <Point> ]\n[ <Line>, <Point> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Radius>, <Direction> ]\n[ <Point>, <Point>, <Direction> ]
CircleArc.Syntax=[ <\u5713\u5fc3>, <\u9ede>, <\u9ede> ]
CircleSector.Syntax=[ <\u5713\u5fc3>, <\u9ede>, <\u9ede> ]
CircumcircleArc.Syntax=[ <\u9ede>, <\u9ede>, <\u9ede> ]
CircumcircleSector.Syntax=[ <\u9ede>, <\u9ede>, <\u9ede> ]
Circumference.Syntax=[ <\u5713\u9310\u66f2\u7dda> ]
Coefficients.Syntax=[ <\u591a\u9805\u5f0f> ]\n[ <\u5713\u9310\u66f2\u7dda> ]
Column.Syntax=[ <\u5132\u5b58\u683c> ]
ColumnName.Syntax=[ <\u5132\u5b58\u683c> ]
Command=\u6307\u4ee4
CompleteSquare.Syntax=[ <\u4e8c\u6b21\u51fd\u6578> ]
ComplexRoot.Syntax=[ <\u591a\u9805\u5f0f> ]
Conic.Syntax=[ <\u9ede>, <\u9ede>, <\u9ede>, <\u9ede>, <\u9ede> ]\n[ <\u4fc2\u6578 a>, <\u4fc2\u6578 b>, <\u4fc2\u6578 c>, <\u4fc2\u6578 d>, <\u4fc2\u6578 e>, <\u4fc2\u6578 f> ]
ConstructionStep.Syntax=[ ]\n[ <\u7269\u4ef6> ]
ContingencyTable.Syntax=[ <List of Text>, <List of Text> ]\n[ <List of Text>, <List of Text>, <Options> ]\n[ <List of Row Values>, <List of Column Values>, <Frequency Table> ]\n[ <List of Row Values>, <List of Column Values>, <Frequency Table>, <Options> ]
ConvexHull.Syntax=[ <\u9ede\u96c6\u5408> ]
CopyFreeObject.Syntax=[ <\u7269\u4ef6> ]
Corner.Syntax=[ <\u9802\u9ede\u7de8\u865f> ]\n[ <\u5716\u7247>, <\u9802\u9ede\u7de8\u865f> ]\n[ <\u6587\u5b57>, <\u9802\u9ede\u7de8\u865f> ]\n[ <\u7e6a\u5716\u5340\u7de8\u865f>, <\u9802\u9ede\u7de8\u865f> ]
Covariance.Syntax=[ <\u9ede\u96c6\u5408> ]\n[ <\u6578\u5217\u4e00>, <\u6578\u5217\u4e8c> ]
CrossRatio.Syntax=[ <\u9ede>, <\u9ede>, <\u9ede>, <\u9ede> ]
Cube.Syntax=[ <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
CurveCartesian.Syntax=[ <x(t)>, <y(t)>, <\u53c3\u6578 t>, <\u53c3\u6578\u8d77\u9ede>, <\u53c3\u6578\u7d42\u9ede> ]
Defined.Syntax=[ <\u7269\u4ef6> ]
Degree.Syntax=[ <\u591a\u9805\u5f0f> ]
DelauneyTriangulation.Syntax=[ <\u9ede\u96c6\u5408> ]
Delete.Syntax=[ <\u7269\u4ef6> ]
Denominator.Syntax=[ <\u51fd\u6578> ]
Derivative.Syntax=[ <\u51fd\u6578> ]\n[ <\u66f2\u7dda> ]\n[ <\u51fd\u6578>, <\u6578\u503c> ]\n[ <\u51fd\u6578>, <\u8b8a\u6578> ]\n[ <\u66f2\u7dda>, <\u6578\u503c> ]\n[ <\u51fd\u6578>, <\u8b8a\u6578>, <\u6578\u503c> ]
Determinant.Syntax=[ <\u77e9\u9663> ]
Diameter.Syntax=[ <\u5411\u91cf>, <\u5713\u9310\u66f2\u7dda> ]\n[ <\u7dda>, <\u5713\u9310\u66f2\u7dda> ]
Dilate.Syntax=[ <\u7269\u4ef6>, <\u7e2e\u653e\u500d\u7387> ]\n[ <\u7269\u4ef6>, <\u7e2e\u653e\u500d\u7387>, <\u7e2e\u653e\u4e2d\u5fc3> ]
Direction.Syntax=[ <\u7dda> ]
Directrix.Syntax=[ <\u5713\u9310\u66f2\u7dda> ]
Distance.Syntax=[ <\u9ede>, <\u7269\u4ef6> ]\n[ <\u7dda>, <\u7dda> ]
Div.Syntax=[ <\u88ab\u9664\u6578>, <\u9664\u6578> ]\n[ <\u88ab\u9664\u5f0f>, <\u9664\u5f0f> ]
Dodecahedron.Syntax=[ <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
DotPlot.Syntax=[ <List of Raw Data>, <Stack Adjacent Dots (optional)>, <Scale Factor (optional)> ]
DynamicCoordinates.Syntax=[ <\u53c3\u8003\u9ede>, <\u65b0 x \u5ea7\u6a19>, <\u65b0 y \u5ea7\u6a19> ]
Eccentricity.Syntax=[ <\u5713\u9310\u66f2\u7dda> ]
Element.Syntax=[ <\u96c6\u5408>, <\u5143\u7d20\u7de8\u865f> ]\n[ <\u77e9\u9663>, <\u5217>, <\u6b04> ]\n[ <\u9663\u5217>, <\u7d22\u5f15 1>, <\u7d22\u5f15 2>, ... ]
Ellipse.Syntax=[ <\u7126\u9ede>, <\u7126\u9ede>, <\u9577\u8ef8\u534a\u9577> ]\n[ <\u7126\u9ede>, <\u7126\u9ede>, <\u9577\u8ef8\u534a\u9577\u7dda\u6bb5> ]\n[ <\u7126\u9ede>, <\u7126\u9ede>, <\u9ede> ]
Erlang.Syntax=[ <Shape>, <Rate>, <Variable Value> ]\n[ <Shape>, <Rate>, x, <Boolean Cumulative> ]
Excentricity.Syntax=[ <\u5713\u9310\u66f2\u7dda> ]
Execute.Syntax=[ <\u6307\u4ee4\u96c6\u5408> ]\n[ <\u6307\u4ee4\u96c6\u5408>, <\u53c3\u6578 1>, <\u53c3\u6578 2>, ... ]
Expand.Syntax=[ <\u6578\u5b78\u5f0f> ]
Exponential.Syntax=[ <Lambda>, <Variable Value> ]\n[ <Lambda>, x, <Boolean Cumulative> ]
Extremum.Syntax=[ <\u591a\u9805\u5f0f> ]\n[ <\u51fd\u6578>, <\u521d\u503c>, <\u672b\u503c> ]
FDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <Variable Value> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, x, <Boolean Cumulative> ]
Factor.Syntax=[ <\u591a\u9805\u5f0f> ]
Factor.SyntaxCAS=[ <Polynomial> ]\n[ <Expression>, <Variable> ]
Factors.Syntax=[ <\u591a\u9805\u5f0f> ]\n[ <\u6578\u503c> ]
FillCells.Syntax=[ <\u5132\u5b58\u683c\u7bc4\u570d>, <\u7269\u4ef6> ]\n[ <\u5132\u5b58\u683c>, <\u96c6\u5408> ]\n[ <\u5132\u5b58\u683c>, <\u77e9\u9663> ]
FillColumn.Syntax=[ <\u884c\u865f>, <\u96c6\u5408> ]
FillRow.Syntax=[ <\u5217\u865f>, <\u96c6\u5408> ]
First.Syntax=[ <\u96c6\u5408> ]\n[ <\u5b57\u4e32> ]\n[ <\u96c6\u5408>, <\u5143\u7d20\u6578\u76ee> ]\n[ <\u5b57\u4e32>, <\u5b57\u5143\u6578\u76ee> ]\n[ <\u8ecc\u8de1>, <\u9802\u9ede\u6578> ]
FirstAxis.Syntax=[ <\u5713\u9310\u66f2\u7dda> ]
FirstAxisLength.Syntax=[ <\u5713\u9310\u66f2\u7dda> ]
Fit.Syntax=[ <\u9ede\u96c6>, <\u51fd\u6578\u96c6\u5408> ]\n[ <\u9ede\u96c6>, <\u51fd\u6578> ]
FitExp.Syntax=[ <\u9ede\u96c6> ]
FitGrowth.Syntax=[ <\u9ede\u96c6> ]
FitLineX.Syntax=[ <\u9ede\u96c6> ]
FitLineY.Syntax=[ <\u9ede\u96c6> ]
FitLog.Syntax=[ <\u9ede\u96c6> ]
FitLogistic.Syntax=[ <\u9ede\u96c6> ]
FitPoly.Syntax=[ <\u9ede\u96c6>, <\u591a\u9805\u5f0f\u6b21\u6578> ]
FitPow.Syntax=[ <\u9ede\u96c6> ]
FitSin.Syntax=[ <\u9ede\u96c6> ]
Focus.Syntax=[ <\u5713\u9310\u66f2\u7dda> ]
Function.Syntax=[ <List of Numbers> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]
GCD.Syntax=[ <\u6574\u6578\u96c6\u5408> ]\n[ <\u6574\u6578>, <\u6574\u6578> ]
Gamma.Syntax=[ <Alpha>, <Beta>, <Variable Value> ]\n[ <Alpha>, <Beta>, x, <Boolean Cumulative> ]
GeometricMean.Syntax=[ <\u6578\u503c\u96c6\u5408> ]
GetTime.Syntax=[ ]\n[ "<Format>" ]
HarmonicMean.Syntax=[ <\u6578\u503c\u96c6\u5408> ]
HideLayer.Syntax=[ <\u5716\u5c64> ]
HistogramRight.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]
Hyperbola.Syntax=[ <\u7126\u9ede>, <\u7126\u9ede>, <\u8cab\u8ef8\u534a\u9577> ]\n[ <\u7126\u9ede>, <\u7126\u9ede>, <\u7dda\u6bb5> ]\n[ <\u7126\u9ede>, <\u7126\u9ede>, <\u9ede> ]
IFactor.Syntax=[ <\u591a\u9805\u5f0f> ]
IFactor.SyntaxCAS=[ <\u591a\u9805\u5f0f> ]\n[ <\u591a\u9805\u5f0f>, <\u8b8a\u6578> ]
Icosahedron.Syntax=[ <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Identity.Syntax=[ <\u65b9\u9663\u968e\u6578> ]
If.Syntax=[ <\u689d\u4ef6\u5f0f>, <\u7269\u4ef6> ]\n[ <\u689d\u4ef6\u5f0f>, <\u7269\u4ef6 1>, <\u7269\u4ef6 2> ]
ImplicitCurve.Syntax=[ <\u9ede\u96c6\u5408> ]\n[ <\u96d9\u8b8a\u6578\u51fd\u6578> ]
Incircle.Syntax=[ <\u9ede>, <\u9ede>, <\u9ede> ]
IndexOf.Syntax=[ <\u7269\u4ef6>, <\u96c6\u5408> ]\n[ <\u5b50\u5b57\u4e32>, <\u6bcd\u5b57\u4e32> ]\n[ <\u7269\u4ef6>, <\u96c6\u5408>, <\u641c\u5c0b\u8d77\u59cb\u9ede> ]\n[ <\u5b50\u5b57\u4e32>, <\u6bcd\u5b57\u4e32>, <\u641c\u5c0b\u8d77\u59cb\u9ede> ]
Insert.Syntax=[ <\u63d2\u5165\u96c6\u5408>, <\u88ab\u63d2\u5165\u96c6\u5408>, <\u63d2\u5165\u4f4d\u7f6e> ]\n[ <\u63d2\u5165\u7269\u4ef6>, <\u88ab\u63d2\u5165\u96c6\u5408>, <\u63d2\u5165\u4f4d\u7f6e> ]
Integral.Syntax=[ <\u51fd\u6578> ]\n[ <\u51fd\u6578>, <\u8b8a\u6578> ]\n[ <\u51fd\u6578>, <x \u521d\u503c>, <x \u672b\u503c> ]\n[ <\u51fd\u6578>, <x \u521d\u503c>, <x \u672b\u503c>, <\u8a08\u7b97\u7a4d\u5206\u503c\uff1f> ]
IntegralBetween.Syntax=[ <\u51fd\u6578>, <\u51fd\u6578>, <x \u521d\u503c>, <x \u672b\u503c> ]\n[ <\u51fd\u6578>, <\u51fd\u6578>, <x \u521d\u503c>, <x \u672b\u503c>, <\u8a08\u7b97\u7a4d\u5206\u503c\uff1f> ]
Intersection.Syntax=[ <\u96c6\u5408>, <\u96c6\u5408> ]
InverseChiSquared.Syntax=[ <\u81ea\u7531\u5ea6>, <\u6a5f\u7387> ]
InverseHyperGeometric.Syntax=[ <\u6bcd\u9ad4\u5927\u5c0f>, <\u6210\u529f\u6b21\u6578>, <\u6a23\u672c\u5927\u5c0f>, <\u6a5f\u7387> ]
InverseNormal.Syntax=[ <\u5e73\u5747>, <\u6a19\u6e96\u5dee>, <\u6a5f\u7387> ]
InversePascal.Syntax=[ <\u6210\u529f\u6b21\u6578>, <\u6210\u529f\u6a5f\u7387>, <\u6a5f\u7387> ]
InversePoisson.Syntax=[ <\u5e73\u5747>, <\u6a5f\u7387> ]
IsInRegion.Syntax=[ <\u9ede>, <\u5340\u57df> ]
IsInteger.Syntax=[ <\u6578\u503c> ]
Iteration.Syntax=[ <\u51fd\u6578>, <\u521d\u503c>, <\u758a\u4ee3\u6b21\u6578> ]
IterationList.Syntax=[ <\u51fd\u6578>, <\u521d\u503c>, <\u758a\u4ee3\u6b21\u6578> ]
Join.Syntax=[ <\u96c6\u5408\u7684\u96c6\u5408> ]\n[ <\u96c6\u5408>, <\u96c6\u5408>, ... ]
LCM.Syntax=[ <\u6574\u6578\u96c6\u5408> ]\n[ <\u6574\u6578>, <\u6574\u6578> ]
LaTeX.Syntax=[ <\u7269\u4ef6> ]\n[ <\u7269\u4ef6>, <\u4ee3\u63db\u8b8a\u6578\uff1f> ]\n[ <\u7269\u4ef6>, <\u4ee3\u63db\u8b8a\u6578\uff1f>, <\u986f\u793a\u7269\u4ef6\u540d\uff1f> ]
Last.Syntax=[ <\u96c6\u5408> ]\n[ <\u5b57\u4e32> ]\n[ <\u96c6\u5408>, <\u5143\u7d20\u500b\u6578> ]\n[ <\u5b57\u4e32>, <\u5b57\u5143\u500b\u6578> ]
LeftSum.Syntax=[ <\u51fd\u6578>, <x \u521d\u503c>, <x \u672b\u503c>, <\u9577\u689d\u6578> ]
Length.SyntaxCAS=[ <Function>, <x-start>, <x-end> ]\n[ <Function>, <Variable>, <Start Point>, <End Point> ]
LetterToUnicode.Syntax=[ "<\u5b57\u5143>" ]
Limit.Syntax=[ <\u51fd\u6578>, <\u8da8\u8fd1\u503c> ]
LimitAbove.Syntax=[ <\u51fd\u6578>, <\u8da8\u8fd1\u503c> ]
LimitBelow.Syntax=[ <\u51fd\u6578>, <\u8da8\u8fd1\u503c> ]
Line.Syntax=[ <\u9ede>, <\u9ede> ]\n[ <\u9ede>, <\u5e73\u884c\u7dda> ]\n[ <\u9ede>, <\u65b9\u5411\u5411\u91cf> ]
LineBisector.Syntax=[ <\u7dda\u6bb5> ]\n[ <\u9ede>, <\u9ede> ]
LocusEquation.Syntax=[ <Locus> ]\n[ <Locus Point>, <Moving Point> ]
LogNormal.Syntax=[ <Mean>, <Standard Deviation>, <Variable Value> ]\n[ <Mean>, <Standard Deviation>, x, <Boolean Cumulative> ]
Logistic.Syntax=[ <Mean>, <Scale>, <Variable Value> ]\n[ <Mean>, <Scale>, x, <Boolean Cumulative> ]
LowerSum.Syntax=[ <\u51fd\u6578>, <x \u521d\u503c>, <x \u672b\u503c>, <\u9577\u689d\u6578> ]
Max.Syntax=[ <Interval> ]\n[ <List> ]\n[ <Number>, <Number> ]\n[ <List of Data>, <List of Frequencies> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]
Maximize.Syntax=[ <Dependent Number>, <Free Number> ]
MeanX.Syntax=[ <\u9ede\u96c6> ]
MeanY.Syntax=[ <\u9ede\u96c6> ]
Midpoint.Syntax=[ <\u7dda\u6bb5> ]\n[ <\u5713\u9310\u66f2\u7dda> ]\n[ <\u5340\u9593> ]\n[ <\u9ede>, <\u9ede> ]
Min.Syntax=[ <Interval> ]\n[ <List> ]\n[ <Number>, <Number> ]\n[ <List of Data>, <List of Frequencies> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]
Minimize.Syntax=[ <Dependent Number>, <Free Number> ]
MinimumSpanningTree.Syntax=[ <\u9ede\u96c6> ]
Mirror.Syntax=[ <\u7269\u4ef6>, <\u9ede> ]\n[ <\u7269\u4ef6>, <\u7dda> ]\n[ <\u7269\u4ef6>, <\u5713> ]
Mod.Syntax=[ <\u88ab\u9664\u6578>, <\u9664\u6578> ]\n[ <\u88ab\u9664\u5f0f>, <\u9664\u5f0f> ]
Mode.Syntax=[ <\u6578\u503c\u96c6\u5408> ]
Name.Syntax=[ <\u7269\u4ef6> ]
Numerator.Syntax=[ <\u51fd\u6578> ]
Object.Syntax=[ <\u7269\u4ef6\u540d\u7a31\u5b57\u4e32> ]
Octahedron.Syntax=[ <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Ordinal.Syntax=[ <\u6574\u6578> ]
OrdinalRank.Syntax=[ <\u96c6\u5408> ]
OrthogonalLine.Syntax=[ <\u9ede>, <\u7dda> ]\n[ <\u9ede>, <\u7dda\u6bb5> ]\n[ <\u9ede>, <\u5411\u91cf> ]
OrthogonalVector.Syntax=[ <\u7dda> ]\n[ <\u7dda\u6bb5> ]\n[ <\u5411\u91cf> ]
PMCC.Syntax=[ <\u9ede\u96c6> ]\n[ <x \u5ea7\u6a19\u96c6\u5408>, <y \u5ea7\u6a19\u96c6\u5408> ]
Pan.Syntax=[ <x \u50cf\u7d20>, <y \u50cf\u7d20> ]
Pan.Syntax3D=[ <x>, <y>, <z> ]
Parabola.Syntax=[ <\u7126\u9ede>, <\u6e96\u7dda> ]
Parameter.Syntax=[ <\u62cb\u7269\u7dda> ]
ParseToFunction.Syntax=[ <\u51fd\u6578>, <\u5b9a\u7fa9\u5b57\u4e32> ]
ParseToNumber.Syntax=[ <\u8b8a\u6578>, <\u5b9a\u7fa9\u5b57\u4e32> ]
PartialFractions.Syntax=[ <\u51fd\u6578> ]
Pascal.Syntax=[ <Number of Successes>, <Probability of Success> ]\n[ <Number of Successes>, <Probability of Success>, <Boolean Cumulative> ]\n[ <Number of Successes>, <Probability of Success>, <Variable Value>, <Boolean Cumulative> ]
Pascal.SyntaxCAS=[ <Number of Successes>, <Probability of Success>, <Variable Value>, <Boolean Cumulative> ]
PathParameter.Syntax=[ <\u8def\u5f91\u9ede> ]
Perimeter.Syntax=[ <\u591a\u908a\u5f62> ]\n[ <\u5713\u9310\u66f2\u7dda> ]\n[ <\u8ecc\u8de1> ]
Plane.Syntax=[ <Polygon> ]\n[ <Conic> ]\n[ <Point>, <Plane> ]\n[ <Point>, <Line> ]\n[ <Line>, <Line> ]\n[ <Point>, <Point>, <Point> ]
Point.Syntax=[ <\u7269\u4ef6> ]\n[ <\u96c6\u5408> ]\n[ <\u7269\u4ef6>, <\u53c3\u6578> ]\n[ <\u9ede>, <\u5411\u91cf> ]
PointIn.Syntax=[ <\u5340\u57df> ]
Polar.Syntax=[ <Point>, <Conic> ]
Polynomial.SyntaxCAS=[ <\u591a\u9805\u5f0f> ]\n[ <\u591a\u9805\u5f0f>, <\u8b8a\u6578> ]
Product.Syntax=[ <List of Raw Data> ]\n[ <List of Numbers>, <Number of Elements> ]\n[ <List of Numbers>, <List of Frequencies> ]
Rename=\u91cd\u65b0\u547d\u540d
RunClickScript.Syntax=[ <\u7269\u4ef6> ]
RunUpdateScript.Syntax=[ <\u7269\u4ef6> ]
SetViewDirection.Syntax=[ <Direction> ]
ShowGrid.Syntax=[ ]\n[ <\u771f\u5047\u503c> ]\n[ <\u7e6a\u5716\u5340>, <\u771f\u5047\u503c> ]
Spline.Syntax=[ <List of Points> ]\n[ <List of Points>, <Order \u2265 3> ]
StartLogging.Syntax=[ "<Sensor>", <Variable>, "<Sensor>", <Variable>, ... ]
StopLogging.Syntax=[ ]
Surface.Syntax=[ <Expression>, <Expression>, <Expression>, <Parameter Variable 1>, <Start Value>, <End Value>, <Parameter Variable 2>, <Start Value>, <End Value> ]
Tetrahedron.Syntax=[ <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Turtle.Syntax=[ ]
nCr.Syntax=[ <\u6578\u503c n>, <\u6578\u503c r> ]