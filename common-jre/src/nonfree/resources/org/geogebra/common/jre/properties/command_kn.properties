# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
AffineRatio.Syntax=[ <\u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0cac\u0cbf\u0c82\u0ca6\u0cc1> ]
Angle=\u0c95\u0ccb\u0ca8
AngularBisector=\u0c95\u0ccb\u0ca8\u0cb5\u0cbf\u0cad\u0c9c\u0c95
AngularBisector.Syntax=[ <\u0cb8\u0cbe\u0cb2\u0cc1>, <\u0cb8\u0cbe\u0cb2\u0cc1> ]\n[ <\u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0cac\u0cbf\u0c82\u0ca6\u0cc1> ]
ArePerpendicular.Syntax=[ <\u0cb0\u0cc7\u0c96\u0cc6>, <\u0cb0\u0cc7\u0c96\u0cc6> ]
Area=\u0cb8\u0cb2\u0cc6
Axes=\u0c85\u0c95\u0ccd\u0cb7\u0c97\u0cb3\u0cc1
Barycenter=\u0ca8\u0ca1\u0cc1\u0c9a\u0cc1\u0c95\u0ccd\u0c95\u0cbf
BinomialDist.SyntaxCAS=[ <\u0caa\u0cb0\u0cbf\u0cd5\u0c95\u0ccd\u0cb7\u0cc6\u0c97\u0cb3 \u0cb8\u0c82\u0c96\u0ccd\u0caf\u0cc6>, <\u0c97\u0cc6\u0cb2\u0ccd\u0cb2\u0cc1\u0cb5 \u0cb8\u0c82\u0cad\u0cbe\u0cb5\u0ccd\u0caf\u0ca4\u0cc6>, <\u0cae\u0cbe\u0cb0\u0ccd\u0caa\u0cc1\u0c95 \u0cae\u0ccc\u0cb2\u0ccd\u0caf>, <\u0cac\u0cc2\u0cb2\u0cbf\u0caf\u0ca8\u0ccd \u0cb8\u0c82\u0c9a\u0cbf\u0ca4> ]
Button=\u0c92\u0ca4\u0ccd\u0ca4\u0cc1\u0c97\u0cc1\u0c82\u0ca1\u0cbf
Cell.Syntax=[ <\u0c95\u0c82\u0cac\u0cb8\u0cbe\u0cb2\u0cc1>, <\u0c85\u0ca1\u0ccd\u0ca1\u0cb8\u0cbe\u0cb2\u0cc1> ]
Center=\u0c95\u0cc7\u0c82\u0ca6\u0ccd\u0cb0
Centroid.Syntax=[ <\u0cac\u0cb9\u0cc1\u0cad\u0cc1\u0c9c> ]
Circle=\u0cb5\u0cc3\u0ca4\u0ccd\u0ca4
CircleSector=\u0cb5\u0cc3\u0ca4\u0ccd\u0ca4\u0cbe\u0c95\u0cbe\u0cb0\u0ca6\u0ca4\u0ccd\u0cb0\u0cbf\u0c9c\u0ccd\u0caf\u0c96\u0c82\u0ca1
CircumcircleSector=\u0caa\u0cb0\u0cbf\u0cb5\u0cc3\u0ca4\u0ccd\u0ca4\u0ca6\u0ca4\u0ccd\u0cb0\u0cbf\u0c9c\u0ccd\u0caf\u0c96\u0c82\u0ca1
Circumference=\u0cb8\u0cc1\u0ca4\u0ccd\u0ca4\u0cb3\u0ca4\u0cc6
Classes=\u0cb5\u0cb0\u0ccd\u0c97\u0c97\u0cb3\u0cc1
Command=\u0c86\u0c9c\u0ccd\u0c9e\u0cc6
CompleteSquare=\u0c9a\u0ccc\u0c95\u0cb5\u0ca8\u0ca8\u0ccd\u0ca8\u0cc1\u0caa\u0cc2\u0cb0\u0ccd\u0ca3\u0c97\u0cca\u0cb3\u0cbf\u0cb8\u0cbf
Corner=\u0cae\u0cc2\u0cb2\u0cc6
Cube=\u0c98\u0ca8
Cylinder.Syntax=[ <\u0cb5\u0cc3\u0ca4\u0ccd\u0ca4>, <\u0c8e\u0ca4\u0ccd\u0ca4\u0cb0> ]\n[ <\u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0ca4\u0ccd\u0cb0\u0cbf\u0c9c\u0ccd\u0caf> ]
DelauneyTriangulation.Syntax=[ <\u0cac\u0cbf\u0c82\u0ca6\u0cc1\u0c97\u0cb3 \u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]
Delete=\u0c85\u0cb3\u0cbf\u0cb8\u0cbf
Difference=\u0cb5\u0ccd\u0caf\u0ca4\u0ccd\u0caf\u0cbe\u0cb8
Difference.Syntax=[ <\u0cac\u0cb9\u0cc1\u0cad\u0cc1\u0c9c>, <\u0cac\u0cb9\u0cc1\u0cad\u0cc1\u0c9c> ]
Dilate=\u0cb5\u0cbf\u0cb8\u0ccd\u0ca4\u0cb0\u0cbf\u0cb8\u0cbf
Direction.Syntax=[ <\u0cb0\u0cc7\u0c96\u0cc6> ]
Distance=\u0c85\u0c82\u0ca4\u0cb0
Ellipse=\u0c85\u0c82\u0ca1\u0cbe\u0c95\u0cbe\u0cb0
ExportImage=\u0c9a\u0cbf\u0ca4\u0ccd\u0cb0\u0cb5\u0ca8\u0ccd\u0ca8\u0cc1\u0cb0\u0cab\u0ccd\u0ca4\u0cc1\u0cae\u0cbe\u0ca1\u0cbf
Extremum.Syntax=[ <\u0cac\u0cb9\u0cc1\u0caa\u0ca6\u0cbf> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]
Factor=\u0c85\u0caa\u0cb5\u0cb0\u0ccd\u0ca4\u0ca8
First.SyntaxCAS=[ <\u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]\n[ <\u0caa\u0c9f\u0ccd\u0c9f\u0cbf>, <\u0c85\u0c82\u0c95\u0cbf \u0c85\u0c82\u0cb6\u0c97\u0cb3\u0cc1> ]
FitLineY.Syntax=[ <\u0cac\u0cbf\u0c82\u0ca6\u0cc1\u0c97\u0cb3 \u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]
Flatten.Syntax=[ <\u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]
GeometricMean=\u0c97\u0cc1\u0ca3\u0ccb\u0ca4\u0ccd\u0ca4\u0cb0\u0cae\u0cbe\u0ca7\u0ccd\u0caf
InteriorAngles.Syntax=[ <\u0cac\u0cb9\u0cc1\u0cad\u0cc1\u0c9c> ]
Intersect=\u0c9b\u0cc7\u0ca7\u0cb8\u0cc1
IntersectPath.Syntax=[ <\u0cb0\u0cc7\u0c96\u0cc6>, <\u0cac\u0cb9\u0cc1\u0cad\u0cc1\u0c9c> ]\n[ <\u0cac\u0cb9\u0cc1\u0cad\u0cc1\u0c9c>, <\u0cac\u0cb9\u0cc1\u0cad\u0cc1\u0c9c> ]
Intersection=\u0c9b\u0cc7\u0ca7\u0c95
InverseHyperGeometric.Syntax=[ <\u0c9c\u0ca8\u0cb8\u0c82\u0c96\u0ccd\u0caf\u0cbe  \u0caa\u0ccd\u0cb0\u0cae\u0cbe\u0ca3>, <\u0c92\u0c9f\u0ccd\u0c9f\u0cc1 \u0caf\u0cb6\u0cb8\u0ccd\u0cb8\u0cc1\u0c97\u0cb3\u0cc1>, <\u0cae\u0cbe\u0ca6\u0cb0\u0cbf\u0caf \u0caa\u0ccd\u0cb0\u0cae\u0cbe\u0ca3>, <\u0cb8\u0c82\u0cad\u0cbe\u0cb5\u0ccd\u0caf\u0ca4\u0cc6> ]
Join.Syntax=[ <\u0caa\u0c9f\u0ccd\u0c9f\u0cbf\u0c97\u0cb3 \u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]\n[ <\u0caa\u0c9f\u0ccd\u0c9f\u0cbf>, <\u0caa\u0c9f\u0ccd\u0c9f\u0cbf>, ... ]
Line=\u0cb0\u0cc7\u0c96\u0cc6
LineBisector=\u0cb2\u0c82\u0cac\u0cb5\u0cbf\u0cad\u0c9c\u0c95
Locus=\u0caa\u0ca5
Logistic.Syntax=[ <\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0c82\u0c95>, <Scale>, <Variable Value> ]\n[ <\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0c82\u0c95>, <Scale>, <Variable Value>, <Boolean Cumulative> ]\n[ <\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0c82\u0c95>, <Scale>, x, <Boolean Cumulative> ]
MatrixRank=\u0cae\u0cbe\u0ca4\u0cc3\u0c95\u0cc6\u0caf\u0ca6\u0cb0\u0ccd\u0c9c\u0cc6
Mean.SyntaxCAS=[ <\u0c85\u0c82\u0c95\u0cbf\u0c97\u0cb3 \u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]
Median.SyntaxCAS=[ <\u0c85\u0c82\u0c95\u0cbf\u0c97\u0cb3 \u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]
Midpoint.Syntax=[ <\u0cb0\u0cc7\u0c96\u0cbe\u0c96\u0c82\u0ca1> ]\n[ <\u0cb6\u0c82\u0c95\u0cc1\u0c9c> ]\n[ <\u0c85\u0c82\u0ca4\u0cb0> ]\n[ <\u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0cac\u0cbf\u0c82\u0ca6\u0cc1> ]
MinimumSpanningTree.Syntax=[ <\u0cac\u0cbf\u0c82\u0ca6\u0cc1\u0c97\u0cb3 \u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]
OrthogonalLine=\u0cb2\u0c82\u0cac\u0cb0\u0cc7\u0c96\u0cc6
OrthogonalPlane=\u0cb2\u0c82\u0cac\u0cb8\u0cae\u0ca4\u0cb2
OrthogonalVector=\u0cb2\u0c82\u0cac\u0ca8\u0cbf\u0ca6\u0cbf\u0cb6
OrthogonalVector.SyntaxCAS=[ <\u0ca8\u0cbf\u0ca6\u0cbf\u0cb6> ]
Pan=\u0cb8\u0ccd\u0ca4\u0cb0
Parabola=\u0caa\u0cb0\u0cb5\u0cb2\u0caf
Parabola.Syntax=[ <\u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0cb0\u0cc7\u0c96\u0cc6> ]
Parameter.Syntax=[ <\u0caa\u0cb0\u0cb5\u0cb2\u0caf> ]
PlaneBisector=\u0cb8\u0cae\u0ca4\u0cb2\u0ca6\u0c9b\u0cc7\u0ca6\u0c95
PointList=\u0cac\u0cbf\u0c82\u0ca6\u0cc1\u0caa\u0c9f\u0ccd\u0c9f\u0cbf
PolyLine=\u0cac\u0cb9\u0cc1\u0cb0\u0cc7\u0c96\u0cc6
Polygon=\u0cac\u0cb9\u0cc1\u0cad\u0cc1\u0c9c
Radius.Syntax=[ <\u0cb6\u0c82\u0c95\u0cc1\u0c9c> ]
RandomPoisson.Syntax=[ <\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0c82\u0c95> ]
Ray=\u0c95\u0cbf\u0cb0\u0ca3
Ray.Syntax=[ <\u0c86\u0ca6\u0cbf \u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0cac\u0cbf\u0c82\u0ca6\u0cc1> ]\n[ <\u0c86\u0ca6\u0cbf \u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0ca6\u0cbf\u0c95\u0ccd\u0c95\u0cbf\u0ca8 \u0cb8\u0ca6\u0cbf\u0cb6> ]
Relation=\u0cb8\u0c82\u0cac\u0c82\u0ca7
Remove=\u0ca4\u0cc6\u0c97\u0cc6\u0caf\u0cbf\u0cb0\u0cbf
Reverse.Syntax=[ <\u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]
RightSide.SyntaxCAS=[ <\u0cb8\u0cae\u0cc0\u0c95\u0cb0\u0ca3> ]\n[ <\u0cb8\u0cae\u0cc0\u0c95\u0cb0\u0ca3\u0c97\u0cb3 \u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]\n[ <\u0cb8\u0cae\u0cc0\u0c95\u0cb0\u0ca3\u0c97\u0cb3 \u0caa\u0c9f\u0ccd\u0c9f\u0cbf>, <\u0caa\u0cb0\u0cbf\u0cb5\u0cbf\u0ca1\u0cbf> ]
RigidPolygon.Syntax=[ <\u0cac\u0cb9\u0cc1\u0cad\u0cc1\u0c9c> ]\n[ <\u0cac\u0cb9\u0cc1\u0cad\u0cc1\u0c9c>, <Offset x>, <Offset y> ]\n[ <Free Point>, ..., <Free Point> ]
Root=\u0cae\u0cc2\u0cb2
RootList=\u0cae\u0cc2\u0cb2\u0caa\u0c9f\u0ccd\u0c9f\u0cbf
Roots=\u0cae\u0cc2\u0cb2\u0c97\u0cb3\u0cc1
Rotate=\u0ca4\u0cbf\u0cb0\u0cc1\u0c97\u0cbf\u0cb8\u0cbf
Row=\u0c85\u0ca1\u0ccd\u0ca1\u0cb8\u0cbe\u0cb2\u0cc1
ScientificText=\u0cb5\u0cc8\u0c9c\u0ccd\u0c9e\u0cbe\u0ca8\u0cbf\u0c95\u0caa\u0ca0\u0ccd\u0caf
Sector=\u0ca4\u0ccd\u0cb0\u0cbf\u0c9c\u0ccd\u0caf\u0c96\u0c82\u0ca1
Segment=\u0cb0\u0cc7\u0c96\u0cbe\u0c96\u0c82\u0ca1
SetCaption=\u0cb6\u0cc0\u0cb0\u0ccd\u0cb7\u0cbf\u0c95\u0cc6\u0caf\u0ca8\u0ccd\u0ca8\u0cc1\u0c97\u0cca\u0ca4\u0ccd\u0ca4\u0cc1\u0caa\u0ca1\u0cbf\u0cb8\u0cbf
SetDecoration.Syntax=[ <\u0cb5\u0cb8\u0ccd\u0ca4\u0cc1>, <\u0c85\u0c82\u0c95\u0cbf> ]
SetLineThickness.Syntax=[ <\u0cb8\u0cbe\u0cb2\u0cc1>, <\u0c85\u0c82\u0c95\u0cbf> ]
SetSeed.Syntax=[ <\u0c9b\u0cb2\u0caa\u0cb0\u0cbf\u0cae\u0cbe\u0ca3> ]
Shear.Syntax=[ <\u0cb5\u0cb8\u0ccd\u0ca4\u0cc1>, <\u0cb8\u0cbe\u0cb2\u0cc1>, <\u0c85\u0ca8\u0cc1\u0caa\u0cbe\u0ca4> ]
ShowAxes=\u0c85\u0c95\u0ccd\u0cb7\u0c97\u0cb3\u0ca4\u0ccb\u0cb0\u0cbf\u0cb8\u0cbf
ShowLabel=\u0cae\u0ccc\u0cb2\u0ccd\u0caf\u0cb5\u0ca8\u0ccd\u0ca8\u0cc1\u0ca4\u0ccb\u0cb0\u0cbf\u0cb8\u0cbf
Slider=\u0c9c\u0cbe\u0cb0\u0cc1\u0c95
Slope=\u0caa\u0ccd\u0cb0\u0cb5\u0ca3\u0ca4\u0cc6
Slope.Syntax=[ <\u0cb0\u0cc7\u0c96\u0cc6> ]
StartAnimation.Syntax=[ ]\n[ <\u0cac\u0cc2\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c> ]\n[ <\u0c9c\u0cbe\u0cb0\u0cc1\u0c95 \u0c85\u0ca5\u0cb5\u0cbe \u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0c9c\u0cbe\u0cb0\u0cc1\u0c95 \u0c85\u0ca5\u0cb5\u0cbe \u0cac\u0cbf\u0c82\u0ca6\u0cc1>, ... ]\n[ <\u0c9c\u0cbe\u0cb0\u0cc1\u0c95 \u0c85\u0ca5\u0cb5\u0cbe \u0cac\u0cbf\u0c82\u0ca6\u0cc1>, <\u0c9c\u0cbe\u0cb0\u0cc1\u0c95 \u0c85\u0ca5\u0cb5\u0cbe \u0cac\u0cbf\u0c82\u0ca6\u0cc1>, ..., <\u0cac\u0cc2\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c> ]
StartLogging.Syntax=[ "<\u0cb8\u0c82\u0cb5\u0cc7\u0ca6\u0c95>", <\u0c9a\u0cb0>, "<\u0cb8\u0c82\u0cb5\u0cc7\u0ca6\u0c95>", <\u0c9a\u0cb0>, ... ]
Sum=\u0cae\u0cca\u0ca4\u0ccd\u0ca4
Sum.SyntaxCAS=[ <\u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]\n[ <\u0c89\u0c95\u0ccd\u0ca4\u0cbf>, <\u0c9a\u0cb0>, <\u0c86\u0cb0\u0c82\u0cad\u0cbf\u0c95 \u0cae\u0ccc\u0cb2\u0ccd\u0caf>, <\u0c85\u0c82\u0ca4\u0ccd\u0caf \u0cae\u0ccc\u0cb2\u0ccd\u0caf> ]
Take=\u0ca4\u0cc6\u0c97\u0cc6\u0ca6\u0cc1\u0c95\u0cca
Text=\u0caa\u0ca0\u0ccd\u0caf
ToPoint.Syntax=[ <\u0cb8\u0c82\u0c95\u0cc0\u0cb0\u0ccd\u0ca3 \u0c85\u0c82\u0c95\u0cbf\u0c97\u0cb3\u0cc1> ]
UnitOrthogonalVector.SyntaxCAS=[ <\u0ca8\u0cbf\u0ca6\u0cbf\u0cb6> ]
UnitVector=\u0c98\u0c9f\u0c95\u0cb8\u0ca6\u0cbf\u0cb6
UnitVector.SyntaxCAS=[ <\u0ca8\u0cbf\u0ca6\u0cbf\u0cb6> ]
Vector=\u0cb8\u0ca6\u0cbf\u0cb6
Voronoi.Syntax=[ <\u0cac\u0cbf\u0c82\u0ca6\u0cc1\u0c97\u0cb3 \u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]
ZoomIn=\u0cb9\u0cbf\u0c97\u0ccd\u0c97\u0cbf\u0cb8\u0cc1
ZoomOut=\u0c95\u0cc1\u0c97\u0ccd\u0c97\u0cbf\u0cb8\u0cc1
mean.SyntaxCAS=[ <\u0c85\u0c82\u0c95\u0cbf\u0c97\u0cb3 \u0caa\u0c9f\u0ccd\u0c9f\u0cbf> ]