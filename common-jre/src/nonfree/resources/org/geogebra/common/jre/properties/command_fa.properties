# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <\u0641\u0647\u0631\u0633\u062a>, <\u0641\u0647\u0631\u0633\u062a>, ... ]
AffineRatio.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Angle=\u0632\u0627\u0648\u06cc\u0647
Angle.Syntax=[ <\u0634\u06cc> ]\n[ <\u0628\u0631\u062f\u0627\u0631>, <\u0628\u0631\u062f\u0627\u0631> ]\n[ <\u062e\u0637>, <\u062e\u0637> ]\n[ <\u0646\u0642\u0637\u0647>, <\u061f>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u061f>, <\u0632\u0627\u0648\u06cc\u0647> ]
Angle.Syntax3D=[ <\u0634\u06cc> ]\n[ <\u0628\u0631\u062f\u0627\u0631>, <\u0628\u0631\u062f\u0627\u0631> ]\n[ <\u062e\u0637>, <\u062e\u0637> ]\n[ <\u062e\u0637>, <\u061f> ]\n[ <Plane>, <Plane> ]\n[ <\u0646\u0642\u0637\u0647>, <Apex>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <Apex>, <\u0632\u0627\u0648\u06cc\u0647> ]
AngularBisector.Syntax=[ <\u062e\u0637>, <\u062e\u0637> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Append.Syntax=[ <\u0641\u0647\u0631\u0633\u062a>, <\u0634\u06cc> ]\n[ <\u0634\u06cc>, <\u0641\u0647\u0631\u0633\u062a> ]
ApplyMatrix.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633>, <\u0634\u06cc> ]
Arc=\u06a9\u0645\u0627\u0646
Arc.Syntax=[ <\u062f\u0627\u06cc\u0631\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0628\u06cc\u0636\u06cc>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u062f\u0627\u06cc\u0631\u0647>, <Parameter Value>, <Parameter Value> ]\n[ <\u0628\u06cc\u0636\u06cc>, <Parameter Value>, <Parameter Value> ]
AreCollinear.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
AreConcurrent.Syntax=[ <\u062e\u0637>, <\u062e\u0637>, <\u062e\u0637> ]
AreConcyclic.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
AreCongruent.Syntax=[ <\u0634\u06cc\u0621>, <\u0634\u06cc\u0621> ]
AreEqual.Syntax=[ <\u0634\u06cc\u0621>, <\u0634\u06cc\u0621> ]
AreParallel.Syntax=[ <\u062e\u0637>, <\u062e\u0637> ]
ArePerpendicular.Syntax=[ <\u062e\u0637>, <\u062e\u0637> ]
Area=\u0645\u0633\u0627\u062d\u062a
Area.Syntax=[ <\u0645\u062e\u0631\u0648\u0637> ]\n[ <\u0686\u0646\u062f \u0648\u062c\u0647\u06cc> ]\n[ <\u0646\u0642\u0637\u0647>, ..., <\u0646\u0642\u0637\u0647> ]
Assume=\u0641\u0631\u0636
Assume.SyntaxCAS=[ <\u0634\u0631\u0637>, <\u0639\u0628\u0627\u0631\u062a> ]
Asymptote=\u0645\u062c\u0627\u0646\u0628
Asymptote.Syntax=[ <\u0645\u062e\u0631\u0648\u0637> ]\n[ <\u062a\u0627\u0628\u0639> ]\n[ <Implicit Curve> ]
Axes=\u0645\u062d\u0648\u0631\u0647\u0627
BarCode=\u0628\u0627\u0631\u06a9\u062f
Bernoulli=\u0628\u0631\u0646\u0648\u0644\u06cc
Bottom=\u067e\u0627\u06cc\u06cc\u0646
Button=\u062f\u06a9\u0645\u0647
CFactor.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u062a\u063a\u06cc\u0631> ]
CIFactor.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u062a\u063a\u06cc\u0631> ]
CSolutions.SyntaxCAS=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u0644\u06cc\u0633\u062a \u062a\u0648\u0627\u0628\u0639>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
CSolve.SyntaxCAS=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u0644\u06cc\u0633\u062a \u0645\u0639\u0627\u062f\u0644\u0647\u200c\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
Cauchy=\u06a9\u0648\u0634\u06cc
Cell=\u0633\u0644\u0648\u0644
Cell.Syntax=[ <\u0633\u062a\u0648\u0646>, <\u0633\u0637\u0631> ]
Center=\u0645\u0631\u06a9\u0632
Centroid.Syntax=[ <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc> ]
ChiSquared.SyntaxCAS=[ <\u062f\u0631\u062c\u0627\u062a \u0622\u0632\u0627\u062f\u06cc>, <\u0645\u062a\u063a\u06cc\u0631> ]
ChiSquaredTest.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]\n[ <\u0644\u06cc\u0633\u062a>, <\u0644\u06cc\u0633\u062a> ]\n[ <\u0645\u0627\u062a\u0631\u06cc\u0633>, <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
Circle=\u062f\u0627\u06cc\u0631\u0647
CircleArc.Syntax=[ <\u0646\u0642\u0637\u0647 \u0645\u06cc\u0627\u0646\u06cc>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
CircleSector.Syntax=[ <\u0646\u0642\u0637\u0647 \u0645\u06cc\u0627\u0646\u06cc>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
CircumcircleArc.Syntax=[ \u0646\u0642\u0637\u0647, \u0646\u0642\u0637\u0647, \u0646\u0642\u0637\u0647 ]
CircumcircleSector.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Circumference=\u0645\u062d\u064a\u0637
Classes.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627>, <\u062a\u0639\u062f\u0627\u062f \u062f\u0633\u062a\u0647\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627>, <\u0634\u0631\u0648\u0639>, <\u0637\u0648\u0644 \u062f\u0633\u062a\u0647\u200c\u0647\u0627> ]
ClosestPoint.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0645\u0633\u06cc\u0631> ]\n[ <\u062e\u0637>, <\u062e\u0637> ]
Coefficients=\u0636\u0631\u0627\u064a\u0628
Coefficients.SyntaxCAS=[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]\n[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc>, <\u0645\u062a\u063a\u06cc\u0631> ]
Column=\u0633\u062a\u0648\u0646
Command=\u062f\u0633\u062a\u0648\u0631
CommonDenominator.Syntax=[ <\u0639\u0628\u0627\u0631\u062a>, <\u0639\u0628\u0627\u0631\u062a> ]
CompetitionRank.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
CompleteSquare.Syntax=[ <\u062a\u0627\u0628\u0639 \u062f\u0631\u062c\u0647 \u062f\u0648\u0645> ]
ComplexRoot.Syntax=[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]
Cone=\u0645\u062e\u0631\u0648\u0637
Cone.Syntax=[ <\u062f\u0627\u06cc\u0631\u0647>, <\u0627\u0631\u062a\u0641\u0627\u0639> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0634\u0639\u0627\u0639> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0628\u0631\u062f\u0627\u0631>, <\u0632\u0627\u0648\u06cc\u0647> ]
Conic=\u0645\u062e\u0631\u0648\u0637\u06cc
Conic.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f>, <\u0639\u062f\u062f>, <\u0639\u062f\u062f>, <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
ConstructionStep.Syntax=[ ]\n[ <\u0634\u06cc\u0621> ]
ConvexHull.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
CopyFreeObject.Syntax=[ <\u0634\u06cc\u0621> ]
Corner=\u06af\u0648\u0634\u0647
CountIf.Syntax=[ <\u0634\u0631\u0637>, <\u0644\u06cc\u0633\u062a> ]\n[ <\u0634\u0631\u0637>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0644\u06cc\u0633\u062a> ]
Covariance=\u06a9\u0648\u0648\u0627\u0631\u06cc\u0627\u0646\u0633
Covariance.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
Cross.Syntax=[ <\u0628\u0631\u062f\u0627\u0631>, <\u0628\u0631\u062f\u0627\u0631> ]
CrossRatio.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Cube.Syntax=[ <\u0645\u0631\u0628\u0639> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u062c\u0647\u062a>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Cubic=\u0645\u06a9\u0639\u0628
Cubic.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0639\u062f\u062f> ]
Curvature=\u0627\u0646\u062d\u0646\u0627
Curvature.Syntax=[ <\u0634\u06cc\u0621>, <\u0646\u0642\u0637\u0647> ]
CurvatureVector.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0634\u06cc\u0621> ]
CurveCartesian=\u0645\u0646\u062d\u0646\u06cc
Cylinder=\u0627\u0633\u062a\u0648\u0627\u0646\u0647
Cylinder.Syntax=[ <\u062f\u0627\u06cc\u0631\u0647>, <\u0627\u0631\u062a\u0641\u0627\u0639> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0634\u0639\u0627\u0639> ]
DataFunction.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
Defined.Syntax=[ <\u0634\u06cc\u0621> ]
Degree=\u062f\u0631\u062c\u0647
Degree.Syntax=[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]
Degree.SyntaxCAS=[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]\n[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc>, <\u0645\u062a\u063a\u06cc\u0631> ]
DelauneyTriangulation.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Delete=\u062d\u0630\u0641
Denominator=\u0645\u062e\u0631\u062c
Denominator.Syntax=[ <\u0639\u062f\u062f> ]\n[ <\u062a\u0627\u0628\u0639> ]
Denominator.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]
Derivative=\u0645\u0634\u062a\u0642
Derivative.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0639\u062f\u062f> ]
Determinant=\u062f\u062a\u0631\u0645\u06cc\u0646\u0627\u0646
Determinant.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
Difference=\u062a\u0641\u0627\u0636\u0644
Difference.Syntax=[ <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc>, <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc> ]
Dilate.Syntax=[ <\u0634\u06cc\u0621>, <\u0636\u0631\u06cc\u0628 \u062a\u062c\u0627\u0646\u0633> ]\n[ <\u0634\u06cc\u0621>, <\u0636\u0631\u06cc\u0628 \u062a\u062c\u0627\u0646\u0633>, <\u0646\u0642\u0637\u0647 \u0645\u0631\u06a9\u0632 \u062a\u062c\u0627\u0646\u0633> ]
Dimension=\u0628\u064f\u0639\u062f
Dimension.Syntax=[ <\u0634\u06cc\u0621> ]
Direction=\u062c\u0647\u062a
Direction.Syntax=[ <\u062e\u0637> ]
Distance=\u0641\u0627\u0635\u0644\u0647
Distance.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0634\u06cc\u0621> ]\n[ <\u062e\u0637>, <\u062e\u0637> ]\n[ <\u0635\u0641\u062d\u0647>, <\u0635\u0641\u062d\u0647> ]
Division=\u062a\u0642\u0633\u06cc\u0645
Divisors.Syntax=[ <\u0639\u062f\u062f> ]
DivisorsList.Syntax=[ <\u0639\u062f\u062f> ]
DivisorsSum.Syntax=[ <\u0639\u062f\u062f> ]
Dodecahedron.Syntax=[ <\u067e\u0646\u062c\u200c\u0636\u0644\u0639\u06cc \u0645\u0646\u062a\u0638\u0645> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u062c\u0647\u062a> ]
Dot.Syntax=[ <\u0628\u0631\u062f\u0627\u0631>, <\u0628\u0631\u062f\u0627\u0631> ]
Eccentricity=\u062e\u0631\u0648\u062c
Eigenvalues.SyntaxCAS=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
Eigenvectors.SyntaxCAS=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
Element=\u0639\u0646\u0635\u0631
Eliminate.Syntax=[ <\u0644\u06cc\u0633\u062a \u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc\u200c\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
Ellipse=\u0628\u06cc\u0636\u06cc
Ends=\u067e\u0627\u06cc\u0627\u0646
Ends.Syntax=[ <\u0686\u0647\u0627\u0631\u0636\u0644\u0639\u06cc> ]
Envelope=\u067e\u0627\u06a9\u062a
Envelope.Syntax=[ <\u0645\u0633\u06cc\u0631>, <\u0646\u0642\u0637\u0647> ]
Erlang=\u0627\u0631\u0644\u0627\u0646\u06af
Evaluate=\u0627\u0631\u0632\u06cc\u0627\u0628\u06cc
Excentricity.Syntax=[ <\u0645\u062e\u0631\u0648\u0637> ]
Execute=\u0627\u062c\u0631\u0627
Expand=\u0628\u0633\u0637
Expand.Syntax=[ <\u0639\u0628\u0627\u0631\u062a> ]
Exponential=\u0646\u0645\u0627\u06cc\u06cc
Extremum=\u0627\u06a9\u0633\u062a\u0631\u0645\u0645
FDistribution=F\u062a\u0648\u0632\u06cc\u0639
Factor=\u0639\u0627\u0645\u0644
Factor.Syntax=[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]
Factor.SyntaxCAS=[ <\u0639\u062f\u062f> ]\n[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]\n[ <\u0645\u062a\u063a\u06cc\u0631>, <\u0639\u0628\u0627\u0631\u062a> ]
Factors.Syntax=[ <\u0686\u0646\u062f\u200c\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]\n[ <\u0639\u062f\u062f> ]
FillColumn.Syntax=[ <\u0633\u062a\u0648\u0646>, <\u0644\u06cc\u0633\u062a> ]
First=\u0627\u0648\u0644
First.Syntax=[ <\u0644\u06cc\u0633\u062a> ]\n[ <\u0645\u062a\u0646> ]\n[ <\u0644\u06cc\u0633\u062a>, <\u062a\u0639\u062f\u0627\u062f \u0639\u0646\u0627\u0635\u0631> ]\n[ <\u0645\u062a\u0646>, <\u062a\u0639\u062f\u0627\u062f \u0639\u0646\u0627\u0635\u0631> ]\n[ <\u0645\u06a9\u0627\u0646 \u0647\u0646\u062f\u0633\u06cc>, <\u062a\u0639\u062f\u0627\u062f \u0639\u0646\u0627\u0635\u0631> ]
First.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a> ]\n[ <\u0644\u06cc\u0633\u062a>, <\u062a\u0639\u062f\u0627\u062f \u0639\u0646\u0627\u0635\u0631> ]
Fit=\u0645\u0646\u0627\u0633\u0628
FitExp.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FitGrowth.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FitLineY.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FitLog.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FitLogistic.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FitPow.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FitSin.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Focus=\u062a\u0645\u0631\u06a9\u0632
FractionText.Syntax=[ <\u0639\u062f\u062f> ]\n[ <\u0646\u0642\u0637\u0647> ]
Frequency=\u0641\u0631\u0627\u0648\u0627\u0646\u06cc
Function=\u062a\u0627\u0628\u0639
GCD.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
GCD.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc\u200c\u0647\u0627> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]\n[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc>, <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]
Gamma=\u06af\u0627\u0645\u0627
Gamma.SyntaxCAS=[ <\u0622\u0644\u0641\u0627>, <\u0628\u062a\u0627>, <\u0645\u0642\u062f\u0627\u0631 \u0645\u062a\u063a\u06cc\u0631> ]
GeometricMean.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
GroebnerDegRevLex.Syntax=[ <\u0644\u06cc\u0633\u062a \u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc\u200c\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
GroebnerLex.Syntax=[ <\u0644\u06cc\u0633\u062a \u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc\u200c\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
GroebnerLexDeg.Syntax=[ <\u0644\u06cc\u0633\u062a \u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc\u200c\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
HarmonicMean.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
Height=\u0627\u0631\u062a\u0641\u0627\u0639
Height.Syntax=[ <\u062d\u062c\u0645> ]
HideLayer.Syntax=[ <\u0639\u062f\u062f> ]
Histogram=\u0647\u06cc\u0633\u062a\u0648\u06af\u0631\u0627\u0645
Hyperbola=\u0647\u0630\u0644\u0648\u0644\u06cc
IFactor.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u062a\u063a\u06cc\u0631> ]
Icosahedron.Syntax=[ <\u0645\u062b\u0644\u062b \u0645\u062a\u0633\u0627\u0648\u06cc\u200c\u0627\u0644\u0627\u0636\u0644\u0627\u0639> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u062c\u0647\u062a> ]
Identity=\u0647\u0645\u0627\u0646\u06cc
Identity.Syntax=[ <\u0639\u062f\u062f> ]
If=\u0627\u06af\u0631
ImplicitCurve.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <f(x, y)> ]
Incircle.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
InfiniteCone.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0628\u0631\u062f\u0627\u0631>, <\u0632\u0627\u0648\u06cc\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0632\u0627\u0648\u06cc\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u062e\u0637>, <\u0632\u0627\u0648\u06cc\u0647> ]
InfiniteCylinder.Syntax=[ <\u062e\u0637>, <\u0634\u0639\u0627\u0639> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0628\u0631\u062f\u0627\u0631>, <\u0634\u0639\u0627\u0639> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0634\u0639\u0627\u0639> ]
Insert=\u062f\u0631\u062c
Insert.Syntax=[ <\u0644\u06cc\u0633\u062a>, <\u0644\u06cc\u0633\u062a>, <\u0645\u0648\u0642\u0639\u06cc\u062a> ]\n[ <\u0634\u06cc\u0621>, <\u0644\u06cc\u0633\u062a>, <\u0645\u0648\u0642\u0639\u06cc\u062a> ]
Integral=\u0627\u0646\u062a\u06af\u0631\u0627\u0644
InteriorAngles.Syntax=[ <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc> ]
Intersect.SyntaxCAS=[ <\u062a\u0627\u0628\u0639>, <\u062a\u0627\u0628\u0639> ]
IntersectConic.Syntax=[ <\u0635\u0641\u062d\u0647>, <\u0686\u0647\u0627\u0631\u0636\u0644\u0639\u06cc> ]\n[ <\u0686\u0647\u0627\u0631\u0636\u0644\u0639\u06cc>, <\u0686\u0647\u0627\u0631\u0636\u0644\u0639\u06cc> ]
IntersectPath.Syntax=[ <\u062e\u0637>, <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc> ]\n[ <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc>, <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc> ]
Intersection=\u0627\u0634\u062a\u0631\u0627\u06a9
Intersection.Syntax=[ <\u0644\u06cc\u0633\u062a>, <\u0644\u06cc\u0633\u062a> ]
InverseExponential.Syntax=[ <\u0627\u062d\u062a\u0645\u0627\u0644>, <\u03bb> ]
InverseGamma.Syntax=[ <\u0622\u0644\u0641\u0627>, <\u0628\u062a\u0627>, <\u0627\u062d\u062a\u0645\u0627\u0644> ]
InverseHyperGeometric.Syntax=[ <\u0627\u0646\u062f\u0627\u0632\u0647 \u062c\u0627\u0645\u0639\u0647>, <\u062a\u0639\u062f\u0627\u062f \u0645\u0648\u0641\u0642\u06cc\u062a\u200c\u0647\u0627>, <\u0627\u0646\u062f\u0627\u0632\u0647 \u0646\u0645\u0648\u0646\u0647>, <\u0627\u062d\u062a\u0645\u0627\u0644> ]
InverseLaplace.Syntax=[ <\u062a\u0627\u0628\u0639> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0645\u062a\u063a\u06cc\u0631> ]
InversePascal.Syntax=[ <\u0627\u062d\u062a\u0645\u0627\u0644>, <p>, <n> ]
InversePoisson.Syntax=[ <\u0645\u06cc\u0627\u0646\u06af\u06cc\u0646>, <\u0627\u062d\u062a\u0645\u0627\u0644> ]
InverseTDistribution.Syntax=[ <\u062f\u0631\u062c\u0627\u062a \u0622\u0632\u0627\u062f\u06cc>, <\u0627\u062d\u062a\u0645\u0627\u0644> ]
InverseZipf.Syntax=[ <\u062a\u0639\u062f\u0627\u062f \u0639\u0646\u0627\u0635\u0631>, <\u0646\u0645\u0627\u06cc\u06cc>, <\u0627\u062d\u062a\u0645\u0627\u0644> ]
Invert.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]\n[ <\u062a\u0627\u0628\u0639> ]
IsInteger.Syntax=[ <\u0639\u062f\u062f> ]
IsPrime.Syntax=[ <\u0639\u062f\u062f> ]
IsTangent.Syntax=[ <\u062e\u0637>, <\u0645\u062e\u0631\u0648\u0637> ]
Join=\u067e\u06cc\u0648\u0633\u062a\u0646
JordanDiagonalization.SyntaxCAS=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
KeepIf.Syntax=[ <\u0634\u0631\u0637>, <\u0644\u06cc\u0633\u062a> ]\n[ <\u0634\u0631\u0637>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0644\u06cc\u0633\u062a> ]
LCM.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
Laplace=\u0644\u0627\u067e\u0644\u0627\u0633
Laplace.Syntax=[ <\u062a\u0627\u0628\u0639> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0645\u062a\u063a\u06cc\u0631> ]
Last=\u0622\u062e\u0631\u06cc\u0646
Last.Syntax=[ <\u0644\u06cc\u0633\u062a> ]\n[ <\u0645\u062a\u0646> ]\n[ <\u0644\u06cc\u0633\u062a>, <\u062a\u0639\u062f\u0627\u062f \u0639\u0646\u0627\u0635\u0631> ]\n[ <\u0645\u062a\u0646>, <\u062a\u0639\u062f\u0627\u062f \u0639\u0646\u0627\u0635\u0631> ]
Last.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a> ]\n[ <\u0644\u06cc\u0633\u062a>, <\u062a\u0639\u062f\u0627\u062f \u0639\u0646\u0627\u0635\u0631> ]
LeftSide.Syntax=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]
Length=\u0637\u0648\u0644
LetterToUnicode.Syntax=[ "<\u062d\u0631\u0641>" ]
Limit=\u062d\u062f
Limit.Syntax=[ <\u062a\u0627\u0628\u0639>, <\u0645\u0642\u062f\u0627\u0631> ]
Limit.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u0642\u062f\u0627\u0631> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0645\u0642\u062f\u0627\u0631> ]
LimitAbove.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u0642\u062f\u0627\u0631> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0645\u0642\u062f\u0627\u0631> ]
LimitBelow.Syntax=[ <\u0645\u0642\u062f\u0627\u0631>, <\u062a\u0627\u0628\u0639> ]
LimitBelow.SyntaxCAS=[ <\u0645\u0642\u062f\u0627\u0631>, <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0645\u0642\u062f\u0627\u0631>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0639\u0628\u0627\u0631\u062a> ]
Line=\u062e\u0637
Line.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u062e\u0637 \u0645\u0648\u0627\u0632\u06cc> ]\n[ <\u0646\u0642\u0637\u0647>, <\u062c\u0647\u062a \u0628\u0631\u062f\u0627\u0631> ]
LineBisector=\u0639\u0645\u0648\u062f\u0645\u0646\u0635\u0641
LineBisector.Syntax=[ <\u067e\u0627\u0631\u0647\u200c\u062e\u0637> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
MAD.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
MatrixRank.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
Max=\u0628\u06cc\u0634\u06cc\u0646\u0647
Max.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
Mean=\u0645\u06cc\u0627\u0646\u06af\u06cc\u0646
Mean.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
MeanX.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
MeanY.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Median=\u0645\u06cc\u0627\u0646\u0647
Median.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
Median.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
Min=\u06a9\u0645\u06cc\u0646\u0647
Min.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
Minimize.Syntax=[ <\u0639\u062f\u062f \u0648\u0627\u0628\u0633\u062a\u0647>, <\u0639\u062f\u062f \u0622\u0632\u0627\u062f> ]\n[ <\u0639\u062f\u062f \u0648\u0627\u0628\u0633\u062a\u0647>, <\u0646\u0642\u0637\u0647 \u0631\u0648\u06cc \u0645\u0633\u06cc\u0631> ]
MinimumSpanningTree.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Mirror=\u0628\u0627\u0632\u062a\u0627\u0628
Mirror.Syntax=[ <\u0634\u06cc\u0621>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0634\u06cc\u0621>, <\u062e\u0637> ]\n[ <\u0634\u06cc\u0621>, <\u062f\u0627\u06cc\u0631\u0647> ]
Mirror.Syntax3D=[ <\u0634\u06cc\u0621>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0634\u06cc\u0621>, <\u062e\u0637> ]\n[ <\u0634\u06cc\u0621>, <\u0635\u0641\u062d\u0647> ]\n[ <\u0634\u06cc\u0621>, <\u062f\u0627\u06cc\u0631\u0647> ]
MixedNumber.SyntaxCAS=[ <\u0639\u062f\u062f> ]
Mod=\u0645\u062f
Mode=\u062d\u0627\u0644\u062a
Mode.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
NDerivative.Syntax=[ <\u062a\u0627\u0628\u0639> ]
NInvert.Syntax=[ <\u062a\u0627\u0628\u0639> ]
NSolutions.SyntaxCAS=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631 = \u0645\u0642\u062f\u0627\u0631 \u0634\u0631\u0648\u0639> ]\n[ <\u0644\u06cc\u0633\u062a \u0645\u0639\u0627\u062f\u0644\u0647\u200c\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
NSolve.Syntax=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]
NSolve.SyntaxCAS=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631 = \u0645\u0642\u062f\u0627\u0631 \u0634\u0631\u0648\u0639> ]\n[ <\u0644\u06cc\u0633\u062a \u0645\u0639\u0627\u062f\u0644\u0647\u200c\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
Name=\u0646\u0627\u0645
Name.Syntax=[ <\u0634\u06cc\u0621> ]
NextPrime.Syntax=[ <\u0639\u062f\u062f> ]
Normal=\u0646\u0631\u0645\u0627\u0644
Normal.SyntaxCAS=[ <\u0645\u06cc\u0627\u0646\u06af\u06cc\u0646>, <\u0627\u0646\u062d\u0631\u0627\u0641 \u0645\u0639\u06cc\u0627\u0631>, <\u0645\u0642\u062f\u0627\u0631 \u0645\u062a\u063a\u06cc\u0631> ]
NormalQuantilePlot.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]
Normalize.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Numerator=\u0635\u0648\u0631\u062a
Numerator.Syntax=[ <\u0639\u062f\u062f> ]\n[ <\u062a\u0627\u0628\u0639> ]
Numerator.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]
Numeric=\u0639\u062f\u062f\u06cc
Object=\u0634\u06cc\u0621
Ordinal=\u062a\u0631\u062a\u06cc\u0628\u06cc
Ordinal.Syntax=[ <\u0639\u062f\u062f \u0635\u062d\u06cc\u062d> ]
OrdinalRank.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
OrthogonalVector.Syntax=[ <\u062e\u0637> ]\n[ <\u067e\u0627\u0631\u0647\u200c\u062e\u0637> ]\n[ <\u0628\u0631\u062f\u0627\u0631> ]
OrthogonalVector.SyntaxCAS=[ <\u0628\u0631\u062f\u0627\u0631> ]
OsculatingCircle.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0634\u06cc\u0621> ]
Parabola=\u0633\u0647\u0645\u06cc
Parabola.Syntax=[ <\u062e\u0637>, <\u0646\u0642\u0637\u0647> ]
Parameter=\u067e\u0627\u0631\u0627\u0645\u062a\u0631
Parameter.Syntax=[ <\u0647\u0630\u0644\u0648\u0644\u06cc> ]
ParametricDerivative.Syntax=[ <\u0645\u0646\u062d\u0646\u06cc> ]
PartialFractions.Syntax=[ <\u062a\u0627\u0628\u0639> ]
PartialFractions.SyntaxCAS=[ <\u062a\u0627\u0628\u0639> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631> ]
Pascal=\u067e\u0627\u0633\u06a9\u0627\u0644
PathParameter.Syntax=[ <\u0646\u0642\u0637\u0647 \u0631\u0648\u06cc \u0645\u0633\u06cc\u0631> ]
Payment=\u067e\u0631\u062f\u0627\u062e\u062a
Percentile=\u062f\u0631\u0635\u062f
Percentile.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u062f\u0631\u0635\u062f> ]
Perimeter=\u0645\u062d\u06cc\u0637
Perimeter.Syntax=[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]\n[ <\u0645\u062e\u0631\u0648\u0637> ]\n[ <\u0645\u06a9\u0627\u0646 \u0647\u0646\u062f\u0633\u06cc> ]
Plane=\u0635\u0641\u062d\u0647
PlaneBisector.Syntax=[ <\u067e\u0627\u0631\u0647\u200c\u062e\u0637> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Point=\u0646\u0642\u0637\u0647
Point.Syntax=[ <Object> ]\n[ <List> ]\n[ <Object>, <Parameter> ]\n[ <Point>, <Vector> ]
PointList.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
Poisson=\u067e\u0648\u0622\u0633\u0648\u0646
Polar=\u0642\u0637\u0628\u06cc
PolyLine.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <\u0646\u0642\u0637\u0647>, ..., <\u0646\u0642\u0637\u0647> ]
Polygon=\u0686\u0646\u062f\u0636\u0644\u0639\u06cc
Polygon.Syntax3D=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <\u0646\u0642\u0637\u0647>, ..., <\u0646\u0642\u0637\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u062a\u0639\u062f\u0627\u062f \u0631\u0627\u0633\u200c\u0647\u0627> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u062a\u0639\u062f\u0627\u062f \u0631\u0627\u0633\u200c\u0647\u0627>, <\u062c\u0647\u062a> ]
Polynomial.Syntax=[ <\u062a\u0627\u0628\u0639> ]\n[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Polynomial.SyntaxCAS=[ <\u062a\u0627\u0628\u0639> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631> ]
PreviousPrime.Syntax=[ <\u0639\u062f\u062f> ]
Prism=\u0645\u0646\u0634\u0648\u0631
Product=\u062d\u0627\u0635\u0644\u0636\u0631\u0628
Prove.Syntax=[ <\u0639\u0628\u0627\u0631\u062a \u0628\u0648\u0644\u06cc> ]
Pyramid=\u0647\u0631\u0645
Pyramid.Syntax=[ <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc>, <\u0627\u0631\u062a\u0641\u0627\u0639> ]\n[ ..., <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Q1.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
Q3.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
QuadricSide=\u0636\u0644\u0639
RSquare.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627>, <\u062a\u0627\u0628\u0639> ]
Radius=\u0634\u0639\u0627\u0639
RandomDiscrete.Syntax=[ <\u0644\u06cc\u0633\u062a>, <\u0644\u06cc\u0633\u062a> ]
RandomElement.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
RandomNormal.Syntax=[ <\u0645\u06cc\u0627\u0646\u06af\u06cc\u0646>, <\u0627\u0646\u062d\u0631\u0627\u0641 \u0645\u0639\u06cc\u0627\u0631> ]
RandomUniform.Syntax=[ <\u06a9\u0645\u06cc\u0646\u0647>, <\u0628\u06cc\u0634\u06cc\u0646\u0647> ]\n[ <\u06a9\u0645\u06cc\u0646\u0647>, <\u0628\u06cc\u0634\u06cc\u0646\u0647>, <\u062a\u0639\u062f\u0627\u062f \u0646\u0645\u0648\u0646\u0647\u200c\u0647\u0627> ]
Rationalize.SyntaxCAS=[ <\u0639\u062f\u062f> ]
ReadText.Syntax=[ <\u0645\u062a\u0646> ]
ReducedRowEchelonForm.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
Relation=\u0631\u0627\u0628\u0637\u0647
Relation.Syntax=[ <\u0644\u06cc\u0633\u062a> ]\n[ <\u0634\u06cc\u0621>, <\u0634\u06cc\u0621> ]
Remove.Syntax=[ <\u0644\u06cc\u0633\u062a>, <\u0644\u06cc\u0633\u062a> ]
RemoveUndefined.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
Rename.Syntax=[ <\u0634\u06cc\u0621>, <\u0646\u0627\u0645> ]
Repeat=\u062a\u06a9\u0631\u0627\u0631
ResidualPlot.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627>, <\u062a\u0627\u0628\u0639> ]
Reverse=\u0645\u0639\u06a9\u0648\u0633
Reverse.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
RightSide.Syntax=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]
Root=\u0631\u06cc\u0634\u0647
Root.SyntaxCAS=[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]
RootList.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
RootMeanSquare.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
Rotate=\u062f\u0648\u0631\u0627\u0646
Rotate.Syntax=[ <\u0634\u06cc\u0621>, <\u0632\u0627\u0648\u06cc\u0647> ]\n[ <\u0634\u06cc\u0621>, <\u0632\u0627\u0648\u06cc\u0647>, <\u0646\u0642\u0637\u0647> ]
RotateText.Syntax=[ <\u0645\u062a\u0646>, <\u0632\u0627\u0648\u06cc\u0647> ]
Row=\u0633\u0637\u0631
RunClickScript.Syntax=[ <\u0634\u06cc\u0621> ]
RunUpdateScript.Syntax=[ <\u0634\u06cc\u0621> ]
SD.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
SDX.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
SVD.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
SXX.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
SXY.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
SYY.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Sample=\u0646\u0645\u0648\u0646\u0647
SampleSD.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
SampleSD.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
SampleSDX.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
SampleSDY.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
SampleVariance.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
SampleVariance.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
ScientificText.Syntax=[ <\u0639\u062f\u062f> ]\n[ <\u0639\u062f\u062f>, <\u062f\u0642\u062a> ]
Sector=\u0642\u0637\u0627\u0639
Segment.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0637\u0648\u0644> ]
SelectObjects.Syntax=[ ]\n[ ..., <\u0634\u06cc\u0621>, <\u0634\u06cc\u0621> ]
SelectedElement.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
SelectedIndex.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
Semicircle=\u0646\u06cc\u0645\u062f\u0627\u06cc\u0631\u0647
Semicircle.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Sequence=\u062f\u0646\u0628\u0627\u0644\u0647
SetAxesRatio.Syntax=[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
SetAxesRatio.Syntax3D=[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
SetBackgroundColor.Syntax=[ "<\u0631\u0646\u06af>" ]\n[ <\u0634\u06cc\u0621>, "<\u0631\u0646\u06af>" ]\n[ <\u0642\u0631\u0645\u0632>, <\u0633\u0628\u0632>, <\u0622\u0628\u06cc> ]\n[ <\u0634\u06cc\u0621>, <\u0642\u0631\u0645\u0632>, <\u0633\u0628\u0632>, <\u0622\u0628\u06cc> ]
SetCaption.Syntax=[ <\u0634\u06cc\u0621>, <\u0645\u062a\u0646> ]
SetConditionToShowObject.Syntax=[ <\u0634\u06cc\u0621>, <\u0634\u0631\u0637> ]
SetConstructionStep.Syntax=[ <\u0639\u062f\u062f> ]
SetCoords.Syntax=[ <y>, <x>, <\u0634\u06cc\u0621> ]\n[ <z>, <y>, <x>, <\u0634\u06cc\u0621> ]
SetDecoration.Syntax=[ <\u0634\u06cc\u0621>, <\u0639\u062f\u062f> ]
SetDynamicColor.Syntax=[ <\u0634\u06cc\u0621>, <\u0642\u0631\u0645\u0632>, <\u0633\u0628\u0632>, <\u0622\u0628\u06cc> ]\n[ <\u0634\u06cc\u0621>, <\u0642\u0631\u0645\u0632>, <\u0633\u0628\u0632>, <\u0622\u0628\u06cc>, <\u0634\u0641\u0627\u0641\u06cc\u062a> ]
SetFilling.Syntax=[ <\u0634\u06cc\u0621>, <\u0639\u062f\u062f> ]
SetFixed.Syntax=[ <\u0634\u06cc\u0621>, <\u062f\u0631\u0633\u062a | \u063a\u0644\u0637> ]\n[ <\u0634\u06cc\u0621>, <\u062f\u0631\u0633\u062a | \u063a\u0644\u0637>, <\u062f\u0631\u0633\u062a | \u063a\u0644\u0637> ]
SetLabelMode.Syntax=[ <\u0634\u06cc\u0621>, <\u0639\u062f\u062f> ]
SetLayer.Syntax=[ <\u0644\u0627\u06cc\u0647>, <\u0634\u06cc\u0621> ]
SetLineStyle.Syntax=[ <\u0639\u062f\u062f>, <\u062e\u0637> ]
SetLineThickness.Syntax=[ <\u062e\u0637>, <\u0639\u062f\u062f> ]
SetPerspective.Syntax=[ <\u0645\u062a\u0646> ]
SetPointSize.Syntax=[ <\u0634\u06cc\u0621>, <\u0639\u062f\u062f> ]
SetPointStyle.Syntax=[ <\u0639\u062f\u062f>, <\u0646\u0642\u0637\u0647> ]
SetSeed.Syntax=[ <\u0639\u062f\u062f \u0635\u062d\u06cc\u062d> ]
SetSpinSpeed.Syntax=[ <\u0639\u062f\u062f> ]
SetTooltipMode.Syntax=[ <\u0634\u06cc\u0621>, <\u0639\u062f\u062f> ]
SetTrace.Syntax=[ <\u0634\u06cc\u0621>, <\u062f\u0631\u0633\u062a | \u063a\u0644\u0637> ]
Shear=\u0628\u0631\u0634\u06cc
Shear.Syntax=[ <\u0634\u06cc\u0621>, <\u062e\u0637>, <\u0646\u0633\u0628\u062a> ]
ShowLabel.Syntax=[ <\u0634\u06cc\u0621>, <\u0628\u0648\u0644\u06cc> ]
ShowLayer.Syntax=[ <\u0639\u062f\u062f> ]
Shuffle.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
SigmaXX.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
SigmaYY.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Simplify.Syntax=[ <\u062a\u0627\u0628\u0639> ]\n[ <\u0645\u062a\u0646> ]
Simplify.SyntaxCAS=[ <\u062a\u0627\u0628\u0639> ]
Slider=\u0644\u063a\u0632\u0646\u062f\u0647
Slope=\u0634\u06cc\u0628
Slope.Syntax=[ <\u062e\u0637> ]
Solutions.Syntax=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]
Solutions.SyntaxCAS=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u0644\u06cc\u0633\u062a \u0645\u0639\u0627\u062f\u0644\u0647\u200c\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
Solve=\u062d\u0644
Solve.Syntax=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]
Spearman=\u0627\u0633\u067e\u06cc\u0631\u0645\u0646
Spearman.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
Sphere=\u06a9\u064f\u0631\u0647
Spline=\u0627\u0633\u067e\u0644\u0627\u06cc\u0646
StartRecord.Syntax=[ ]\n[ <\u0628\u0648\u0644\u06cc> ]
StopLogging.Syntax=[ ]
Stretch.Syntax=[ <\u0634\u06cc\u0621>, <\u0628\u0631\u062f\u0627\u0631> ]\n[ <\u0634\u06cc\u0621>, <\u062e\u0637>, <\u0646\u0633\u0628\u062a> ]
Substitute=\u062c\u0627\u06cc\u06af\u0632\u06cc\u0646\u06cc
Sum=\u0645\u062c\u0645\u0648\u0639
SumSquaredErrors.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627>, <\u062a\u0627\u0628\u0639> ]
SurdText.Syntax=[ <\u0646\u0642\u0637\u0647> ]\n[ <\u0639\u062f\u062f> ]\n[ <\u0639\u062f\u062f>, <\u0644\u06cc\u0633\u062a> ]
Surface=\u0633\u0637\u062d
TDistribution=T\u062a\u0648\u0632\u06cc\u0639
TDistribution.SyntaxCAS=[ <\u062f\u0631\u062c\u0627\u062a \u0622\u0632\u0627\u062f\u06cc>, <\u0645\u0642\u062f\u0627\u0631 \u0645\u062a\u063a\u06cc\u0631> ]
TTest=T\u0622\u0632\u0645\u0648\u0646
Take.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a>, <\u0645\u0648\u0642\u0639\u06cc\u062a \u0634\u0631\u0648\u0639> ]\n[ <\u0644\u06cc\u0633\u062a>, <\u0645\u0648\u0642\u0639\u06cc\u062a \u0634\u0631\u0648\u0639>, <\u0645\u0648\u0642\u0639\u06cc\u062a \u067e\u0627\u06cc\u0627\u0646> ]
Tangent=\u062a\u0627\u0646\u0698\u0627\u0646\u062a
Tangent.SyntaxCAS=[ <\u062a\u0627\u0628\u0639>, <\u0639\u062f\u062f> ]\n[ <\u0634\u06cc\u0621>, <\u0646\u0642\u0637\u0647> ]
Tetrahedron=\u0686\u0647\u0627\u0631\u0636\u0644\u0639\u06cc
Text=\u0645\u062a\u0646
TextToUnicode.Syntax=[ "<\u0645\u062a\u0646>" ]
TiedRank.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
ToBase.Syntax=[ <\u067e\u0627\u06cc\u0647>, <\u0639\u062f\u062f> ]
ToComplex.Syntax=[ <\u0628\u0631\u062f\u0627\u0631> ]
ToExponential.SyntaxCAS=[ <\u0639\u062f\u062f \u0645\u062e\u062a\u0644\u0637> ]
ToPoint.Syntax=[ <\u0639\u062f\u062f \u0645\u062e\u062a\u0644\u0637> ]
ToPolar.Syntax=[ <\u0639\u062f\u062f \u0645\u062e\u062a\u0644\u0637> ]\n[ <\u0628\u0631\u062f\u0627\u0631> ]
ToolImage.Syntax=[ <\u0639\u062f\u062f> ]\n[ <\u0639\u062f\u062f>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0639\u062f\u062f>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Top=\u0628\u0627\u0644\u0627
Top.Syntax=[ <\u0686\u0647\u0627\u0631\u0636\u0644\u0639\u06cc> ]
Translate=\u0627\u0646\u062a\u0642\u0627\u0644
Transpose=\u062a\u0631\u0627\u0646\u0647\u0627\u062f\u0647
Transpose.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
TravelingSalesman.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
TriangleCenter.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0639\u062f\u062f> ]
TriangleCurve.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0645\u0639\u0627\u062f\u0644\u0647> ]
Triangular=\u0645\u062b\u0644\u062b\u06cc
TrigCombine.Syntax=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u062a\u0627\u0628\u0639 \u0647\u062f\u0641> ]
TrigExpand.Syntax=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u062a\u0627\u0628\u0639 \u0647\u062f\u0641> ]
TrigExpand.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u062a\u0627\u0628\u0639 \u0647\u062f\u0641> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u062a\u0627\u0628\u0639 \u0647\u062f\u0641>, <\u0645\u062a\u063a\u06cc\u0631 \u0647\u062f\u0641> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u062a\u0627\u0628\u0639 \u0647\u062f\u0641>, <\u0645\u062a\u063a\u06cc\u0631 \u0647\u062f\u0641>, <\u0645\u062a\u063a\u06cc\u0631 \u0647\u062f\u0641> ]
TrigSimplify.Syntax=[ <\u0639\u0628\u0627\u0631\u062a> ]
Trilinear.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0639\u062f\u062f>, <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
TurningPoint.Syntax=[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]
Turtle=\u0644\u0627\u06a9\u067e\u0634\u062a
Turtle.Syntax=[ ]
TurtleBack.Syntax=[ <\u0641\u0627\u0635\u0644\u0647>, <\u0644\u0627\u06a9\u067e\u0634\u062a> ]
TurtleForward.Syntax=[ <\u0644\u0627\u06a9\u200c\u067e\u0634\u062a>, <\u0641\u0627\u0635\u0644\u0647> ]
TurtleLeft.Syntax=[ <\u0644\u0627\u06a9\u200c\u067e\u0634\u062a>, <\u0632\u0627\u0648\u06cc\u0647> ]
TurtleRight.Syntax=[ <\u0632\u0627\u0648\u06cc\u0647>, <\u0644\u0627\u06a9\u067e\u0634\u062a> ]
UnicodeToLetter.Syntax=[ <\u0639\u062f\u062f \u0635\u062d\u06cc\u062d> ]
UnicodeToText.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627\u06cc \u0635\u062d\u06cc\u062d> ]
Uniform=\u06cc\u06a9\u0646\u0648\u0627\u062e\u062a
Union=\u0627\u062c\u062a\u0645\u0627\u0639
Union.Syntax=[ <\u0644\u06cc\u0633\u062a>, <\u0644\u06cc\u0633\u062a> ]\n[ <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc>, <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc> ]
Unique=\u0645\u0646\u062d\u0635\u0631\u0628\u0641\u0631\u062f
Unique.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
UnitOrthogonalVector.Syntax=[ <\u062e\u0637> ]\n[ <\u067e\u0627\u0631\u0647\u200c\u062e\u0637> ]\n[ <\u0628\u0631\u062f\u0627\u0631> ]
UnitOrthogonalVector.Syntax3D=[ <\u062e\u0637> ]\n[ <\u067e\u0627\u0631\u0647\u200c\u062e\u0637> ]\n[ <\u0628\u0631\u062f\u0627\u0631> ]\n[ <\u0635\u0641\u062d\u0647> ]
UnitOrthogonalVector.SyntaxCAS=[ <\u0628\u0631\u062f\u0627\u0631> ]
UnitVector.Syntax=[ <\u0634\u06cc\u0621> ]
UnitVector.SyntaxCAS=[ <\u0628\u0631\u062f\u0627\u0631> ]
UpdateConstruction.Syntax=[ ]\n[ <\u062a\u0639\u062f\u0627\u062f \u062f\u0641\u0639\u0627\u062a> ]
Variance=\u0648\u0627\u0631\u06cc\u0627\u0646\u0633
Variance.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
Variance.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
Vector=\u0628\u0631\u062f\u0627\u0631
Vertex=\u0631\u0623\u0633
Volume=\u062d\u062c\u0645
Volume.Syntax=[ <\u062d\u062c\u0645> ]
Voronoi.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Weibull=\u0648\u0627\u06cc\u0628\u0648\u0644
mad.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
mean.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
mean.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
stdev.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
stdevp.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
stdevp.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]