# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Lista>, <Lista>, ... ]
AffineRatio=RazãoAfim
AffineRatio.Syntax=[ <Ponto>, <Ponto>, <Ponto> ]
Angle=Ângulo
Angle.Syntax=[ <Objeto> ]\n[ <Vetor>, <Vetor> ]\n[ <Reta>, <Reta> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ângulo> ]
Angle.Syntax3D=[ <Objeto> ]\n[ <Vetor>, <Vetor> ]\n[ <Reta>, <Reta> ]\n[ <Reta>, <Plano> ]\n[ <Plano>, <Plano> ]\n[ <Ponto>, <Vértice>, <Ponto> ]\n[ <Ponto>, <Vértice>, <Ângulo> ]\n[ <Ponto>, <Ponto>, <Ponto>, <Direção> ]
AngularBisector=Bissetriz
AngularBisector.Syntax=[ <Reta>, <Reta> ]\n[ <Ponto>, <Ponto>, <Ponto> ]
Append=Anexar
Append.Syntax=[ <Lista>, <Objeto> ]\n[ <Objeto>, <Lista> ]
ApplyMatrix=AplicarMatriz
ApplyMatrix.Syntax=[ <Matriz>, <Objeto> ]
Arc=Arco
Arc.Syntax=[ <Círculo>, <Ponto>, <Ponto> ]\n[ <Elipse>, <Ponto>, <Ponto> ]\n[ <Círculo>, <Valor do Parâmetro>, <Valor do Parâmetro> ]\n[ <Elipse>, <Valor do Parâmetro>, <Valor do Parâmetro> ]
AreCollinear=SãoColineares
AreCollinear.Syntax=[ <Ponto>, <Ponto>, <Ponto> ]
AreConcurrent=SãoConcorrentes
AreConcurrent.Syntax=[ <Reta>, <Reta>, <Reta> ]
AreConcyclic=SãoConcíclicos
AreConcyclic.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Ponto> ]
AreCongruent=SãoCongruentes
AreCongruent.Syntax=[ <Objeto>, <Objeto> ]
AreEqual=SãoIguais
AreEqual.Syntax=[ <Objeto>, <Objeto> ]
AreParallel=SãoParalelas
AreParallel.Syntax=[ <Reta>, <Reta> ]
ArePerpendicular=SãoPerpendiculares
ArePerpendicular.Syntax=[ <Reta>, <Reta> ]
Area=Área
Area.Syntax=[ <Cônica> ]\n[ <Polígono> ]\n[ <Ponto>, ..., <Ponto> ]
Assume=Assuma
Assume.SyntaxCAS=[ <Condição>, <Expressão> ]
Asymptote=Assíntota
Asymptote.Syntax=[ <Cônica> ]\n[ <Função> ]\n[ <Curva Implícita> ]
AttachCopyToView=AnexarCópiaPara
AttachCopyToView.Syntax=[ <Objeto>, <Janela de Visualização 0|1|2> ]\n[ <Objeto>, <Janela de Visualização 0|1|2>, <Ponto 1>, <Ponto 2>, <Ponto da Tela 1>, <Ponto da Tela 2> ]
Axes=Eixos
Axes.Syntax=[ <Cônica> ]
Axes.Syntax3D=[ <Cônica> ]\n[ <Quádrica> ]
AxisStepX=PassoDoEixoX
AxisStepY=PassoDoEixoY
BarChart=DiagramaDeBarras
BarChart.Syntax=[ <Lista de Dados>, <Lista de Frequencias> ]\n[ <Lista de Dados Brutos>, <Largura das Barras>, <Fator de Escala Vertical (opcional)> ]\n[ <Lista de Dados>, <Lista de Frequencias>, <Largura das Barras> ]\n[ <Valor Inicial>, <Valor Final>, <Lista de Alturas> ]\n[ <Valor Inicial>, <Valor Final>, <Expressão>, <Variável>, <De (Número)>, <A (Número)> ]\n[ <Valor Inicial>, <Valor Final>, <Expressão>, <Variável>, <De (Número)>, <A (Número)>, <Passo> ]
BarCode=CódigoDeBarras
BarCode.Syntax=[ ]\n[ <Imagem> ]\n[ <Texto ou Número>, "<Formato (opcional)>", "<Correção de Erros (opcional)>", <Largura (opcional)>, <Altura (opcional)> ]
Barycenter=Baricentro
Barycenter.Syntax=[ <Lista de Pontos>, <Lista de Pesos> ]
Bernoulli=DistribuiçãoDeBernoulli
Bernoulli.Syntax=[ <Probabilidade>, <Acumulada (true | false)> ]
Binomial=CoeficienteBinomial
Binomial.Syntax=[ <Número n>, <Número r> ]
BinomialDist=DistribuiçãoBinomial
BinomialDist.Syntax=[ <Número de Tentativas>, <Probabilidade de Sucesso> ]\n[ <Número de Tentativas>, <Probabilidade de Sucesso>, <Acumulada (true | false)> ]\n[ <Número de Tentativas>, <Probabilidade de Sucesso>, <Valor da Variável>, <Acumulada (true | false)> ]
BinomialDist.SyntaxCAS=[ <Número de Tentativas>, <Probabilidade de Sucesso>, <Valor da Variável>, <Acumulada (true | false)> ]
Bottom=Embaixo
Bottom.Syntax=[ <Quádrica> ]
BoxPlot.Syntax=[ <Posição Vertical>, <Escala Vertical>, <Lista de Dados Brutos> ]\n[ <Posição Vertical>, <Escala Vertical>, <Lista de Dados Brutos>, <Outliers (true | false)> ]\n[ <Posição Vertical>, <Escala Vertical>, <Lista de Dados>, <Lista de Frequências>, <Outliers (true| false)> ]\n[ <Posição Vertical>, <Escalar Vertical>, <Valor Inicial>, <Q1>, <Mediana>, <Q3>, <Valor Final> ]
Button=Botão
Button.Syntax=[ ]\n[ <Legenda> ]
CFactor=FatorarNosComplexos
CFactor.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Variável> ]
CIFactor=FatorarNosComplexosComCoeficientesIrracionais
CIFactor.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Variável> ]
CSolutions=SoluçõesNosComplexos
CSolutions.SyntaxCAS=[ <Equação> ]\n[ <Equação>, <Variável> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
CSolve=ResolverNosComplexos
CSolve.SyntaxCAS=[ <Equação> ]\n[ <Equação>, <Variável> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
Cauchy=DistribuiçãoDeCauchy
Cauchy.Syntax=[ <Mediana>, <Escala>, <Valor da Variável> ]\n[ <Mediana>, <Escala>, x, <Acumulada (true | false)> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Escala>, x ]
Cell=Célula
Cell.Syntax=[ <Coluna>, <Linha> ]
CellRange=Bloco
CellRange.Syntax=[ <Célula Inicial>, <Célula Final> ]
Center=Centro
Center.Syntax=[ <Cônica> ]
Center.Syntax3D=[ <Cônica> ]\n[ <Quádrica> ]
CenterView=CentralizarJanelaDeVisualização
CenterView.Syntax=[ <Ponto> ]
Centroid=CentroDeGravidade
Centroid.Syntax=[ <Polígono> ]
Checkbox=CaixaDeSeleção
Checkbox.Syntax=[ ]\n[ <Legenda> ]\n[ <Lista> ]\n[ <Legenda>, <Lista> ]
ChiSquared=DistribuiçãoChiQuadrado
ChiSquared.Syntax=[ <Graus de Liberdade>, <Valor da Variável> ]\n[ <Graus de Liberdade>, x, <Acumulada (true | false)> ]
ChiSquared.SyntaxCAS=[ <Graus de Liberdade>, <Variável> ]
ChiSquaredTest=TesteChiQuadrado
ChiSquaredTest.Syntax=[ <Matriz> ]\n[ <Lista>, <Lista> ]\n[ <Matriz>, <Matriz> ]
Circle=Círculo
Circle.Syntax=[ <Ponto>, <Medida do Raio> ]\n[ <Ponto>, <Segmento> ]\n[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]
Circle.Syntax3D=[ <Ponto>, <Raio> ]\n[ <Ponto>, <Segmento> ]\n[ <Ponto>, <Ponto> ]\n[ <Reta>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Raio>, <Direção> ]\n[ <Ponto>, <Ponto>, <Direção> ]
CircleArc=ArcoCircular
CircleArc.Syntax=[ <Centro>, <Ponto>, <Ponto> ]
CircleSector=SetorCircular
CircleSector.Syntax=[ <Centro>, <Ponto>, <Ponto> ]
CircumcircleArc=ArcoCircuncircular
CircumcircleArc.Syntax=[ <Ponto>, <Ponto>, <Ponto> ]
CircumcircleSector=SetorCircuncircular
CircumcircleSector.Syntax=[ <Ponto>, <Ponto>, <Ponto> ]
Circumference=Perímetro
Circumference.Syntax=[ <Polígono> ]\n[ <Cônica> ]\n[ <Lugar Geométrico> ]
Classes.Syntax=[ <Lista de Dados>, <Quantidade de Classes> ]\n[ <Lista de Dados>, <Início>, <Largura das Classes> ]
ClosestPoint=PontoMaisPróximo
ClosestPoint.Syntax=[ <Caminho>, <Ponto> ]\n[ <Reta>, <Reta> ]
ClosestPointRegion=PontoMaisPróximoDaRegião
ClosestPointRegion.Syntax=[ <Região>, <Ponto> ]
Coefficients=Coeficientes
Coefficients.Syntax=[ <Polinômio> ]\n[ <Cônica> ]
Coefficients.SyntaxCAS=[ <Polinômio> ]\n[ <Polinômio>, <Variável> ]
Column=Coluna
Column.Syntax=[ <Célula da Planilha> ]
ColumnName=NomeDaColuna
ColumnName.Syntax=[ <Célula da Planilha> ]
Command=Comando
CommonDenominator=DenominadorComum
CommonDenominator.Syntax=[ <Expressão>, <Expressão> ]
CompetitionRank=ClassificaçãoDeCompetência
CompetitionRank.Syntax=[ <Lista> ]
CompleteSquare=CompletarQuadrados
CompleteSquare.Syntax=[ <Função Quadrática> ]
ComplexRoot=RaízesComplexas
ComplexRoot.Syntax=[ <Polinômio> ]
Cone.Syntax=[ <Círculo>, <Altura> ]\n[ <Ponto>, <Ponto>, <Raio> ]\n[ <Ponto>, <Vetor>, <Ângulo> ]
Conic=Cônica
Conic.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Ponto>, <Ponto> ]\n[ <Número>, <Número>, <Número>, <Número>, <Número>, <Número> ]
ConstructionStep=PassoDaConstrução
ConstructionStep.Syntax=[ ]\n[ <Objeto> ]
ContingencyTable=TabelaDeContingência
ContingencyTable.Syntax=[ <Lista de Textos>, <Lista de Textos> ]\n[ <Lista de Textos>, <Lista de Textos>, <Opções> ]\n[ <Lista dos Valores das Linhas>, <Lista dos Valores das Colunas>, <Tabela de Frequência> ]\n[ <Lista dos Valores das Linhas>, <Lista dos Valores das Colunas>, <Tabela de Frequência>, <Opções> ]
ContinuedFraction=FraçãoContínua
ContinuedFraction.Syntax=[ <Número> ]\n[ <Número>, <Nível> ]\n[ <Número>, <Nível>, <Somente Coeficientes true|false> ]
ConvexHull=FechoConvexo
ConvexHull.Syntax=[ <Lista de Pontos> ]
CopyFreeObject=CopiarObjetoLivre
CopyFreeObject.Syntax=[ <Objeto> ]
Corner=Canto
Corner.Syntax=[ <Número do Canto> ]\n[ <Imagem>, <Número do Canto> ]\n[ <Texto>, <Número do Canto> ]\n[ <Janela de Visualização>, <Número do Canto> ]
CountIf=ContarSe
CountIf.Syntax=[ <Condição>, <Lista> ]\n[ <Condição>, <Variável>, <Lista> ]
Covariance=Covariância
Covariance.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Números>, <Lista de Números> ]
Cross=ProdutoVetorial
Cross.Syntax=[ <Vetor>, <Vetor> ]
CrossRatio=RazãoDupla
CrossRatio.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Ponto> ]
Cube=Cubo
Cube.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Direção> ]
Cubic=Cúbica
Cubic.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Número> ]
Curvature=Curvatura
Curvature.Syntax=[ <Ponto>, <Objeto> ]
CurvatureVector=VetorCurvatura
CurvatureVector.Syntax=[ <Ponto>, <Objeto> ]
CurveCartesian=Curva
CurveCartesian.Syntax=[ <Expressão>, <Expressão>, <Variável>, <Valor Inicial>, <Valor Final> ]
CurveCartesian.Syntax3D=[ <Expressão>, <Expressão>, <Variável>, <Valor Inicial>, <Valor Final> ]\n[ <Expressão>, <Expressão>, <Expressão>, <Variável>, <Valor Inicial>, <Valor Final> ]
Cylinder=Cilindro
Cylinder.Syntax=[ <Círculo>, <Altura> ]\n[ <Ponto>, <Ponto>, <Raio> ]
DataFunction=FunçãoDeDados
DataFunction.Syntax=[ <Lista de Números>, <Lista de Números> ]
Defined=EstáDefinido
Defined.Syntax=[ <Objeto> ]
Degree=Grau
Degree.Syntax=[ <Polinômio> ]
Degree.SyntaxCAS=[ <Polinômio> ]\n[ <Polinômio>, <Variável> ]
DelauneyTriangulation=TriangulaçãoDeDelaunay
DelauneyTriangulation.Syntax=[ <Lista de Pontos> ]
Delete=Apagar
Delete.Syntax=[ <Objeto> ]
Denominator=Denominador
Denominator.Syntax=[ <Número> ]\n[ <Função> ]
Denominator.SyntaxCAS=[ <Expressão> ]
DensityPlot=DiagramaDeDensidade
Derivative=Derivada
Derivative.Syntax=[ <Função> ]\n[ <Curva> ]\n[ <Função>, <Número> ]\n[ <Curva>, <Número> ]
Derivative.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Variável> ]\n[ <Expressão>, <Variável>, <Número> ]
Determinant=Determinante
Determinant.Syntax=[ <Matriz> ]
Diameter=DiâmetroConjugado
Diameter.Syntax=[ <Vetor>, <Cônica> ]\n[ <Reta>, <Cônica> ]
Difference=Diferença
Difference.Syntax=[ <Polígono>, <Polígono> ]
Dilate=Homotetia
Dilate.Syntax=[ <Objeto>, <Razão> ]\n[ <Objeto>, <Razão>, <Centro> ]
Dimension=Dimensão
Dimension.Syntax=[ <Objeto> ]
Direction=Direção
Direction.Syntax=[ <Reta> ]\n[ <Semirreta> ]\n[ <Segmento> ]
Directrix=Diretriz
Directrix.Syntax=[ <Cônica> ]
Distance=Distância
Distance.Syntax=[ <Ponto>, <Objeto> ]\n[ <Reta>, <Reta> ]
Div=Quociente
Div.Syntax=[ <Número Dividendo>, <Número Divisor> ]\n[ <Polinômio Dividendo>, <Polinômio Divisor> ]
Division=DivisãoEuclidiana
Division.Syntax=[ <Número Dividendo>, <Número Divisor> ]\n[ <Polinômio Dividendo>, <Polinômio Divisor> ]
Divisors=NúmeroDeDivisores
Divisors.Syntax=[ <Número> ]
DivisorsList=ListaDosDivisores
DivisorsList.Syntax=[ <Número> ]
DivisorsSum=SomaDosDivisores
DivisorsSum.Syntax=[ <Número> ]
Dodecahedron=Dodecaedro
Dodecahedron.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Direção> ]
Dot=ProdutoEscalar
Dot.Syntax=[ <Vetor>, <Vetor> ]
DotPlot=DiagramaDePontos
DotPlot.Syntax=[ <Lista de Dados Brutos>, <Empilhar Pontos Adjacentes (opcional)>, <Fator de Escala (opcional)> ]
DynamicCoordinates=CoordenadasDinâmicas
DynamicCoordinates.Syntax=[ <Ponto>, <Número (Coordenada x)>, <Número (Coordenada y)> ]\n[ <POnto>, <Número (Coordenada x)>, <Número (Coordenada y)>, <Número (Coordenada z)> ]
Eccentricity=Excentricidade
Eccentricity.Syntax=[ <Cônica> ]
Eigenvalues=Autovalores
Eigenvalues.SyntaxCAS=[ <Matriz> ]
Eigenvectors=Autovetores
Eigenvectors.SyntaxCAS=[ <Matriz> ]
Element=Elemento
Element.Syntax=[ <Lista>, <Posição do Elemento> ]\n[ <Matriz>, <Linha>, <Coluna> ]\n[ <Lista>, <Índice 1>, <Índice 2>, ... ]
Element.SyntaxCAS=[ <Lista>, <Posição do Elemento> ]\n[ <Matriz>, <Linha>, <Coluna> ]
Eliminate=Eliminar
Eliminate.Syntax=[ <Lista de Polinômios>, <Lista de Variáveis> ]
Ellipse=Elipse
Ellipse.Syntax=[ <Foco>, <Foco>, <Comprimento do Semieixo Maior> ]\n[ <Foco>, <Foco>, <Segmento> ]\n[ <Ponto>, <Ponto>, <Ponto> ]
Ends=Bases
Ends.Syntax=[ <Quádrica> ]
Envelope.Syntax=[ <Caminho>, <Ponto> ]
Erlang=DistribuiçãoDeErlang
Erlang.Syntax=[ <Forma>, <Taxa>, <Valor da Variável> ]\n[ <Forma>, <Taxa>, x, <Acumulada (true | false)> ]
Evaluate=Avaliar
Excentricity=ExcentricidadeLinear
Excentricity.Syntax=[ <Cônica> ]
Execute=Executar
Execute.Syntax=[ <Lista de Textos> ]\n[ <Lista de Textos>, <Parâmetro>, <Parâmetro>, ... ]
Expand=Expandir
Expand.Syntax=[ <Função> ]
Exponential=DistribuiçãoExponencial
Exponential.Syntax=[ <Lambda>, <Valor da Variável> ]\n[ <Lambda>, x, <Acumulativa (true | false)> ]
Exponential.SyntaxCAS=[ <Lambda>, x ]\n[ <Lambda>, x, <Acumulada (true | false)> ]
ExportImage=ExportarImagem
ExportImage.Syntax=[ <Propriedade>, <Valor>, <Propriedade, <Valor>, ... ]
Extremum=Extremo
Extremum.Syntax=[ <Polinômio> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]
FDistribution=DistribuiçãoF
FDistribution.Syntax=[ <Graus de Liberdade no Numerador>, <Graus de Liberdade no Denominador>, <Valor da Variável> ]\n[ <Graus de Liberdade no Numerador>, <Graus de Liberdade no Denominador>, x, <Acumulada (true | false)> ]
FDistribution.SyntaxCAS=[ <Graus de Liberdade no Numerador>, <Graus de Liberdade no Denominador>, x ]
Factor=Fatorar
Factor.Syntax=[ <Polinômio> ]
Factor.SyntaxCAS=[ <Número> ]\n[ <Polinômio> ]\n[ <Expressão>, <Variável> ]
Factors=Fatores
Factors.Syntax=[ <Polinômio> ]\n[ <Número> ]
FillCells=PreencherCélulas
FillCells.Syntax=[ <Bloco de Células>, <Objeto> ]\n[ <Célula>, <Lista> ]\n[ <Célula>, <Matriz> ]
FillColumn=PreencherColuna
FillColumn.Syntax=[ <Coluna>, <Lista> ]
FillRow=PreencherLinha
FillRow.Syntax=[ <Linha>, <Lista> ]
First=Primeiros
First.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <Número de Elementos> ]\n[ <Texto>, <Número de Elementos> ]\n[ <Lugar Geométrico>, <Número de Elementos> ]
First.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Número de Elementos> ]
FirstAxis=EixoMaior
FirstAxis.Syntax=[ <Cônica> ]
FirstAxisLength=ComprimentoDoSemieixoMaior
FirstAxisLength.Syntax=[ <Cônica> ]
Fit=Regressão
Fit.Syntax=[ <Lista de Pontos>, <Lista de Funções> ]\n[ <Lista de Pontos>, <Função> ]
FitExp=RegressãoExponencial
FitExp.Syntax=[ <Lista de Pontos> ]
FitGrowth=RegressãoDeCrescimento
FitGrowth.Syntax=[ <Lista de Pontos> ]
FitImplicit=RegressãoImplícita
FitImplicit.Syntax=[ <Lista de Pontos>, <Ordem> ]
FitLineX=RegressãoLinearX
FitLineX.Syntax=[ <Lista de Pontos> ]
FitLineY=RegressãoLinear
FitLineY.Syntax=[ <Lista de Pontos> ]
FitLog=RegressãoLogarítmica
FitLog.Syntax=[ <Lista de Pontos> ]
FitLogistic=RegressãoLogística
FitLogistic.Syntax=[ <Lista de Pontos> ]
FitPoly=RegressãoPolinomial
FitPoly.Syntax=[ <Lista de Pontos>, <Grau do Polinômio> ]\n[ <Função à Mão Livre>, <Grau do Polinômio> ]
FitPow=RegressãoPotência
FitPow.Syntax=[ <Lista de Pontos> ]
FitSin=RegressãoSinusoidal
FitSin.Syntax=[ <Lista de Pontos> ]
Flatten=Nivelar
Flatten.Syntax=[ <Lista> ]
Focus=Foco
Focus.Syntax=[ <Cônica> ]
FractionText=FraçãoEmTexto
FractionText.Syntax=[ <Número> ]\n[ <Ponto> ]
Frequency=Frequência
Frequency.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Acumulada (true | false)>, <Lista dos Dados Brutos> ]\n[ <Lista dos Limites das Classes>, <Lista dos Dados Brutos> ]\n[ <Lista de Textos>, <Lista de Textos> ]\n[ <Acumulada (true | false)>, <Lista dos Limites das Classes>, <Lista dos Dados Brutos> ]\n[ <Lista dos Limites das Classes>, <Lista dos Dados Brutos>, <Usar Densidade (true | false)>, <Fator de Escala da Densidade (opcional)> ]\n[ <Acumulada (true | false)>, <Lista dos Limites das Classes>, <Lista dos Dados Brutos>, <Usar Densidade (true | false)>, <Fator de Escala da Densidade (opcional)> ]
FrequencyPolygon=PolígonoDeFrequências
FrequencyPolygon.Syntax=[ <Lista dos Limites das Classes>, <Lista das Alturas> ]\n[ <Lista dos Limites das Classes>, <Lista dos Dados Brutos>, <Usar Densidade (true | false)>, <Fator de Escala da Densidade (opcional)> ]\n[ <Acumulada (true | false)>, <Lista dos Limites das Classes>, <Lista dos Dados Brutos>, <Usar Densidade (true | false)>, <Fator de Escala da Densidade (opcional)> ]
FrequencyTable=TabelaDeFrequências
FrequencyTable.Syntax=[ <Lista de Dados Brutos>, <Fator de Escala (opcional)> ]\n[ <Acumulada (true | false)>, <Lista de Dados Brutos> ]\n[ <Lista dos Limites das Classes>, <Lista dos Dados Brutos> ]\n[ <Acumulada (true | false)>, <Lista dos Limites das Classes>, <Lista dos Dados Brutos> ]\n[ <Lista dos Limites das Classes>, <Lista dos Dados Brutos>, <<Usar Densidade (true | false)>, <Fator de Escala da Densidade (opcional)> ]\n[ <Acumulada (true | false)>, <Lista dos Limites das Classes>, <Lista dos Dados Brutos>, <<Usar Densidade (true | false)>, <Fator de Escala da Densidade (opcional)> ]
FromBase=DaBase
FromBase.Syntax=[ "<Número como Texto>", <Base> ]
Function=Função
Function.Syntax=[ <Lista de Números> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]
Function.Syntax3D=[ <Lista de Números> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]\n[ <Expressão>, <Variável 1>, <Valor Inicial>, <Valor Final>, <Variável 2>, <Valor Inicial>, <Valor Final> ]
Function.SyntaxCAS=[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]
FutureValue=ValorFuturo
FutureValue.Syntax=[ <Taxa>, <Número de Perídos>, <Pagamento>, <Valor Presente (opcional)>, <Tipo (opcional)> ]
GCD=MDC
GCD.Syntax=[ <Lista de Números> ]\n[ <Número>, <Número> ]
GCD.SyntaxCAS=[ <Lista de Números> ]\n[ <Lista de Polinômios> ]\n[ <Número>, <Número> ]\n[ <Polinômio>, <Polinômio> ]
Gamma=DistribuiçãoGama
Gamma.Syntax=[ <Alfa>, <Beta>, <Valor da Variável> ]\n[ <Alfa>, <Beta>, x, <Acumulada (true | false)> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, x ]
GeometricMean=MédiaGeométrica
GeometricMean.Syntax=[ <Lista de Números> ]
GetTime=Relógio
GetTime.Syntax=[ ]\n[ <Formato> ]
GroebnerDegRevLex=GroebnerLexRevGra
GroebnerDegRevLex.Syntax=[ <Lista de Polinômios> ]\n[ <Lista de Polinômios>, <Lista de Variáveis> ]
GroebnerLex.Syntax=[ <Lista de Polinômios> ]\n[ <Lista de Polinômios>, <Lista de Variáveis> ]
GroebnerLexDeg=GroebnerLexGra
GroebnerLexDeg.Syntax=[ <Lista de Polinômios> ]\n[ <Lista de Polinômios>, <Lista de Variáveis> ]
HarmonicMean=MédiaHarmônica
HarmonicMean.Syntax=[ <Lista de Números> ]
Height=Altura
Height.Syntax=[ <Sólido> ]
HideLayer=EsconderCamada
HideLayer.Syntax=[ <Número> ]
Histogram=Histograma
Histogram.Syntax=[ <Lista dos Limites das Classes>, <Lista das Alturas> ]\n[ <Lista dos Limites das Classes>, <Lista dos Dados Brutos> ]\n[ <Acumulada (true | false)>, <Lista dos Limites das Classes>, <Lista dos Dados Brutos>, <Usar Densidade (true | false)>, <Fator de Escala da Densidade (opcional)> ]
HistogramRight=HistogramaDireita
HistogramRight.Syntax=[ <Lista dos Limites das Classes>, <Lista das Alturas> ]\n[ <Lista dos Limites das Classes>, <Lista dos Dados Brutos>, <Usar Densidade (true | false)>, <Fator de Escala da Densidade (opcional)> ]\n[ <Acumulada (true | false)>, <Lista dos Limites das Classes>, <Lista dos Dados Brutos>, <Usar Densidade (true | false)>, <Fator de Escala da Densidade (opcional)> ]
HyperGeometric=DistribuiçãoHipergeométrica
HyperGeometric.Syntax=[ <Tamanho da População>, <Número de Sucessos>, <Tamanho da Amostra> ]\n[ <Tamanho da População>, <Número de Sucessos>, <Tamanho da Amostra>, <Acumulada (true | false)> ]\n[ <Tamanho da População>, <Número de Sucessos>, <Tamanho da Amostra>, <Valor da Variável>, <Acumulada (true | false)> ]
HyperGeometric.SyntaxCAS=[ <Tamanho da População>, <Número de Sucessos>, <Tamanho da Amostra>, x, <Acumulada (true | false)> ]
Hyperbola=Hipérbole
Hyperbola.Syntax=[ <Foco>, <Foco>, <Comprimento do Semieixo Maior> ]\n[ <Foco>, <Foco>, <Segmento> ]\n[ <Ponto>, <Ponto>, <Ponto> ]
IFactor=FatorarComCoeficientesIrracionais
IFactor.Syntax=[ <Polinômio> ]
IFactor.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Variável> ]
Icosahedron=Icosaedro
Icosahedron.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Direção> ]
Identity=MatrizIdentidade
Identity.Syntax=[ <Número> ]
If=Se
If.Syntax=[ <Condição>, <Então> ]\n[ <Condição>, <Então>, <Senão> ]
ImplicitCurve=CurvaImplícita
ImplicitCurve.Syntax=[ <Lista de Pontos> ]\n[ <f(x, y)> ]
ImplicitDerivative=DerivadaImplícita
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Expressão>, <Variável Independente>, <Variável Dependente> ]
Incircle=CírculoInscrito
Incircle.Syntax=[ <Ponto>, <Ponto>, <Ponto> ]
IndexOf=ÍndiceDe
IndexOf.Syntax=[ <Objeto>, <Lista> ]\n[ <Texto>, <Texto> ]\n[ <Objeto>, <Lista>, <Índice Inicial> ]\n[ <Texto>, <Texto>, <Índice Inicial> ]
InfiniteCone=ConeInfinito
InfiniteCone.Syntax=[ <Ponto>, <Vetor>, <Ângulo> ]\n[ <Ponto>, <Ponto>, <Ângulo> ]\n[ <Ponto>, <Reta>, <Ângulo> ]
InfiniteCylinder=CilindroInfinito
InfiniteCylinder.Syntax=[ <Reta>, <Raio> ]\n[ <Ponto>, <Vetor>, <Raio> ]\n[ <Ponto>, <Ponto>, <Raio> ]
Insert=Inserir
Insert.Syntax=[ <Lista>, <Lista>, <Posição> ]\n[ <Objeto>, <Lista>, <Posição> ]
Integral.Syntax=[ <Função> ]\n[ <Função>, <Variável> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final>, <Calcular (true | false)> ]
Integral.SyntaxCAS=[ <Função> ]\n[ <Função>, <Variável> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]\n[ <Função>, <Variável>, <Valor de x Inicial>, <Valor de x Final> ]
IntegralBetween=IntegralEntre
IntegralBetween.Syntax=[ <Função>, <Função>, <Valor de x Inicial>, <Valor de x Final> ]\n[ <Função>, <Função>, <Valor de x Inicial>, <Valor de x Final>, <Calcular (true | false)> ]
IntegralBetween.SyntaxCAS=[ <Função>, <Função>, <Valor de x Inicial>, <Valor de x Final> ]\n[ <Função>, <Função>, <Variável>, <Valor de x Inicial>, <Valor de x Final> ]
InteriorAngles=ÂngulosInternos
InteriorAngles.Syntax=[ <Polígono> ]
Intersect=Interseção
Intersect.Syntax=[ <Objeto>, <Objeto> ]\n[ <Objeto>, <Objeto>, <Índice do Ponto de Interseção> ]\n[ <Objeto>, <Objeto>, <Ponto Inicial> ]\n[ <Função>, <Função>, <Valor de x Inicial>, <Valor de x Final> ]\n[ <Curva 1>, <Curva 2>, <Parâmetro 1>, <Parâmetro 2> ]
Intersect.SyntaxCAS=[ <Função>, <Função> ]
IntersectConic=InterseçãoCônica
IntersectConic.Syntax=[ <Plano>, <Quádica> ]\n[ <Quádrica>, <Quádrica> ]
IntersectPath=InterseçãoGeométrica
IntersectPath.Syntax=[ <Reta>, <Polígono> ]\n[ <Polígono>, <Polígono> ]
IntersectPath.Syntax3D=[ <Reta>, <Polígono> ]\n[ <Polígono>, <Polígono> ]\n[ <Plano>, <Polígono> ]\n[ <Plano>, <Quádrica> ]
Intersection=InterseçãoDeListas
Intersection.Syntax=[ <Lista>, <Lista> ]
InverseBinomial=DistribuiçãoBinomialInversa
InverseBinomial.Syntax=[ <Número de Tentativas>, <Probabilidade de Sucesso>, <Probabilidade> ]
InverseCauchy=DistribuiçãoDeCauchyInversa
InverseCauchy.Syntax=[ <Mediana>, <Escala>, <Probabilidade> ]
InverseChiSquared=DistribuiçãoChiQuadradoInversa
InverseChiSquared.Syntax=[ <Graus de Liberdade>, <Probabilidade> ]
InverseExponential=DistribuiçãoExponencialInversa
InverseExponential.Syntax=[ <Lambda>, <Probabilidade> ]
InverseFDistribution=DistribuiçãoFInversa
InverseFDistribution.Syntax=[ <Graus de Liberdade no Numerador>, <Graus de Liberdade no Denominador>, <Probabilidade> ]
InverseGamma=DistribuiçãoGamaInversa
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Probabilidade> ]
InverseHyperGeometric=DistribuiçãoHipergeométricaInversa
InverseHyperGeometric.Syntax=[ <Tamanho da População>, <Número de Sucessos>, <Tamanho da Amostra>, <Probabilidade> ]
InverseLaplace=TransformadaInversaDeLaplace
InverseLaplace.Syntax=[ <Função> ]\n[ <Função>, <Variável> ]\n[ <Função>, <Variável>, <Variável> ]
InverseLogNormal=DistribuiçãoLogNormalInversa
InverseLogNormal.Syntax=[ <Média>, <Desvio Padrão>, <Probabilidade> ]
InverseLogistic=DistribuiçãoLogísticaInversa
InverseLogistic.Syntax=[ <Média>, <Escala>, <Probabilidade> ]
InverseNormal=DistribuiçãoNormalInversa
InverseNormal.Syntax=[ <Média>, <Desvio Padrão>, <Probabilidade> ]
InversePascal=DistribuiçãoDePascalInversa
InversePascal.Syntax=[ <n>, <p>, <Probabilidade> ]
InversePoisson=DistribuiçãoDePoissonInversa
InversePoisson.Syntax=[ <Média>, <Probabilidade> ]
InverseTDistribution=DistribuiçãoTInversa
InverseTDistribution.Syntax=[ <Graus de Liberdade>, <Probabilidade> ]
InverseWeibull=DistribuiçãoDeWeibullInversa
InverseWeibull.Syntax=[ <Forma>, <Escala>, <Probabilidade> ]
InverseZipf=DistribuiçãoDeZipfInversa
InverseZipf.Syntax=[ <Número de Elementos>, <Expoente>, <Probabilidade> ]
Invert=MatrizInversa
Invert.Syntax=[ <Matriz> ]\n[ <Função> ]
IsInRegion=PertenceARegião
IsInRegion.Syntax=[ <Ponto>, <Região> ]
IsInteger=ÉInteiro
IsInteger.Syntax=[ <Número> ]
IsPrime=ÉPrimo
IsPrime.Syntax=[ <Número> ]
IsTangent=ÉTangente
IsTangent.Syntax=[ <Reta>, <Cônica> ]
Iteration=Iteração
Iteration.Syntax=[ <Função>, <Valor Inicial>, <Número de Iterações> ]\n[ <Expressão>, <Variáveis>, <Valores Iniciais>, <Contagem> ]
IterationList=ListaDeIteração
IterationList.Syntax=[ <Função>, <Valor inicial>, <Número de Iterações> ]\n[ <Expressão>, <Variáveis>, <Valores Iniciais>, <Contagem> ]
Join=Concatenar
Join.Syntax=[ <Lista de Listas> ]\n[ <Lista>, <Lista>, ... ]
JordanDiagonalization=DiagonalizaçãoDeJordan
JordanDiagonalization.SyntaxCAS=[ <Matriz> ]
KeepIf=ManterSe
KeepIf.Syntax=[ <Condição>, <Lista> ]\n[ <Condição>, <Variável>, <Lista> ]
LCM=MMC
LCM.Syntax=[ <Lista de Números> ]\n[ <Númeror>, <Número> ]
LCM.SyntaxCAS=[ <Lista de Números> ]\n[ <Lista de Polinômios> ]\n[ <Número>, <Número> ]\n[ <Polinômio>, <Polinômio> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Objeto> ]\n[ <Objeto>, <Substituição de Variáveis (true | false)> ]\n[ <Objeto>, <Substituição de Variáveis (true | false)>, <Exibir Nome (true | false)> ]
Laplace=TransformadaDeLaplace
Laplace.Syntax=[ <Função> ]\n[ <Função>, <Variável> ]\n[ <Função>, <Variável>, <Variável> ]
Last=Últimos
Last.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Listat>, <Número de Elementos> ]\n[ <Texto>, <Número de Elementos> ]
Last.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Número de Elementos> ]
LeftSide=LadoEsquerdo
LeftSide.Syntax=[ <Equação> ]
LeftSide.SyntaxCAS=[ <Equação> ]\n[ <Lista de Equações> ]\n[ <Lista de Equações>, <Índice> ]
LeftSum=SomaDeRiemanÀEsquerda
LeftSum.Syntax=[ <Função>, <Valor de x Inicial>, <Valor de x Final>, <Número de Retângulos> ]
Length=Comprimento
Length.Syntax=[ <Objeto> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]\n[ <Função>, <Ponto Inicial>, <Ponto Final> ]\n[ <Curva>, <Valor de t Inicial>, <Valor de t Final> ]\n[ <Curva>, <Ponto Inicial>, <Ponto Final> ]
Length.SyntaxCAS=[ <Lista> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]\n[ <Função>, <Variável>, <Ponto Inicial>, <Ponto Final> ]
LetterToUnicode=LetraParaUnicode
LetterToUnicode.Syntax=[ "<Letra>" ]
Limit=Limite
Limit.Syntax=[ <Função>, <Número> ]
Limit.SyntaxCAS=[ <Expressão>, <Valor> ]\n[ <Expressão>, <Variável>, <Valor> ]
LimitAbove=LimiteSuperior
LimitAbove.Syntax=[ <Função>, <Valor> ]
LimitAbove.SyntaxCAS=[ <Expressão>, <Valor> ]\n[ <Expressão>, <Variável>, <Valor> ]
LimitBelow=LimiteInferior
LimitBelow.Syntax=[ <Função>, <Valor> ]
LimitBelow.SyntaxCAS=[ <Expressão>, <Valor> ]\n[ <Expressão>, <Variável>, <Valor> ]
Line=Reta
Line.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Reta Paralela> ]\n[ <Ponto>, <Vetor Diretor> ]
LineBisector=Mediatriz
LineBisector.Syntax=[ <Segmento> ]\n[ <Ponto>, <Ponto> ]
LineBisector.Syntax3D=[ <Segmento> ]\n[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Direção> ]
Locus=LugarGeométrico
Locus.Syntax=[ <Ponto do Lugar Geométrico>, <Ponto> ]\n[ <Ponto do Lugar Geométrico>, <Controle Deslizante> ]\n[ <Campo de Direções>, <Ponto> ]\n[ <f(x, y)>, <Ponto> ]
LocusEquation=EquaçãoDoLugarGeométrico
LocusEquation.Syntax=[ <Lugar Geométrico> ]\n[ <Ponto do Lugar Geométrico>, <Ponto Móvel> ]
LogNormal=DistribuiçãoLogNormal
LogNormal.Syntax=[ <Média>, <Desvio Padrão>, <Valor da Variável> ]\n[ <Média>, <Desvio Padrão>, x, <Acumulada (true | false)> ]
Logistic=DistribuiçãoLogística
Logistic.Syntax=[ <Média>, <Escala>, <Valor da Variável> ]\n[ <Média>, <Escala>, x, <Acumulada (true | false)> ]
LowerSum=SomaDeRiemannInferior
LowerSum.Syntax=[ <Função>, <Valor de x Inicial>, <Valor de x Final>, <Número de Retângulos> ]
MAD=DMA
MAD.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
MatrixPlot=DesenharMatriz
MatrixRank=Posto
Max=Máximo
Max.Syntax=[ <Intervalo> ]\n[ <Lista> ]\n[ <Número>, <Número> ]\n[ <Lista de Dados>, <Lista de Frequências> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]
Max.SyntaxCAS=[ <Lista> ]\n[ <Número>, <Número> ]
Maximize=Maximizar
Maximize.Syntax=[ <Número Dependente>, <Número Livre> ]\n[ <Número Dependente>, <Ponto em Caminho> ]
Mean=Média
Mean.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Mean.SyntaxCAS=[ <Lista de Números> ]
MeanX=MédiaX
MeanX.Syntax=[ <Lista de Pontos> ]
MeanY=MédiaY
MeanY.Syntax=[ <Lista de Pontos> ]
Median=Mediana
Median.Syntax=[ <Lista de Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Median.SyntaxCAS=[ <Lista de Números> ]
Midpoint=PontoMédio
Midpoint.Syntax=[ <Segmento> ]\n[ <Cônica> ]\n[ <Intervalo> ]\n[ <Ponto>, <Ponto> ]
Min=Mínimo
Min.Syntax=[ <Intervalo> ]\n[ <Lista> ]\n[ <Número>, <Número> ]\n[ <Lista de Dados>, <Lista de Frequências> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]
Min.SyntaxCAS=[ <Listas> ]\n[ <Número>, <Número> ]
Minimize=Minimizar
Minimize.Syntax=[ <Número Dependente>, <Número Livre> ]\n[ <Número Dependente>, <Ponto em Caminho> ]
MinimumSpanningTree=ÁrvoreGeradoraMínima
MinimumSpanningTree.Syntax=[ <Lista de Pontos> ]
Mirror=Reflexão
Mirror.Syntax=[ <Objeto>, <Ponto> ]\n[ <Objeto>, <Reta> ]\n[ <Objeto>, <Círculo> ]
Mirror.Syntax3D=[ <Objeto>, <Ponto> ]\n[ <Objeto>, <Reta> ]\n[ <Objeto>, <Plano> ]\n[ <Objeto>, <Círculo> ]
MixedNumber=FraçãoPrópria
MixedNumber.SyntaxCAS=[ <Número> ]
Mod=Resto
Mod.Syntax=[ <Número Dividendo>, <Número Divisor> ]\n[ <Polinômio Dividendo>, <Polinômio Divisor> ]
Mode=Moda
Mode.Syntax=[ <Lista de Números> ]
NDerivative=DerivadaNumérica
NDerivative.Syntax=[ <Função> ]
NIntegral=IntegralNumérica
NIntegral.Syntax=[ <Função> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]
NIntegral.SyntaxCAS=[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]\n[ <Função>, <Variável>, <Valor de x Inicial>, <Valor de x Final> ]
NInvert=MatrizInversaNumérica
NInvert.Syntax=[ <Função> ]
NSolutions=CalcularSoluçõesNumericamente
NSolutions.Syntax=[ <Equação> ]
NSolutions.SyntaxCAS=[ <Equação> ]\n[ <Equação>, <Variável> ]\n[ <Equação>, <Variável = valor inicial> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
NSolve=ResolverNumericamente
NSolve.Syntax=[ <Equação> ]
NSolve.SyntaxCAS=[ <Equação> ]\n[ <Equação>, <Variável> ]\n[ <Equação>, <Variável = valor inicial> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
NSolveODE=ResolverEDONumericamente
NSolveODE.Syntax=[ <Lista de Derivadas>, <Abscissa Inicial>, <Lista de Ordenadas Iniciais>, <Abscissa FInal> ]
Name=Nome
Name.Syntax=[ <Objeto> ]
Net=Planificação
Net.Syntax=[ <Poliedro>, <Número> ]\n[ <Poliedro>, <Número>, <Face>, <Arestas>, <Aresta>, ... ]
NextPrime=PróximoPrimo
NextPrime.Syntax=[ <Número> ]
Normal=DistribuiçãoNormal
Normal.Syntax=[ <Média>, <Desvio Padrão>, <Valor da Variável> ]\n[ <Média>, <Desvio Padrão>, <Valor da Variável>, <Acumulada (true | false)> ]\n[ <Média>, <Desvio Padrão>, x, <Acumulada (true | false)> ]
Normal.SyntaxCAS=[ <Média>, <Desvio Padrão>, x ]
NormalQuantilePlot=DiagramaQuantilNormal
NormalQuantilePlot.Syntax=[ <Lista dos Dados Brutos> ]
Normalize=Normalizar
Normalize.Syntax=[ <Lista de Números> ]\n[ <Lista de Pontos> ]
Numerator=Numerador
Numerator.Syntax=[ <Número> ]\n[ <Função> ]
Numerator.SyntaxCAS=[ <Expressão> ]
Numeric=ValorNumérico
Numeric.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Número de Dígitos> ]
Object=Objeto
Object.Syntax=[ <Nome do Objeto como Texto> ]
Octahedron=Octaedro
Octahedron.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Direção> ]
Ordinal.Syntax=[ <Inteiro> ]
OrdinalRank=Posições
OrdinalRank.Syntax=[ <Lista> ]
OrthogonalLine=Perpendicular
OrthogonalLine.Syntax=[ <Ponto>, <Reta> ]\n[ <Ponto>, <Segmento> ]\n[ <Ponto>, <Vector> ]
OrthogonalLine.Syntax3D=[ <Ponto>, <Reta> ]\n[ <Ponto>, <Segmento> ]\n[ <Ponto>, <Vetor> ]\n[ <Ponto>, <Plano> ]\n[ <Reta>, <Reta> ]\n[ <Ponto>, <Reta>, <Reta> ]\n[ <Ponto>, <Vetor>, <Vetor> ]\n[ <Ponto>, <Reta>, <Contexto> ]
OrthogonalPlane=PlanoPerpendicular
OrthogonalPlane.Syntax=[ <Ponto>, <Reta> ]\n[ <Ponto>, <Vetor> ]
OrthogonalVector=VetorPerpendicular
OrthogonalVector.Syntax=[ <Reta> ]\n[ <Segmento> ]\n[ <Vetor>\n[ <Semirreta> ]
OrthogonalVector.Syntax3D=[ <Reta> ]\n[ <Segmento> ]\n[ <Vetor> ]\n[ <Plano> ]
OrthogonalVector.SyntaxCAS=[ <Vetor> ]
OsculatingCircle=CírculoOsculador
OsculatingCircle.Syntax=[ <Ponto>, <Objeto> ]
PMCC=CoeficienteDeCorrelação
PMCC.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Abscissas>, <Lista de Ordenadas> ]
Pan=TransladarJanelaDeVisualização
Parabola=Parábola
Parabola.Syntax=[ <Ponto>, <Reta> ]
Parameter=Parâmetro
Parameter.Syntax=[ <Parábola> ]
ParametricDerivative=DerivadaParamétrica
ParametricDerivative.Syntax=[ <Curva> ]
ParseToFunction=InterpretarTextoParaFunção
ParseToFunction.Syntax=[ <Função>, <Texto> ]
ParseToNumber=InterpretarTextoParaNúmero
ParseToNumber.Syntax=[ <Número>, <Texto> ]
PartialFractions=FraçõesParciais
PartialFractions.Syntax=[ <Função> ]
PartialFractions.SyntaxCAS=[ <Função> ]\n[ <Função>, <Variável> ]
Pascal=DistribuiçãoDePascal
Pascal.Syntax=[ <Número de Sucessos>, <Probabilidade de Sucesso> ]\n[ <Número de Sucessos>, <Probabilidade de Sucesso>, <Acumulada (true | false)> ]\n[ <Número de Sucessos>, <Probabilidade de Sucesso>, <Valor da Variável>, <Acumulada (true | false)> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Valor da Variável>, <Acumulada (true | false)> ]
PathParameter=ParâmetroDoPontoSobreCaminho
PathParameter.Syntax=[ <Ponto sobre o Caminho> ]
Payment=Pagamento
Payment.Syntax=[ <Taxa>, <Número de Períodos>, <Valor Presente>, <Valor Futuro (opcional)>, <Tipo (opcional)> ]
Percentile=Percentil
Percentile.Syntax=[ <Lista de Números>, <Percentagem> ]
Perimeter=Perímetro
Perimeter.Syntax=[ <Polígono> ]\n[ <Cônica> ]\n[ <Lugar Geométrico> ]
Periods=Períodos
Periods.Syntax=[ <Taxa>, <Pagamento>, <Valor Presente>, <Valor Futuro (opcional)>, <Tipo (opcional)> ]
Plane=Plano
Plane.Syntax=[ <Polígono> ]\n[ <Cônica> ]\n[ <Ponto>, <Plano> ]\n[ <Ponto>, <Reta> ]\n[ <Reta>, <Reta> ]\n[ <Ponto>, <Ponto>, <Ponto> ]
PlaneBisector=PlanoMediador
PlaneBisector.Syntax=[ <Segmento> ]\n[ <Ponto>, <Ponto> ]
PlaySound=TocarSom
PlaySound.Syntax=[ <URL> ]\n[ <Tocar (true | false)> ]\n[ <Função>, <Valor Mínimo>, <Valor Máximo> ]\n[ <Função>, <Valor Mínimo>, <Valor Máximo>, <Taxa de Amostragem>, <Profundidade de Amostragem> ]
Point=Ponto
Point.Syntax=[ <Objeto> ]\n[ <Objeto>, <Parâmetro> ]\n[ <Ponto>, <Vetor> ]
PointIn=PontoEm
PointIn.Syntax=[ <Região> ]
PointList=CriarPontosDeLista
PointList.Syntax=[ <Lista> ]
Poisson=DistribuiçãoDePoisson
Poisson.Syntax=[ <Média> ]\n[ <Média>, <Acumulada (true | false)> ]\n[ <Média>, <Valor da Variável>, <Acumulada (true | false)> ]
Poisson.SyntaxCAS=[ <Média>, x, <Acumulada (true | false)> ]
Polar.Syntax=[ <Ponto>, <Cônica> ]\n[ <Reta>, <Cônica> ]
PolyLine=CaminhoPoligonal
PolyLine.Syntax=[ <Lista de Pontos> ]\n[ <Ponto>, ..., <Ponto> ]
Polygon=Polígono
Polygon.Syntax=[ <Lista de Pontos> ]\n[ <Ponto>, ..., <Ponto> ]\n[ <Ponto>, <Ponto>, <Número de Vértices> ]
Polygon.Syntax3D=[ <Lista de Pontos> ]\n[ <Ponto>, ..., <Ponto> ]\n[ <Ponto>, <Ponto>, <Número de Vértices> ]\n[ <Ponto>, <Ponto>, <Número de Vértices>, <Direção> ]
Polynomial=Polinômio
Polynomial.Syntax=[ <Função> ]\n[ <Lista de Pontos> ]
Polynomial.SyntaxCAS=[ <Função> ]\n[ <Função>, <Variável> ]
PresentValue=ValorPresente
PresentValue.Syntax=[ <Taxa>, <Número de Períodos>, <Pagamento>, <Valor Futuro (opcional)>, <Tipo (opcional)> ]
PreviousPrime=PrimoAnterior
PreviousPrime.Syntax=[ <Número> ]
PrimeFactors=FatoresPrimos
PrimeFactors.Syntax=[ <Número> ]
Prism=Prisma
Prism.Syntax=[ <Polígono>, <Ponto> ]\n[ <Polígono>, <Altura> ]\n[ <Ponto>, <Ponto>, ... ]
Product=Produto
Product.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Número de Elementos> ]\n[ <Lista de Números>, <Lista de Frequências> ]\n[ <Expressão>, <Variável>, <Valor Inicial>, <Valor Final> ]
Product.SyntaxCAS=[ <Lista de Expressões> ]\n[ <Expressão>, <Variável>, <Índice Inicial>, <Índice Final> ]
Prove=Provar
Prove.Syntax=[ <Expressão Booleana> ]
ProveDetails=DetalhesDaProva
ProveDetails.Syntax=[ <Expressão Booleana> ]
Pyramid=Pirâmide
Pyramid.Syntax=[ <Polígono>, <Ponto> ]\n[ <Polígono>, <Altura> ]\n[ <Ponto>, <Ponto>, <Ponto>, <Ponto>, ... ]
Q1=Quartil1
Q1.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Q3=Quartil3
Q3.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
QuadricSide=SuperfícieLateral
QuadricSide.Syntax=[ <Quádrica> ]
RSquare=RQuadrado
RSquare.Syntax=[ <Lista de Pontos>, <Função> ]
Radius=Raio
Radius.Syntax=[ <Círculo> ]
Random=NúmeroAleatório
Random.Syntax=[ <Mínimo (Inteiro)>, <Máximo (Inteiro)> ]\n[ <Mínimo (Inteiro)>, <Máximo (Inteiro)>, <Fixo (true | false)> ]
Random.SyntaxCAS=[ <Valor Inteiro Mínimo>, <Valor Inteiro Máximo> ]
RandomBinomial=NúmeroAleatórioBinomial
RandomBinomial.Syntax=[ <Número de Tentativas>, <Probabilidade> ]
RandomDiscrete=AleatóriaDiscreta
RandomDiscrete.Syntax=[ <Lista>, <Lista> ]
RandomElement=EscolherElementoAleatoriamente
RandomElement.Syntax=[ <Lista> ]
RandomNormal=NúmeroAleatórioNormal
RandomNormal.Syntax=[ <Média>, <Desvio Padrão> ]
RandomPointIn=PontoAleatórioEm
RandomPointIn.Syntax=[ <Região> ]\n[ <Lista de Pontos> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=NúmeroAleatórioDePoisson
RandomPoisson.Syntax=[ <Média> ]
RandomPolynomial=GerarPolinômioAleatoriamente
RandomPolynomial.Syntax=[ <Grau>, <Valor Mínimo dos Coeficientes>, <Valor Máximo dos Coeficientes> ]
RandomPolynomial.SyntaxCAS=[ <Grau>, <Valor Mínimo dos Coeficientes>, <Valor Máximo dos Coeficientes> ]\n[ <Variável>, <Grau>, <Valor Mínimo dos Coeficientes>, <Valor Máximo dos Coeficientes> ]
RandomUniform=NúmeroAleatórioUniforme
RandomUniform.Syntax=[ <Mínimo>, <Máximo> ]\n[ <Mínimo>, <Máximo>, <Número de Amostras> ]
Rate=Taxa
Rate.Syntax=[ <Número de Períodos>, <Pagamento>, <Valor Presente>, <Valor Futuro (opcional)>, <Tipo (opcional)>, <Estimativa (opcional)> ]
Rationalize=FormaFracionária
Rationalize.SyntaxCAS=[ <Número> ]
Ray=Semirreta
Ray.Syntax=[ <Ponto Inicial>, <Ponto> ]\n[ <Ponto Inicial>, <Vetor Diretor> ]
ReadText=LerTexto
ReadText.Syntax=[ <Texto> ]
RectangleSum=SomaRetângulos
RectangleSum.Syntax=[ <Função>, <Valor de x Inicial>, <Valor de x Final>, <Número de Retângulos>, <Abscissa Base para o Retângulo Inicial> ]
ReducedRowEchelonForm=MatrizEscalonada
ReducedRowEchelonForm.Syntax=[ <Matriz> ]
Relation=Relação
Relation.Syntax=[ <Lista> ]\n[ <Objeto>, <Objeto> ]
Remove=Remover
Remove.Syntax=[ <Lista>, <Lista> ]
RemoveUndefined=RemoverIndefinidos
RemoveUndefined.Syntax=[ <Lista> ]
Rename=Renomear
Rename.Syntax=[ <Objeto>, <Nome> ]
Repeat=Repetir
Repeat.Syntax=[ <Número>, <Programação>, <Programação>, ... ]
ResidualPlot=DiagramaResidual
ResidualPlot.Syntax=[ <Lista de Pontos>, <Função> ]
Reverse=Reverter
Reverse.Syntax=[ <Lista> ]
RightSide=LadoDireito
RightSide.Syntax=[ <Equação> ]
RightSide.SyntaxCAS=[ <Equação> ]\n[ <Lista de Equações> ]\n[ <Lista de Equações>, <Índice> ]
RigidPolygon=PolígonoRígido
RigidPolygon.Syntax=[ <Polígono> ]\n[ <Polígono>, <Deslocamento Horizontal>, <Deslocamento Vertical> ]\n[ <Ponto Livre>, ..., <Ponto Livre> ]
Root=Raiz
Root.Syntax=[ <Polinômio> ]\n[ <Função>, <Valor de x Inicial> ]\n[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]
Root.SyntaxCAS=[ <Polinômio> ]
RootList=ListaParaPontosEixoX
RootList.Syntax=[ <Lista> ]
RootMeanSquare=MédiaQuadrática
RootMeanSquare.Syntax=[ <Lista de Números> ]
Roots=Raízes
Roots.Syntax=[ <Função>, <Valor de x Inicial>, <Valor de x Final> ]
Rotate=Girar
Rotate.Syntax=[ <Objeto>, <Ângulo> ]\n[ <Objeto>, <Ângulo>, <Ponto> ]
Rotate.Syntax3D=[ <Objeto>, <Ângulo> ]\n[ <Objeto>, <Ângulo>, <Ponto> ]\n[ <Objeto>, <Ângulo>, <Eixo de Rotação> ]\n[ <Objeto>, <Ângulo>, <Ponto sobre O Eixo>, <Eixo de Diração ou Plano> ]
RotateText=GirarTexto
RotateText.Syntax=[ <Texto>, <Ângulo> ]
Row=Linha
Row.Syntax=[ <Célula da Planilha> ]
RunClickScript=ExecutarCódigoAoClicar
RunClickScript.Syntax=[ <Objeto> ]
RunUpdateScript=ExecutarCódigoAoAtualizar
RunUpdateScript.Syntax=[ <Objeto> ]
SD=DesvioPadrão
SD.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
SDX=DesvioPadrãoX
SDX.Syntax=[ <Lista de Pontos> ]
SDY=DesvioPadrãoY
SDY.Syntax=[ <Lista de Pontos> ]
SVD.Syntax=[ <Matriz> ]
SXX.Syntax=[ <Lista de Números> ]\n[ <Lista de Pontos> ]
SXY.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Números>, <Lista de Números> ]
SYY.Syntax=[ <Lista de Pontos> ]
Sample=Amostra
Sample.Syntax=[ <Lista>, <Tamanho> ]\n[ <Lista>, <Tamanho>, <Com Substituição> ]
SampleSD=DesvioPadrãoAmostral
SampleSD.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
SampleSD.SyntaxCAS=[ <Lista de Números> ]
SampleSDX=DesvioPadrãoAmostralX
SampleSDX.Syntax=[ <Lista de Pontos> ]
SampleSDY=DesvioPadrãoAmostralY
SampleSDY.Syntax=[ <Lista de Pontos> ]
SampleVariance=VariânciaDaAmostra
SampleVariance.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
SampleVariance.SyntaxCAS=[ <Lista de Números> ]
ScientificText=NotaçãoCientífica
ScientificText.Syntax=[ <Número> ]\n[ <Número>, <Precisão> ]
SecondAxis=EixoMenor
SecondAxis.Syntax=[ <Cônica> ]
SecondAxisLength=ComprimentoDoSemieixoMenor
SecondAxisLength.Syntax=[ <Cônica> ]
Sector=Setor
Sector.Syntax=[ <Cônica>, <Ponto>, <Ponto> ]\n[ <Cônica>, <Valor do Parâmetro>, <Valor do Parâmetro> ]
Segment=Segmento
Segment.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Comprimento> ]
SelectObjects=SelecionarObjetos
SelectObjects.Syntax=[ ]\n[ <Objeto>, <Objeto>, ... ]
SelectedElement=ElementoSelecionado
SelectedElement.Syntax=[ <Lista> ]
SelectedIndex=ÍndiceSelecionado
SelectedIndex.Syntax=[ <Lista> ]
Semicircle=Semicírculo
Semicircle.Syntax=[ <Ponto>, <Ponto> ]
Sequence=Sequência
Sequence.Syntax=[ <Valor Final> ]\n[ <Valor Inicial>, <Valor Final> ]\n[ <Valor Inicial>, <Valor Final>, <Incremento> ]\n[ <Expressão>, <Variável>, <Valor Inicial>, <Valor Final> ]\n[ <Expressão>, <Variável>, <Valor Inicial>, <Valor Final>, <Incremento> ]
SetActiveView=SelecionarJanelaDeVisualizaçãoAtiva
SetActiveView.Syntax=[ <Janela> ]\n[ <Plano> ]
SetAxesRatio=DefinirEscalaDosEixos
SetAxesRatio.Syntax=[ <Número>, <Número> ]
SetAxesRatio.Syntax3D=[ <Número>, <Número> ]\n[ <Número>, <Número>, <Número> ]
SetBackgroundColor=DefinirCorDeFundo
SetBackgroundColor.Syntax=[ <Objecto>, "<Cor>" ]\n[ <Objeto>, <Vermelho>, <Verde>, <Azul> ]
SetCaption=DefinirLegenda
SetCaption.Syntax=[ <Objeto>, <Texto> ]
SetColor=DefinirCor
SetColor.Syntax=[ <Objeto>, "<Cor>" ]\n[ <Objeto>, <Vermelho>, <Verde>, <Azul> ]
SetConditionToShowObject=DefinirCondiçãoParaExibirObjeto
SetConditionToShowObject.Syntax=[ <Objeto>, <Condição> ]
SetConstructionStep=ConfigurarPassoDeConstrução
SetConstructionStep.Syntax=[ <Número> ]
SetCoords=DefinirCoordenadas
SetCoords.Syntax=[ <Objeto>, <x>, <y> ]\n[ <Objeto>, <x>, <y>, <z> ]
SetDecoration=DefinirDecoração
SetDecoration.Syntax=[ <Objeto>, <Número> ]
SetDynamicColor=DefinirCorDinâmica
SetDynamicColor.Syntax=[ <Objeto>, <Vermelho>, <Verde>, <Azul> ]\n[ <Objeto>, <Vermelho>, <Verde>, <Azul>, <Opacidade> ]
SetFilling=DefinirPreenchimento
SetFilling.Syntax=[ <Objeto>, <Número> ]
SetFixed=DefinirObjetoFixo
SetFixed.Syntax=[ <Objeto>, <true | false> ]\n[ <Objeto>, <true | false>, <true | false> ]
SetLabelMode=DefinirEstiloDoRótulo
SetLabelMode.Syntax=[ <Objeto>, <Número> ]
SetLayer=DefinirCamada
SetLayer.Syntax=[ <Objeto>, <Camada> ]
SetLevelOfDetail=DefinirNívelDeDetalhe
SetLevelOfDetail.Syntax=[ <Superfície>, <Nível de Detalhe> ]
SetLineStyle=DefinirEstiloDaLinha
SetLineStyle.Syntax=[ <Linha>, <Número> ]
SetLineThickness=DefinirEspessuraDaLinha
SetLineThickness.Syntax=[ <Linha>, <Número> ]
SetPerspective=DefinirPerspectiva
SetPerspective.Syntax=[ <Texto> ]
SetPointSize=DefinirTamanhoDoPonto
SetPointSize.Syntax=[ <Objeto>, <Número> ]
SetPointStyle=DefinirEstiloDoPonto
SetPointStyle.Syntax=[ <Ponto>, <Número> ]
SetSeed=DefinirSemente
SetSeed.Syntax=[ <Inteiro> ]
SetSpinSpeed=ConfigurarVelocidadeDeGiro
SetSpinSpeed.Syntax=[ <Número> ]
SetTooltipMode=DefinirEstiloDaDescrição
SetTooltipMode.Syntax=[ <Objeto>, <Número> ]
SetTrace=DefinirTraço
SetTrace.Syntax=[ <Objeto>, <true | false> ]
SetValue=DefinirValor
SetValue.Syntax=[ <Variável Booleana>, <0 | 1> ]\n[ <Objeto>, <Objeto> ]\n[ <Lista>, <Número>, <Objeto> ]
SetViewDirection=ConfigurarDireçãoDeVisualização
SetViewDirection.Syntax=[ ]\n[ <Direção> ]\n[ <Direção>, <Animar (true | false)> ]
SetVisibleInView=DefinirVisibilidade
SetVisibleInView.Syntax=[ <Objeto>, <Número da Janela de Visualização (1 ou 2)>, <true | false> ]
Shear=Cisalhamento
Shear.Syntax=[ <Objeto>, <Reta>, <Razão> ]
ShortestDistance=CaminhoMínimo
ShortestDistance.Syntax=[ <Lista de Segmentos>, <Ponto Inicial>, <Ponto Final>, <Usar Número de Segmentos como Custo (true | false)> ]
ShowAxes=ExibirEixos
ShowAxes.Syntax=[ ]\n[ <Valor Booleano> ]\n[ <Janela de Visualização>, <Valor Booleano> ]
ShowGrid=ExibirMalha
ShowGrid.Syntax=[ ]\n[ <Expressão Booleana> ]\n[ <Janela de Visualização>, <Expressão Booleana> ]
ShowLabel=ExibirRótulo
ShowLabel.Syntax=[ <Objeto>, <Exibir (true | false)> ]
ShowLayer=ExibirCamada
ShowLayer.Syntax=[ <Número> ]
Shuffle=Embaralhar
Shuffle.Syntax=[ <Lista> ]
SigmaXX.Syntax=[ <Lista de Pontos> ]\n[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
SigmaXY.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Abscissas>, <Lista de Ordenadas> ]
SigmaYY.Syntax=[ <Lista de Pontos> ]
Simplify=Simplificar
Simplify.Syntax=[ <Função> ]\n[ <Texto> ]
Simplify.SyntaxCAS=[ <Função> ]
Slider=ControleDeslizante
Slider.Syntax=[ <Mínimo>, <Máximo>, <Incremento>, <Velocidade>, <Comprimento>, <Ângulo (true | false)>, <Horizontal (true | false)>, <Animar (true | false)>, <Aleatório (true | false)> ]
Slope=Inclinação
Slope.Syntax=[ <Reta> ]
SlopeField=CampoDeDireções
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Número n> ]\n[ <f(x, y)>, <Número n>, <Fator de Escala a> ]\n[ <f(x, y)>, <Número n>, <Fator de Escala a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=AnimarConstruçãoDoGráfico
SlowPlot.Syntax=[ <Função> ]\n[ <Função>, <Repetir (true | false)> ]
Solutions=Soluções
Solutions.Syntax=[ <Equação> ]
Solutions.SyntaxCAS=[ <Equação> ]\n[ <Equação>, <Variável> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
Solve=Resolver
Solve.Syntax=[ <Equação> ]
Solve.SyntaxCAS=[ <Equação em x> ]\n[ <Equação>, <Variável> ]\n[ <Lista de Equações>, <Lista de Variáveis> ]
SolveCubic=ResolverCúbica
SolveCubic.SyntaxCAS=[ <Polinômio de Grau 3> ]
SolveODE=ResolverEDO
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Ponto de f> ]\n[ <f'(x, y)>, <Valor de x Inicial>, <Valor de y Inicial>, <Valor de x Final>, <Passo> ]\n[ <y'>, <x'>, <Valor de x Inicial>, <Valor de y Inicial>, <Valor de t Final>, <Passo> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Valor de x Inicial>, <Valor de y Inicial>, <Valor de y' Inicial>, <Valor de x Final>, <Passo> ]
SolveODE.SyntaxCAS=[ <Equação> ]\n[ <Equação>, <Ponto(s) em f> ]\n[ <Equação>, <Ponto(s) em f>, <Ponto(s) em f'> ]\n[ <Equação>, <Variável Dependente>, <Variável Independente>, <Ponto(s) em f> ]\n[ <Equação>, <Variável Dependente>, <Variável Independente>, <Ponto(s) em f>, <Ponto(s) em f'> ]
SolveQuartic=ResolverQuártica
SolveQuartic.SyntaxCAS=[ <Polinômio de Grau 4> ]
Sort=Ordenar
Sort.Syntax=[ <Lista> ]\n[ <Valores>, <Chaves> ]
Spearman=CorrelaçãoDeSpearman
Spearman.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Números>, <Lista de Números> ]
Sphere=Esfera
Sphere.Syntax=[ <Ponto>, <Raio> ]\n[ <Ponto>, <Ponto> ]
Spline.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Pontos>, <Ordem \u2265 3> ]
StartAnimation=IniciarAnimação
StartAnimation.Syntax=[ ]\n[ <true | false> ]\n[ <Controle Deslizante ou Ponto>, <Controle Deslizante ou Ponto>, ... ]\n[ <Controle Deslizante ou Ponto>, <Controle Deslizante ou Ponto>, ..., <true | false> ]
StartLogging=IniciarRegistro
StartLogging.Syntax=[ "<Sensor>", <Variável>, "<Sensor>", <Variável>, ... ]
StartRecord=IniciarGravação
StartRecord.Syntax=[ ]\n[ <Valor Booleano> ]
StemPlot=DiagramaDeCauleEFolhas
StemPlot.Syntax=[ <Lista> ]\n[ <Lista>, <Ajuste (-1 | 0 | 1)> ]
StepGraph=DiagramaEmDegraus
StepGraph.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Pontos>, <Unir Segmentos (true | false)> ]\n[ <Lista de abscissas>, <Lista de ordenadas> ]\n[ <Lista de Pontos>, <Unir Segmentos (true | false)>, <Estilo do Ponto> ]\n[ <Lista de Pontos>, <Lista de Ordenadas>, <Unir Segmentos (true | false)> ]\n[ <List of x-coordinates>, <List of y-coordinates>, <Boolean Join>, <Point style> ]
StickGraph=DiagramaDeHastes
StickGraph.Syntax=[ <Lista de Pontos> ]\n[ <Lista de Pontos>, <Horizontal (true | false)> ]\n[ <Lista de abscissas>, <Lista de ordenadas> ]\n[ <Lista de abscissas>, <Lista de ordenadas>, <Horizontal (true | false)> ]
StopLogging=PararRegistro
StopLogging.Syntax=[ ]
Stretch=Esticar
Stretch.Syntax=[ <Objeto>, <Vetor> ]\n[ <Objeto>, <Reta>, <Razão> ]
Substitute=Substituir
Substitute.SyntaxCAS=[ <Expressão>, <Lista de Substituições> ]\n[ <Expressão>, <O Que>, <Por> ]
Sum=Soma
Sum.Syntax=[ <Lista> ]\n[ <Lista>, <Número de Elementos> ]\n[ <Lista>, <Lista de Frequências> ]\n[ <Expressão>, <Variável>, <Valor Inicial>, <Valor Final> ]
Sum.SyntaxCAS=[ <Lista> ]\n[ <Expressão>, <Variável>, <Valor Inicial>, <Valor Final> ]
SumSquaredErrors=SomaDosErrosQuadrados
SumSquaredErrors.Syntax=[ <Lista de Pontos>, <Função> ]
SurdText=FormatoCorpoQuadráticoEmTexto
SurdText.Syntax=[ <Número> ]\n[ <Ponto> ]
Surface=Superfície
Surface.Syntax=[ <Função>, <Ângulo> ]\n[ <Curva>, <Ângulo>, <Reta> ]\n[ <Expressão>, <Expressão>, <Expressão>, <Variável Parâmetro 1>, <Valor Inicial>, <Valor Final>, <Variável Parâmetro 2>, <Valor Inicial>, <Valor Final> ]
TDistribution=DistribuiçãoT
TDistribution.Syntax=[ <Graus de Liberdade>, <Valor da Variável> ]\n[ <Graus de Liberdade>, x, <Acumulada (true | false)> ]
TDistribution.SyntaxCAS=[ <Graus de Liberdade>, x ]
TMean2Estimate=EstimarMédiaT2
TMean2Estimate.Syntax=[ <Lista dos Dados Amostrais 1>, <Lista dos Dados Amostrais 2>, <Nível>, <Agregada (true | false)> ]\n[ <Média dos Dados Amostrais 1>, <Desvio Padráo dos Dados Amostrais 1>, <Tamanho da Amostra 1>, <Média dos Dados Amostrais 2>, <Desvio Padráo dos Dados Amostrais 2>, <Tamanho da Amostra 2>, <Nível>, <Agregada (true | false)> ]
TMeanEstimate=EstimarMédiaT
TMeanEstimate.Syntax=[ <Lista dos Dados Amostrais>, <Nível> ]\n[ <Média dos Dados Amostrais>, <Desvio Padrão dos Dados Amostrais>, <Tamanho da Amostra>, <Nível> ]
TTest=TesteT
TTest.Syntax=[ <Lista dos Dados Amostrais>, <Média Hipotética>, <Cauda> ]\n[ <Média dos Dados Amostrais>, <Desvio Padrão dos Dados Amostrais>, <Tamanho da Amostra>, <Média Hipotética>, <Cauda> ]
TTest2=TesteT2
TTest2.Syntax=[ <Lista dos Dados Amostrais 1>, <Lista dos Dados Amostrais 2>, <Cauda>, <Agregada (true | false)> ]\n[ <Média dos Dados Amostrais 1>, <Desvio Padráo dos Dados Amostrais 1>, <Tamanho da Amostra 1>, <Média dos Dados Amostrais 2>, <Desvio Padráo dos Dados Amostrais 2>, <Tamanho da Amostra 2>, <Cauda>, <Agregada (true | false)> ]
TTestPaired=TesteTEmparelhado
TTestPaired.Syntax=[ <Lista dos Dados Amostrais 1>, <Lista dos Dados Amostrais 2>, <Cauda> ]
TableText=TabelaDeTexto
TableText.Syntax=[ <Lista>, <Lista>, ... ]\n[ <Lista>, <Lista>, ..., <Alinhamento do Texto> ]
Take=ParteDaLista
Take.Syntax=[ <Lista>, <Posição Inicial> ]\n[ <Lista>, <Posição Inicial>, <Posição Final> ]\n[ <Texto>, <Posição Inicial>, <Posição Final> ]
Take.SyntaxCAS=[ <Lista>, <Posição Inicial> ]\n[ <Lista>, <Posição Inicial>, <Posição Final> ]
Tangent=Tangente
Tangent.Syntax=[ <Ponto>, <Cônica> ]\n[ <Ponto>, <Função> ]\n[ <Ponto da Curva>, <Curva> ]\n[ <Valor de x>, <Função> ]\n[ <Reta>, <Cônica> ]\n[ <Círculo>, <Círculo> ]
Tangent.SyntaxCAS=[ <Número>, <Função> ]\n[ <Ponto>, <Objeto> ]
TaylorSeries=PolinômioDeTaylor
TaylorSeries.Syntax=[ <Função>, <Centro>, <Ordem> ]
TaylorSeries.SyntaxCAS=[ <Expressão>, <Centro>, <Ordem> ]\n[ <Expressão>, <Variável>, <Centro>, <Ordem> ]
Tetrahedron=Tetraedro
Tetrahedron.Syntax=[ <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Ponto> ]\n[ <Ponto>, <Ponto>, <Direção> ]
Text=Texto
Text.Syntax=[ <Objeto> ]\n[ <Objeto>, <Substituição de Variáveis (true | false)> ]\n[ <Objeto>, <Ponto> ]\n[ <Objeto>, <Ponto>, <Substituição de Variáveis (true | false)> ]\n[ <Objeto>, <Ponto>, <Substituição de Variáveis (true | false)>, <Fórmula LaTeX (true | false)> ]
TextToUnicode=TextoParaUnicode
TextToUnicode.Syntax=[ <Texto> ]
Textfield=CampoDeTexto
Textfield.Syntax=[ ]\n[ <Objeto Vinculado> ]
TiedRank=PosiçõesMédias
TiedRank.Syntax=[ <Lista> ]
ToBase=ParaBase
ToBase.Syntax=[ <Número>, <Base> ]
ToComplex=FormaComplexa
ToComplex.Syntax=[ <Vetor> ]
ToExponential=FormaExponencial
ToExponential.SyntaxCAS=[ <Número Complexo> ]
ToPoint=FormaCartesiana
ToPoint.Syntax=[ <Número Complexo> ]
ToPolar=FormaPolar
ToPolar.Syntax=[ <Número Complexo> ]\n[ <Vetor> ]
ToolImage=ImagemDaFerramenta
ToolImage.Syntax=[ <Número da Ferramenta> ]\n[ <Número da Ferramenta>, <Ponto> ]\n[ <Número da Ferramenta>, <Ponto>, <Ponto> ]
Top=Acima
Top.Syntax=[ <Quádrica> ]
Translate=Transladar
Translate.Syntax=[ <Objeto>, <Vetor> ]\n[ <Vetor>, <Ponto Inicial> ]
Transpose=MatrizTransposta
Transpose.Syntax=[ <Matriz> ]
TrapezoidalSum=SomaTrapezoidal
TrapezoidalSum.Syntax=[ <Função>, <Valor de x Inicial>, <Valor de x Final>, <Número de Trapézios> ]
TravelingSalesman=ProblemaDoCaixeiroViajante
TravelingSalesman.Syntax=[ <Lista de Pontos> ]
TriangleCenter=CentroDoTriângulo
TriangleCenter.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Número> ]
TriangleCurve=CurvaDoTriângulo
TriangleCurve.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Equação> ]
Triangular=DistribuiçãoTriangular
Triangular.Syntax=[ <Cota Inferior>, <Cota Superior>, Moda, <Valor da Variável> ]\n[ <Cota Inferior>, <Cota Superior>, Moda, x, <Acumulada (true | false)> ]
TrigCombine=CombinarExpressõesTrigonométricas
TrigCombine.Syntax=[ <Expressão> ]\n[ <Expressão>, <Função Alvo> ]
TrigExpand=ExpandirExpressõesTrigonométricas
TrigExpand.Syntax=[ <Expressão> ]\n[ <Expressão>, <Função Alvo> ]
TrigExpand.SyntaxCAS=[ <Expressão> ]\n[ <Expressão>, <Função Alvo> ]\n[ <Expressão>, <Função Alvo>, <Variável Alvo> ]\n[ <Expressão>, <Função Alvo>, <Variável Alvo>, <Variável Alvo> ]
TrigSimplify=SimplificarExpressõesTrigonométricas
TrigSimplify.Syntax=[ <Expressão> ]
Trilinear.Syntax=[ <Ponto>, <Ponto>, <Ponto>, <Número>, <Número>, <Número> ]
TurningPoint=PontoDeInflexão
TurningPoint.Syntax=[ <Polinômio> ]
Turtle=Tartaruga
Turtle.Syntax=[ ]
TurtleBack=TartarugaIrParaTrás
TurtleBack.Syntax=[ <Tartaruga>, <Distância> ]
TurtleDown=TartarugaDesenhar
TurtleDown.Syntax=[ <Tartaruga> ]
TurtleForward=TartarugaIrParaFrente
TurtleForward.Syntax=[ <Tartaruga>, <Distância> ]
TurtleLeft=TartarugaIrParaEsquerda
TurtleLeft.Syntax=[ <Tartaruga>, <Ângulo> ]
TurtleRight=TartarugaIrParaDireita
TurtleRight.Syntax=[ <Tartaruga>, <Ângulo> ]
TurtleUp=TartarugaNãoDesenhar
TurtleUp.Syntax=[ <Tartaruga> ]
UnicodeToLetter=UnicodeParaLetra
UnicodeToLetter.Syntax=[ <Número Inteiro> ]
UnicodeToText=UnicodeParaTexto
UnicodeToText.Syntax=[ <Lista de Inteiros> ]
Uniform=DistribuiçãoUniforme
Uniform.Syntax=[ <Cota Inferior>, <Cota Superior>, <Valor da Variável> ]\n[ <Cota Inferior>, <Cota Superior>, x, <Acumulada (true | false)> ]
Union=União
Union.Syntax=[ <Lista>, <Lista> ]
Unique=ElementosÚnicos
Unique.Syntax=[ <Lista> ]
UnitOrthogonalVector=VetorPerpendicularUnitário
UnitOrthogonalVector.Syntax=[ <Reta> ]\n[ <Segmento> ]\n[ <Vetor> ]
UnitOrthogonalVector.Syntax3D=[ <Reta> ]\n[ <Segmento> ]\n[ <Vetor> ]\n[ <Plano> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vetor> ]
UnitVector=VetorUnitário
UnitVector.Syntax=[ <Objeto> ]
UnitVector.SyntaxCAS=[ <Vetor> ]
UpdateConstruction=AtualizarConstrução
UpdateConstruction.Syntax=[ ]\n[ <Número de vezes> ]
UpperSum=SomaDeRiemannSuperior
UpperSum.Syntax=[ <Função>, <Valor de x Inicial>, <Valor de x Final>, <Número de Retângulos> ]
Variance=Variância
Variance.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
Variance.SyntaxCAS=[ <Lista de Números> ]
Vector=Vetor
Vector.Syntax=[ <Ponto> ]\n[ <Ponto Inicial>, <Ponto Final> ]
Vertex=Vértice
Vertex.Syntax=[ <Cônica> ]\n[ <Desigualdade> ]\n[ <Polígono> ]\n[ <Polígono>, <Índice> ]
VerticalText=TextoVertical
VerticalText.Syntax=[ <Texto> ]\n[ <Texto>, <Ponto> ]
Volume.Syntax=[ <Sólido> ]
Voronoi=DiagramaDeVoronoi
Voronoi.Syntax=[ <Lista de Pontos> ]
Weibull=DistribuiçãoDeWeibull
Weibull.Syntax=[ <Forma>, <Escala>, <Valor da Variável> ]\n[ <Forma>, <Escala>, x, <Acumulada (true | false)> ]
Weibull.SyntaxCAS=[ <Forma>, <Escala>, x ]
ZMean2Estimate=EstimarMédiaZ2
ZMean2Estimate.Syntax=[ <Lista de Dados Amostrais 1>, <Lista de Dados Amostrais 2>, <\u03c31>, <\u03c32>, <Nìvel> ]\n[ <Média Amostral 1>, <\u03c31>, <Tamanho da Amostra 1>, <Média Amostral 2>, <\u03c32>, <Tamanho da Amostra 2>, <Nível> ]
ZMean2Test=TesteMédiaZ2
ZMean2Test.Syntax=[ <Lista de Dados Amostrais 1>, <\u03c31>, <Lista de Dados Amostrais 2>, <\u03c32>, <Cauda> ]\n[ <Média dos Dados Amostrais 1>, <\u03c31>, <Tamanho da Amostra 1>, <Média dos Dados Amostrais 2>, <\u03c32>, <Tamanho da Amostra 2>, <Cauda> ]
ZMeanEstimate=EstimarMédiaZ
ZMeanEstimate.Syntax=[ <Lista dos Dados Amostrais>, <\u03c3>, <Nível> ]\n[ <Média dos Dados Amostrais>, <\u03c3>, <Tamanho da Amostra>, <Nível> ]
ZMeanTest=TesteMédiaZ
ZMeanTest.Syntax=[ <Lista dos Dados Amostrais>, <\u03c3>, <Média Hipotética>, <Cauda> ]\n[ <Média dos Dados Amostrais>, <\u03c3>, <Tamanho da Amostra>, <Média Hipotética>, <Cauda> ]
ZProportion2Estimate=EstimarProporçãoZ2
ZProportion2Estimate.Syntax=[ <Proporção Amostral 1>, <Tamanho da Amostra 1>, <Proporção Amostral 2>, <Tamanho da Amostra 2>, <Nível> ]
ZProportion2Test=TesteProporçãoZ2
ZProportion2Test.Syntax=[ <Proporção Amostral 1>, <Tamanho da Amostra 1>, <Proporção Amostral 2>, <Tamanho da Amostra 2>, <Cauda> ]
ZProportionEstimate=EstimarProporçãoZ
ZProportionEstimate.Syntax=[ <Proporção Amostral>, <Tamanho da Amostra>, <Nível> ]
ZProportionTest=TesteProporçãoZ
ZProportionTest.Syntax=[ <Proporção Amostral>, <Tamanho da Amostra>, <Proporção Hipotética>, <Cauda> ]
Zip=Empacotar
Zip.Syntax=[ <Expressão>, <Variável 1>, <Lista 1>, <Variável 2>, <Lista 2>, ... ]
Zipf=DistribuiçãoDeZipf
Zipf.Syntax=[ <Número de Elementos>, <Expoente> ]\n[ <Número de Elementos>, <Expoente>, <Acumulada (true | false)> ]\n[ <Número de Elementos>, <Expoente>, <Valor da Variável>, <Acumulada (true | false)> ]
Zipf.SyntaxCAS=[ <Número de Elementos>, <Expoente>, x, <Acumulada (true | false)> ]
ZoomIn=Ampliar
ZoomIn.Syntax=[ <Fator de Escala> ]\n[ <Fator de Escala>, <Centro> ]\n[ <x Mínimo>, <y Mínimo>, <x Máximo>, <y Máximo> ]
ZoomOut=Reduzir
ZoomOut.Syntax=[ <Fator de Escala> ]\n[ <Fator de Escala>, <Centro> ]
mad=dma
mad.Syntax=[ <Lista de Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
mean=média
mean.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
mean.SyntaxCAS=[ <Lista de Números> ]
nCr.Syntax=[ <Número n>, <Número r> ]
stdev.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
stdevp=dp
stdevp.Syntax=[ <Lista dos Dados Brutos> ]\n[ <Lista de Números>, <Lista de Frequências> ]
stdevp.SyntaxCAS=[ <Lista de Números> ]