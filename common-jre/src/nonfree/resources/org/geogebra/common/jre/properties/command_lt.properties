# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <S\u0105ra\u0161as>, <S\u0105ra\u0161as>, ... ]
AffineRatio=NustatytiProporcij\u0105
AffineRatio.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
Angle=Kampas
Angle.Syntax=[ <Objektas> ]\n[ <Vektorius>, <Vektorius> ]\n[ <Ties\u0117>, <Ties\u0117> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Kampas> ]
Angle.Syntax3D=[ <Objektas> ]\n[ <Vektrius>, <Vektrius> ]\n[ <Ties\u0117>, <Ties\u0117> ]\n[ <Ties\u0117>, <Plok\u0161tuma> ]\n[ <Plok\u0161tuma>, <Plok\u0161tuma> ]\n[ <Ta\u0161kas>, <Vir\u0161\u016bn\u0117>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Vir\u0161\u016bn\u0117>, <Kampas> ]
AngularBisector=Pusiaukampin\u0117
AngularBisector.Syntax=[ <Ties\u0117>, <Ties\u0117> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
Append=Papildyti
Append.Syntax=[ <S\u0105ra\u0161as>, <Objektas> ]\n[ <Objektas>, <S\u0105ra\u0161as> ]
ApplyMatrix=TaikytiMatric\u0105
ApplyMatrix.Syntax=[ <Matrica>, <Objektas> ]
Arc=Lankas
Arc.Syntax=[ <Apskritimas>, <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Elips\u0117>, <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Apskritimas>, <Parametro vert\u0117>, <parametro vert\u0117> ]\n[ <Elips\u0117>, <Parametro vert\u0117>, <parametro vert\u0117> ]
AreCollinear=YraKolinear\u016bs
AreCollinear.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
AreConcurrent=YraVienakryp\u010diai
AreConcurrent.Syntax=[ <Ties\u0117>, <Ties\u0117>, <Ties\u0117> ]
AreConcyclic=ApskritimoTa\u0161kai
AreConcyclic.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
AreCongruent.Syntax=[ <Objekatas>, <Objekatas> ]
AreEqual=YraLyg\u016bs
AreEqual.Syntax=[ <Objektas>, <Objektas> ]
AreParallel=YraLygiagret\u016bs
AreParallel.Syntax=[ <Ties\u0117>, <Ties\u0117> ]
ArePerpendicular=YraStatmeni
ArePerpendicular.Syntax=[ <Ties\u0117>, <Ties\u0117> ]
Area=Plotas
Area.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]\n[ <Daugiakampis> ]\n[ <Ta\u0161kas>, ..., <Ta\u0161kas> ]
Asymptote=Asimptot\u0117
Asymptote.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]\n[ <Funkcija> ]\n[ <Nei\u0161reik\u0161tin\u0117 kreiv\u0117> ]
AttachCopyToView=Prid\u0117tiKopij\u0105Per\u017ei\u016brai
AttachCopyToView.Syntax=[ <Objektas>, <Vaizdas 0|1|2> ]\n[ <Objektas>, <Vaizdas 0|1|2>, <Ta\u0161kas 1>, <Ta\u0161kas 2>, <Ekrano ta\u0161kas 1>, <Ekrano ta\u0161kas 2> ]
Axes=A\u0161ys
Axes.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
Axes.Syntax3D=[ <K\u016bgis> ]\n[ <Kvadratin\u0117 lygtis> ]
AxisStepX=A\u0161ies\u017dingsnisX
AxisStepY=A\u0161ies\u017dingsnisY
BarChart=Lentel\u0117
BarChart.Syntax=[ <Duomen\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]\n[ <Neapdoroti duomenys>, <Stulpeli\u0173 plotis>, <Vertikalus i\u0161tempimas (neb\u016btinas)> ]\n[ <Duomen\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as>, <Stulpeli\u0173 plotis> ]\n[ <Pradin\u0117 vert\u0117>, <Galutin\u0117 vert\u0117>, <Auk\u0161\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Pradin\u0117 vert\u0117>, <Galutin\u0117 vert\u0117>, <I\u0161rai\u0161ka>, <Kintamasis>, <Nuo>, <Iki> ]\n[ <Pradin\u0117 vert\u0117>, <Galutin\u0117 vert\u0117>, <I\u0161rai\u0161ka>, <Kintamasis>, <Nuo>, <Iki>, <\u017dingsnis> ]
BarCode=BarKodas
BarCode.Syntax=[ ]\n[ <Paveiksliukas> ]\n[ <Tekstas arba skai\u010dius>, "<Formatas(neb\u016btina)>", "<Klaidos taisymas(neb\u016btina)>", <Plotis(neb\u016btina)>, <Auk\u0161tis(neb\u016btina)> ]
Barycenter=BendrasMas\u0117sCentras
Barycenter.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Svori\u0173 s\u0105ra\u0161as> ]
Bernoulli=Bernulio
Bernoulli.Syntax=[ <Tikimyb\u0117>, <Login\u0117 vert\u0117> ]
Binomial=BinominisKoeficientas
Binomial.Syntax=[ <Skai\u010dius>, <Skai\u010dius> ]
BinomialDist=Binominis
BinomialDist.Syntax=[ <Bandym\u0173 skai\u010dius>, <S\u0117km\u0117s tikimyb\u0117> ]\n[ <Bandym\u0173 skai\u010dius>, <S\u0117km\u0117s tikimyb\u0117>, <Login\u0117 vert\u0117> ]\n[ <Bandym\u0173 skai\u010dius>, <S\u0117km\u0117s tikimyb\u0117>, <Kintamasis>, <Login\u0117 vert\u0117> ]
BinomialDist.SyntaxCAS=[ <Bandym\u0173 skai\u010dius>, <S\u0117km\u0117s tikimyb\u0117>, <Kintamasis>, <Login\u0117 vert\u0117> ]
Bottom=Apa\u010dia
Bottom.Syntax=[ <Kvadratin\u0117 lygtis> ]
BoxPlot=Grafikas
BoxPlot.Syntax=[ <yPoslinkis>, <ySkal\u0117>, <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <yPoslinkis>, <ySkal\u0117>, <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar Klaidingi duomenys> ]\n[ <yPoslinkis>, <ySkal\u0117>, <Duomen\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar Klaidingi duomenys> ]\n[ <yPoslinkis>, <ySkal\u0117>, <Pradin\u0117 reik\u0161m\u0117>, <Q1>, <Mediana>, <Q3>, <Pabaigos reik\u0161m\u0117> ]
Button=Mygtukas
Button.Syntax=[ ]\n[ <Pavadinimas> ]
CFactor=KompleksiniaiDauginamieji
CFactor.SyntaxCAS=[ <I\u0161rai\u0161ka> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis> ]
CIFactor=CIFaktorius
CIFactor.SyntaxCAS=[ <I\u0161rai\u0161ka> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis> ]
CSolutions=CSprendiniai
CSolutions.SyntaxCAS=[ <Lygyb\u0117> ]\n[ <Lygyb\u0117>, <Kintamasis> ]\n[ <Lygybi\u0173 s\u0105ra\u0161as>, <Kintam\u0173j\u0173 s\u0105ra\u0161as> ]
CSolve=CSpr\u0119sti
CSolve.SyntaxCAS=[ <Lygyb\u0117> ]\n[ <Lygyb\u0117>, <Kintamasis> ]\n[ <Lygybi\u0173 s\u0105ra\u0161as>, <Kintam\u0173j\u0173 s\u0105ra\u0161as> ]
Cauchy=Ko\u0161i
Cauchy.Syntax=[ <Mediana>, <Skal\u0117>, <Kintamojo vert\u0117> ]\n[ <Mediana>, <Skal\u0117>, x, <Login\u0117 vert\u0117> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Skal\u0117>, <Kintamojo vert\u0117> ]
Cell=Langelis
Cell.Syntax=[ <Stulpelis>, <Eilut\u0117> ]
CellRange=Langeli\u0173Sritis
CellRange.Syntax=[ <Prad\u017eios langelis>, <Galo langelis> ]
Center=Centras
Center.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
Center.Syntax3D=[ <K\u016bgis> ]\n[ <Kvadratin\u0117 lygtis> ]
CenterView=CentroVaizdas
CenterView.Syntax=[ <Centro ta\u0161kas> ]
Centroid=Centroid\u0117
Centroid.Syntax=[ <Daugiakampis> ]
Checkbox=\u017dymimasisLangelis
Checkbox.Syntax=[ ]\n[ <Pavadinimas> ]\n[ <S\u0105ra\u0161as> ]\n[ <Pavadinimas>, <S\u0105ra\u0161as> ]
ChiSquared=ChiKvadratu
ChiSquared.Syntax=[ <Laisv\u0117s laipsnis>, <Kintamojo vert\u0117> ]\n[ <Laisv\u0117s laipsnis>, x, <Login\u0117 vert\u0117> ]
ChiSquared.SyntaxCAS=[ <Laisv\u0117s laipsnis>, <Kintamojo vert\u0117> ]
ChiSquaredTest=ChiKvadratuTestas
ChiSquaredTest.Syntax=[ <Matrica> ]\n[ <S\u0105ra\u0161as>, <S\u0105ra\u0161as> ]\n[ <Matrica>, <Matrica> ]
Circle=Apskritimas
Circle.Syntax=[ <Ta\u0161kas>, <Spindulys> ]\n[ <Ta\u0161kas>, <Atkarpa> ]\n[ <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
Circle.Syntax3D=[ <Ta\u0161kas>, <Spindulio ilgis> ]\n[ <Ta\u0161kas>, <Atkarpa> ]\n[ <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Line>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Spindulys>, <Kryptis> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Kryptis> ]
CircleArc=ApskritimoLankas
CircleArc.Syntax=[ <VidurioTa\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
CircleSector=SkritulioI\u0161pjova
CircleSector.Syntax=[ <VidurioTa\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
CircumcircleArc=LankoNuopjova
CircumcircleArc.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
CircumcircleSector=NuopjovosDalis
CircumcircleSector.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
Circumference=Perimetras
Circumference.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
Classes=Klas\u0117s
Classes.Syntax=[ <Duomen\u0173 s\u0105ra\u0161as>, <Klasi\u0173 skai\u010dius> ]\n[ <Duomen\u0173 s\u0105ra\u0161as>, <Prad\u017eia>, <Klasi\u0173 plotis> ]
ClosestPoint=ArtimiausiasTa\u0161kas
ClosestPoint.Syntax=[ <Kelias>, <Ta\u0161kas> ]\n[ <Ties\u0117>, <Ties\u0117> ]
ClosestPointRegion=ArtimiausioTa\u0161oSritis
ClosestPointRegion.Syntax=[ <Sritis>, <Ta\u0161kas> ]
Coefficients=Koeficientai
Coefficients.Syntax=[ <Daugianaris> ]\n[ <Antros eil\u0117s kreiv\u0117> ]
Coefficients.SyntaxCAS=[ <Daugianaris> ]\n[ <Daugianaris>, <Kintamasis> ]
Column=Stulpelis
Column.Syntax=[ <Skai\u010diuokl\u0117s langelis> ]
ColumnName=StulpelioPavadinimas
ColumnName.Syntax=[ <Skai\u010diuokl\u0117s langelis> ]
Command=Komanda
CommonDenominator=BendrasDaliklis
CommonDenominator.Syntax=[ <I\u0161rai\u0161ka>, <I\u0161rai\u0161ka> ]
CompetitionRank=Konkurencingumas
CompetitionRank.Syntax=[ <S\u0105ra\u0161as> ]
CompleteSquare=PilnasKvadratas
CompleteSquare.Syntax=[ <Kvadratin\u0117 funkcija> ]
ComplexRoot=Kompleksin\u0117\u0160aknis
ComplexRoot.Syntax=[ <Daugianaris> ]
Cone=K\u016bgis
Cone.Syntax=[ <Apskritimas>, <Auk\u0161tis> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Spindulys> ]\n[ <Ta\u0161kas>, <Vektorius>, <Kampas> ]
Conic=AntrosEil\u0117sKreiv\u0117
Conic.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Skai\u010dius>, <Skai\u010dius>, <Skai\u010dius>, <Skai\u010dius>, <Skai\u010dius>, <Skai\u010dius> ]
ConstructionStep=Konstrukcijos\u017dingsnis
ConstructionStep.Syntax=[ ]\n[ <Objektas> ]
ContingencyTable=Atstiktin\u0117Lentel\u0117
ContingencyTable.Syntax=[ <Teksto s\u0105ra\u0161as>, <Teksto s\u0105ra\u0161as> ]\n[ <Teksto s\u0105ra\u0161as>, <Teksto s\u0105ra\u0161as>, <Pasirinkimai> ]\n[ <Eilut\u0117s reik\u0161mi\u0173 s\u0105ra\u0161as>, <Stulpelio reik\u0161mi\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 lentel\u0117> ]\n[ <Eilut\u0117s reik\u0161mi\u0173 s\u0105ra\u0161as>, <Stulpelio reik\u0161mi\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 lentel\u0117>, <Pasirinkimai> ]
ContinuedFraction=I\u0161t\u0119stin\u0117Trupmena
ContinuedFraction.Syntax=[ <Skai\u010dius> ]\n[ <Skai\u010dius>, <Lygis> ]\n[ <Skai\u010dius>, <Lygis>, <Santrumpa tiesa|netiesa> ]
ConvexHull=I\u0161gaubtasKorpusas
ConvexHull.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
CopyFreeObject=KopijuotiLaisv\u0105Objekt\u0105
CopyFreeObject.Syntax=[ <Objektas> ]
Corner=Vir\u0161\u016bn\u0117
Corner.Syntax=[ <Kampo skai\u010dius> ]\n[ <Paveiksl\u0117lis>, <Kampo skai\u010dius> ]\n[ <Tekstas>, <Kampo skai\u010dius> ]
CountIf=Skai\u010diuotiJei
CountIf.Syntax=[ <S\u0105lyga>, <S\u0105ra\u0161as> ]\n[ <S\u0105lyga>, <Kintamasis>, <S\u0105ra\u0161as> ]
Covariance=Kovariacija
Covariance.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Skai\u010di\u0173 s\u0105ra\u0161as> ]
Cross=Vektori\u0173Daugyba
Cross.Syntax=[ <Vektorius>, <Vektorius> ]
CrossRatio=Vektori\u0173DaugybosSantykis
CrossRatio.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
Cube=Kubas
Cube.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Kryptis> ]
Cubic=Kubinis
Cubic.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas>, <Skai\u010dius> ]
Curvature=I\u0161linkis
Curvature.Syntax=[ <Ta\u0161kas>, <Objektas> ]
CurvatureVector=I\u0161linkioVektorius
CurvatureVector.Syntax=[ <Ta\u0161kas>, <Objektas> ]
CurveCartesian=Kreiv\u0117
CurveCartesian.Syntax=[ <I\u0161rai\u0161ka>, <I\u0161rai\u0161ka>, <Parametro reik\u0161m\u0117>, <Prad\u017eios reik\u0161m\u0117>, <Galo reik\u0161m\u0117> ]
CurveCartesian.Syntax3D=[ <I\u0161rai\u0161ka>, <I\u0161rai\u0161ka>, <Parametro reik\u0161m\u0117>, <Prad\u017eios reik\u0161m\u0117>, <Galo reik\u0161m\u0117> ]\n[ <I\u0161rai\u0161ka>, <I\u0161rai\u0161ka>, <I\u0161rai\u0161ka>, <Parametro reik\u0161m\u0117>, <Prad\u017eios reik\u0161m\u0117>, <Galo reik\u0161m\u0117> ]
Cylinder=Cilindras
Cylinder.Syntax=[ <Apskritimas>, <Auk\u0161tis> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Spindulys> ]
Defined=YraApibr\u0117\u017etas
Defined.Syntax=[ <Objektas> ]
Degree=Laipsnis
Degree.Syntax=[ <Daugianaris> ]
Degree.SyntaxCAS=[ <Daugianaris> ]\n[ <Daugianaris>, <Kintamasis> ]
DelauneyTriangulation=DelaunayTrianguliacija
DelauneyTriangulation.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
Delete=Trinti
Delete.Syntax=[ <Objektas> ]
Denominator=Vardiklis
Denominator.Syntax=[ <Funkcija> ]
Denominator.SyntaxCAS=[ <I\u0161rai\u0161ka> ]
DensityPlot=TankioGrafikas
Derivative=I\u0161vestin\u0117
Derivative.Syntax=[ <Funkcija> ]\n[ <Kreiv\u0117> ]\n[ <Funkcija>, <Skai\u010dius> ]\n[ <Funkcija>, <Kintamasis> ]\n[ <Kreiv\u0117>, <Skai\u010dius> ]\n[ <Funkcija>, <Kintamasis>, <Skai\u010dius> ]
Derivative.SyntaxCAS=[ <I\u0161rai\u0161ka> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis>, <Skai\u010dius> ]
Determinant=Determinantas
Determinant.Syntax=[ <Matrica> ]
Diameter=Diametras
Diameter.Syntax=[ <Vektorius>, <Antros eil\u0117s kreiv\u0117> ]\n[ <Ties\u0117>, <Antros eil\u0117s kreiv\u0117> ]
Dilate=Pl\u0117sti
Dilate.Syntax=[ <Objektas>, <Pl\u0117timo faktorius>, <Pl\u0117timo centro ta\u0161kas> ]
Dimension=Dimensija
Dimension.Syntax=[ <Objektas> ]
Direction=Kryptis
Direction.Syntax=[ <Ties\u0117> ]
Directrix=Direktris\u0117
Directrix.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
Distance=Atstumas
Distance.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ties\u0117> ]
Div=Dalmuo
Div.Syntax=[ <Skaitiklis>, <Vardiklis> ]\n[ <Dalinamasis daugianaris>, <Dalinantis daugianaris> ]
Division=Dalyba
Division.Syntax=[ <Skaitiklis>, <Vardiklis> ]\n[ <Dalinamasis daugianaris>, <Dalinantis daugianaris> ]
Divisors=Dalikliai
Divisors.Syntax=[ <Skai\u010dius> ]
DivisorsList=Dalikli\u0173S\u0105ra\u0161as
DivisorsList.Syntax=[ <Skai\u010dius> ]
DivisorsSum=Dalikli\u0173Suma
DivisorsSum.Syntax=[ <Skai\u010dius> ]
Dodecahedron.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Kryptis> ]
Dot=Skaliarin\u0117Sandauga
Dot.Syntax=[ <Vektorius>, <Vektorius> ]
DotPlot=Ta\u0161k\u0173Vaizdavimas
DotPlot.Syntax=[ <Neapdoroti duomenys>, <Gretimi ta\u0161kai (neb\u016btina)>, <I\u0161tempimas (neb\u016btinas)> ]
DynamicCoordinates=Dinamin\u0117sKoordinat\u0117s
DynamicCoordinates.Syntax=[ <Ta\u0161kas>, <Skai\u010dius>, <Skai\u010dius> ]
Eccentricity=EkscentricitetoSantykis
Eccentricity.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
Element=Elementas
Element.Syntax=[ <S\u0105ra\u0161as>, <Elemento pozicija> ]\n[ <Matrica>, <Eilut\u0117>, <Stulpelis> ]
Element.SyntaxCAS=[ <S\u0105ra\u0161as>, <Elemento pozicija> ]\n[ <Matrica>, <Eilut\u0117>, <Stulpelis> ]
Eliminate=Pa\u0161alinti
Eliminate.Syntax=[ <Daugianari\u0173 s\u0105ra\u0161as>, <Kintam\u0173j\u0173 s\u0105ra\u0161as> ]
Ellipse=Elips\u0117
Ellipse.Syntax=[ <\u017didinio ta\u0161kas>, <\u017didinio ta\u0161kas>, <A\u0161ies ilgis> ]\n[ <\u017didinio ta\u0161kas>, <\u017didinio ta\u0161kas>, <Atkarpa> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
Ends=Galai
Ends.Syntax=[ <Kvadratin\u0117 lygtis> ]
Envelope=Lai\u0161kas
Envelope.Syntax=[ <Kelias>, <Ta\u0161kas> ]
Erlang.Syntax=[ <Forma>, <Da\u017enis>, <Kintamojo vert\u0117> ]\n[ <Forma>, <Da\u017enis>, x, <Login\u0117 vert\u0117> ]
Evaluate=\u012evertinti
Excentricity=Ekscentricitetas
Excentricity.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
Execute=Vykdyti
Execute.Syntax=[ <Tekstas> ]\n[ <Tekstas>, <Parametras>, <Parametras>, ... ]
Expand=Prapl\u0117sti
Expand.Syntax=[ <Funkcija> ]
Exponential=Eksponentinis
Exponential.Syntax=[ <Liamda>, <Kintamojo vert\u0117> ]\n[ <Liamda>, x, <Login\u0117 vert\u0117> ]
Exponential.SyntaxCAS=[ <Liamda>, <Kintamojo vert\u0117> ]
Extremum=Ekstremumas
Extremum.Syntax=[ <Daugianaris> ]\n[ <Funkcija>, <Pradin\u0117 x reik\u0161m\u0117>, <Galin\u0117 x reik\u0161m\u0117> ]
FDistribution=FPasiskirstymas
FDistribution.Syntax=[ <Skaitiklio laisv\u0117s laipsnis>, <Vardiklio laisv\u0117s laipsnis>, <Kintamojo vert\u0117> ]\n[ <Skaitiklio laisv\u0117s laipsnis>, <Vardiklio laisv\u0117s laipsnis>, x, <Login\u0117 vert\u0117> ]
FDistribution.SyntaxCAS=[ <Skaitiklio laisv\u0117s laipsnis>, <Vardiklio laisv\u0117s laipsnis>, <Kintamojo vert\u0117> ]
Factor=SkaidymasDauginamaisiais
Factor.Syntax=[ <Daugianaris> ]
Factor.SyntaxCAS=[ <Daugianaris> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis> ]
Factors=Dauginamieji
Factors.Syntax=[ <Daugianaris> ]\n[ <Skai\u010dius> ]
FillCells=U\u017epildytiLangelius
FillCells.Syntax=[ <Langeli\u0173 s\u0105ra\u0161as>, <Objektas> ]\n[ <Langelis>, <S\u0105ra\u0161as> ]\n[ <Langelis>, <Matrica> ]
FillColumn=U\u017epildytiStulpel\u012f
FillColumn.Syntax=[ <Stulpelis>, <S\u0105ra\u0161as> ]
FillRow=U\u017epildytiEilut\u0119
FillRow.Syntax=[ <Eilut\u0117>, <S\u0105ra\u0161as> ]
First=Pirmas
First.Syntax=[ <S\u0105ra\u0161as> ]\n[ <Tekstas> ]\n[ <S\u0105ra\u0161as>, <Element\u0173 skai\u010dius> ]\n[ <Tekstas>, <Element\u0173 skai\u010dius> ]
First.SyntaxCAS=[ <S\u0105ra\u0161as> ]\n[ <S\u0105ra\u0161as>, <Element\u0173 skai\u010dius> ]
FirstAxis=PirmaA\u0161is
FirstAxis.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
FirstAxisLength=PirmosA\u0161iesIlgis
FirstAxisLength.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
Fit=Talpinti
Fit.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Funkcij\u0173 s\u0105ra\u0161as> ]\n[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Funkcija> ]
FitExp=TalpintiI\u0161rai\u0161k\u0105
FitExp.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
FitGrowth=TalpintiPrieaug\u012f
FitGrowth.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
FitImplicit=TalpintiElips\u0119
FitImplicit.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Eil\u0117> ]
FitLineX=TalpintiTies\u0119X
FitLineX.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
FitLineY=TalpintiTies\u0119
FitLineY.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
FitLog=TalpintiLog
FitLog.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
FitLogistic=TalpintiLogistin\u0119
FitLogistic.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
FitPoly=TalpintiDaugianar\u012f
FitPoly.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Daugianario laipsnis> ]
FitPow=TalpintiLaipsn\u012f
FitPow.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
FitSin=TalpintiSin
FitSin.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
Flatten=Sulyginti
Flatten.Syntax=[ <S\u0105ra\u0161as> ]
Focus=\u017didinys
Focus.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
FractionText=TrupmenosTekstas
FractionText.Syntax=[ <Skai\u010dius> ]\n[ <Ta\u0161kas> ]
Frequency=Da\u017enis
Frequency.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <B\u016blio logikos elementas>, <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Klas\u0117s r\u0117\u017eiai>, <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Tekstinis s\u0105ra\u0161as>, <Tekstinis s\u0105ra\u0161as> ]\n[ <B\u016blio logikos elementas>, <Klas\u0117s r\u0117\u017eiai>, <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Klas\u0117s r\u0117\u017eiai>, <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as>, <Da\u017enis>, <Da\u017enio faktorius> ]\n[ <B\u016blio logikos elementas>, <Klas\u0117s r\u0117\u017eiai>, <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as>, <Da\u017enis>, <Da\u017enio faktorius> ]
FrequencyPolygon=DaugiakampioDa\u017enis
FrequencyPolygon.Syntax=[ <Klas\u0117s ribos>, <Auk\u0161\u010di\u0173 s\u0105ra\u0161as> ]
FrequencyTable=Da\u017eni\u0173Lentel\u0117
FrequencyTable.Syntax=[ <Duomen\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]\n[ <Neapdoroti duomenys>, <Stulpeli\u0173 plotis>, <Vertikalus i\u0161tempimas (neb\u016btinas)> ]\n[ <Duomen\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as>, <Stulpeli\u0173 plotis> ]\n[ <Pradin\u0117 vert\u0117>, <Galutin\u0117 vert\u0117>, <Auk\u0161\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Pradin\u0117 vert\u0117>, <Galutin\u0117 vert\u0117>, <I\u0161rai\u0161ka>, <Kintamasis>, <Nuo>, <Iki> ]\n[ <Pradin\u0117 vert\u0117>, <Galutin\u0117 vert\u0117>, <I\u0161rai\u0161ka>, <Kintamasis>, <Nuo>, <Iki>, <\u017dingsnis> ]
FromBase=NuoPagrindo
FromBase.Syntax=[ "<Skai\u010dius kaip tekstas>", <Pagrindas> ]
Function=Funkcija
Function.Syntax=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117> ]
Function.Syntax3D=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117> ]\n[ <I\u0161rai\u0161ka>, <Parametro kintamasis 1>, <Prad\u017eios reik\u0161m\u0117>, <Galo reik\u0161m\u0117>, <Parametro kintamasis 2>, <Prad\u017eios reik\u0161m\u0117>, <Galo reik\u0161m\u0117> ]
Function.SyntaxCAS=[ <Funkcija>, <Startin\u0117 x vert\u0117>, <Galin\u0117 x vert\u0117> ]
FutureValue=KitaVert\u0117
FutureValue.Syntax=[ <Da\u017enis>, <Period\u0173 skai\u010dius>, <Mok\u0117jimas>, <Dabartin\u0117 vert\u0117 (neb\u016btinas)>, <Tipas (neb\u016btinas)> ]
GCD=DBD
GCD.Syntax=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010dius>, <Skai\u010dius> ]
GCD.SyntaxCAS=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Daugianari\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010dius>, <Skai\u010dius> ]\n[ <Daugianaris>, <Daugianaris> ]
Gamma=Gama
Gamma.Syntax=[ <Alfa>, <Beta>, <Kintamojo vert\u0117> ]\n[ <Alfa>, <Beta>, x, <Login\u0117 vert\u0117> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Kintamojo vert\u0117> ]
GeometricMean=GeometrinisVidurkis
GeometricMean.Syntax=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]
GetTime=GautiLaik\u0105
GetTime.Syntax=[ ]\n[ "<Formatas>" ]
GroebnerDegRevLex.Syntax=[ <Daugianari\u0173 s\u0105ra\u0161as> ]\n[ <Daugianari\u0173 s\u0105ra\u0161as>, <Kintam\u0173j\u0173 s\u0105ra\u0161as> ]
GroebnerLex.Syntax=[ <Daugianari\u0173 s\u0105ra\u0161as> ]\n[ <Daugianari\u0173 s\u0105ra\u0161as>, <Kintam\u0173j\u0173 s\u0105ra\u0161as> ]
GroebnerLexDeg.Syntax=[ <Daugianari\u0173 s\u0105ra\u0161as> ]\n[ <Daugianari\u0173 s\u0105ra\u0161as>, <Kintam\u0173j\u0173 s\u0105ra\u0161as> ]
HarmonicMean=HarmoninisVidurkis
HarmonicMean.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
Height=Auk\u0161tis
Height.Syntax=[ <K\u016bnas> ]
HideLayer=Sl\u0117ptiSluoksn\u012f
HideLayer.Syntax=[ <Skai\u010dius> ]
Histogram=Histograma
Histogram.Syntax=[ <Klas\u0117s rib\u0173 s\u0105ra\u0161as>, <Auk\u0161\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Klas\u0117s rib\u0173 s\u0105ra\u0161as>, <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar naudoti tankum\u0105>, <Tankumo faktorius> ]\n[ <Login\u0117 vert\u0117>, <Klas\u0117s rib\u0173 s\u0105ra\u0161as>, <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar naudoti tankum\u0105>, <Tankumo faktorius> ]
HistogramRight=HistogramaDe\u0161in\u0117je
HistogramRight.Syntax=[ <Klas\u0117s rib\u0173 s\u0105ra\u0161as>, <Auk\u0161\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Klas\u0117s rib\u0173 s\u0105ra\u0161as>, <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar naudoti tankum\u0105>, <Tankumo faktorius> ]\n[ <Login\u0117 vert\u0117>, <Klas\u0117s rib\u0173 s\u0105ra\u0161as>, <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar naudoti tankum\u0105>, <Tankumo faktorius> ]
HyperGeometric=HyperGeometrinis
HyperGeometric.Syntax=[ <Populiacijos dydis>, <S\u0117kmi\u0173 skai\u010dius>, <Dydis> ]\n[ <Populiacijos dydis>, <S\u0117kmi\u0173 skai\u010dius>, <Dydis>, <Login\u0117 vert\u0117> ]\n[ <Populiacijos dydis>, <S\u0117kmi\u0173 skai\u010dius>, <Dydis>, <Kintamojo vert\u0117>, <Login\u0117 vert\u0117> ]
HyperGeometric.SyntaxCAS=[ <Populiacijos dydis>, <S\u0117kmi\u0173 skai\u010dius>, <Dydis>, <Kintamojo vert\u0117>, <Login\u0117 vert\u0117> ]
Hyperbola=Hiperbol\u0117
Hyperbola.Syntax=[ <\u017didinio ta\u0161kas>, <\u017didinio ta\u0161kas>, <A\u0161ies ilgis> ]\n[ <\u017didinio ta\u0161kas>, <\u017didinio ta\u0161kas>, <Atkarpa> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
IFactor=IFaktorius
IFactor.Syntax=[ <Daugianaris> ]
IFactor.SyntaxCAS=[ <I\u0161rai\u0161ka> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis> ]
Icosahedron.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Kryptis> ]
Identity=Vienetin\u0117Matrica
Identity.Syntax=[ <Skai\u010dius> ]
If=Jei
If.Syntax=[ <S\u0105lyga>, <Tada> ]\n[ <S\u0105lyga>, <Tada>, <Kitu atveju> ]
ImplicitCurve=Nei\u0161reik\u0161tin\u0117Kreiv\u0117
ImplicitCurve.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <f(x, y)> ]
ImplicitDerivative=Nei\u0161krei\u0161tin\u0117I\u0161vestin\u0117
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <I\u0161rai\u0161ka>, <Priklausomas kintamasis>, <Nepriklausomas kintamasis> ]
Incircle=\u012ebr\u0117\u017etinisApskritimas
Incircle.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
IndexOf=Indeksas
IndexOf.Syntax=[ <Objektas>, <S\u0105ra\u0161as> ]\n[ <Tekstas>, <Tekstas> ]\n[ <Objektas>, <S\u0105ra\u0161as>, <S\u0105ra\u0161o prad\u017eia> ]\n[ <Tekstas>, <Tekstas>, <Teksto prad\u017eia> ]
InfiniteCone=BegalinisK\u016bgis
InfiniteCone.Syntax=[ <Ta\u0161kas>, <Vektorius>, <Kampas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Kampas> ]\n[ <Ta\u0161kas>, <Ties\u0117>, <Kampas> ]
InfiniteCylinder=BegalinisCilindras
InfiniteCylinder.Syntax=[ <Ties\u0117>, <Spindulys> ]\n[ <Ta\u0161kas>, <Vektorius>, <Spindulys> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Spindulys> ]
Insert=\u012eterpti
Insert.Syntax=[ <S\u0105ra\u0161as, <S\u0105ra\u0161as>, <Pozicija> ]\n[ <Objektas>, <S\u0105ra\u0161as>, <Pozicija> ]
Integral=Integralas
Integral.Syntax=[ <Funkcija> ]\n[ <Funkcija>, <Kintamasis> ]\n[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117> ]\n[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117>, <Login\u0117 vert\u0117 ar \u012fvertinti> ]
Integral.SyntaxCAS=[ <Funkcija> ]\n[ <Funkcija>, <Kintamasis> ]\n[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117> ]\n[ <Funkcija>, <Kintamasis>, <Prad\u017eios vert\u0117>, <Galo vert\u0117> ]
IntegralBetween=IntegralasTarp
IntegralBetween.Syntax=[ <Funkcija>, <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117> ]\n[ <Funkcija>, <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117>, <Login\u0117 vert\u0117> ]
IntegralBetween.SyntaxCAS=[ <Funkcija>, <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117> ]\n[ <Funkcija>, <Funkcija>, <Kintamasis>, <Prad\u017eios vert\u0117>, <Galo vert\u0117> ]
Intersect=Sukirsti
Intersect.Syntax=[ <Objektas>, <Objektas> ]\n[ <Objektas>, <Objektas>, <Sankirtos ta\u0161ko skai\u010dius> ]\n[ <Objektas>, <Objektas>, <Prad\u017eios ta\u0161kas> ]\n[ <Funkcija>, <Funkcija>, <Prad\u017eios x vert\u0117>, <Galo x vert\u0117> ]\n[ <1 kreiv\u0117>, <2 kreiv\u0117>, <1 parametras>, <2 parametras> ]
Intersect.SyntaxCAS=[ <Funkcija>, <Funkcija> ]
IntersectConic=KirstiK\u016bg\u012f
IntersectConic.Syntax=[ <Plok\u0161tuma>, <Kvadratin\u0117 lygtis> ]\n[ <Kvadratin\u0117 lygtis>, <Kvadratin\u0117 lygtis> ]
IntersectPath=SukirstiKelius
IntersectPath.Syntax=[ <Ties\u0117>, <Daugiakampis> ]\n[ <Daugiakampis>, <Daugiakampis> ]
IntersectPath.Syntax3D=[ <Ties\u0117>, <Daugiakampis> ]\n[ <Daugiakampis>, <Daugiakampis> ]\n[ <Plok\u0161tuma>, <Daugiakampis> ]\n[ <Plok\u0161tuma>, <Kvadratin\u0117 lygtis> ]
Intersection=Sankirta
Intersection.Syntax=[ <S\u0105ra\u0161as>, <S\u0105ra\u0161as> ]
InverseBinomial=Atvirk\u0161tinisBinominis
InverseBinomial.Syntax=[ <Number of Trials>, <S\u0117km\u0117s tikimyb\u0117>, <Tikimyb\u0117> ]
InverseCauchy=Atvirk\u0161tinisKo\u0161i
InverseCauchy.Syntax=[ <Mediana>, <Skal\u0117>, <Tikimyb\u0117> ]
InverseChiSquared=Atvirk\u0161tinisChiKvadrat
InverseChiSquared.Syntax=[ <Laisv\u0117s laipsnis>, <Tikimyb\u0117> ]
InverseExponential=Atvirk\u0161tinisEksponentinis
InverseExponential.Syntax=[ <Lambda>, <Tikimyb\u0117> ]
InverseFDistribution=Atvirk\u0161tinisFPasiskirstymas
InverseFDistribution.Syntax=[ <Skaitiklio laisv\u0117s laipsnis>, <Vardiklio laisv\u0117s laipsnis>, <Tikimyb\u0117> ]
InverseGamma=Atvirk\u0161tinisGamma
InverseGamma.Syntax=[ <Alpha>, <Beta>, <Tikimyb\u0117> ]
InverseHyperGeometric=Atvirk\u0161tinisHyperGeometrinis
InverseHyperGeometric.Syntax=[ <Populiacijos dydis>, <S\u0117kmi\u0173 skai\u010dius>, <Pavyzd\u017eio dydis>, <Tikimyb\u0117> ]
InverseLaplace=LaplasoAtvirk\u0161tin\u0117Transformacija
InverseLaplace.Syntax=[ <Funkcija> ]\n[ <Funkcija>, <Kintamasis> ]\n[ <Funkcija>, <Kintamasis>, <Kintamasis> ]
InverseLogNormal=Atvirk\u0161tinisLogNormalus
InverseLogNormal.Syntax=[ <Vidurkis>, <Standartinis nuokrypis>, <Tikimyb\u0117> ]
InverseLogistic=Atvirk\u0161tinisLogistinis
InverseLogistic.Syntax=[ <Vidurkis>, <Skal\u0117>, <Tikimyb\u0117> ]
InverseNormal=Atvirk\u0161tin\u0117Normal\u0117
InverseNormal.Syntax=[ <Vidurkis>, <Standartinis nuokrypis>, <Tikimyb\u0117> ]
InversePascal=Atvirk\u0161tinisPaskalio
InversePascal.Syntax=[ <S\u0117kmi\u0173 skai\u010dius>, <S\u0117km\u0117s tikimyb\u0117>, <Tikimyb\u0117> ]
InversePoisson=Atvirk\u0161tinisPoisson
InversePoisson.Syntax=[ <Vidurkis>, <Tikimyb\u0117> ]
InverseTDistribution=Atvirk\u0161tinisTPasiskirstymas
InverseTDistribution.Syntax=[ <Laisv\u0117s laipsnis>, <Tikimyb\u0117> ]
InverseWeibull=Atvirk\u0161tinisWeibull
InverseWeibull.Syntax=[ <Shape>, <Skal\u0117>, <Tikimyb\u0117> ]
InverseZipf=Atvirk\u0161tinisZipf
InverseZipf.Syntax=[ <Element\u0173 skai\u010dius>, <Eksponentinis>, <Tikimyb\u0117> ]
Invert=Atvirk\u0161tin\u0117
Invert.Syntax=[ <Matrica> ]\n[ <Funkcija> ]
IsInRegion=YraRegione
IsInRegion.Syntax=[ <Ta\u0161kas>, <Regionas> ]
IsInteger=YraSveikas
IsInteger.Syntax=[ <Skai\u010dus> ]
IsPrime=YraPirminis
IsPrime.Syntax=[ <Skai\u010dius> ]
Iteration=Iteracija
Iteration.Syntax=[ <Funkcija>, <Prad\u017eios reik\u0161m\u0117>, <Iteracij\u0173 skai\u010dius> ]
IterationList=Iteracij\u0173S\u0105ra\u0161as
IterationList.Syntax=[ <Funkcija>, <Prad\u017eios reik\u0161m\u0117>, <Iteracij\u0173 skai\u010dius> ]
Join=Sujungti
Join.Syntax=[ <S\u0105ra\u0161\u0173 s\u0105ra\u0161as> ]\n[ <S\u0105ra\u0161as>, <S\u0105ra\u0161as>, ... ]
KeepIf=LaikytiJei
KeepIf.Syntax=[ <S\u0105lyga>, <S\u0105ra\u0161as> ]\n[ <S\u0105lyga>, <Kintamasis>, <S\u0105ra\u0161as> ]
LCM=MBK
LCM.Syntax=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010dius>, <Skai\u010dius> ]
LCM.SyntaxCAS=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Daugianari\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010dius>, <Skai\u010dius> ]\n[ <Daugianaris>, <Daugianaris> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Objektas> ]\n[ <Objektas>, <Login\u0117 vert\u0117 ar perstatyti kintamuosius> ]\n[ <Objektas>, <Login\u0117 vert\u0117 ar perstatyti kintamuosius>, <Login\u0117 vert\u0117 ar rodyti pavadinim\u0105> ]
Laplace=LaplasoTransformacija
Laplace.Syntax=[ <Funkcija> ]\n[ <Funkcija>, <Kintamasis> ]\n[ <Funkcija>, <Kintamasis>, <Kintamasis> ]
Last=Paskutinis
Last.Syntax=[ <S\u0105ra\u0161as> ]\n[ <Tekstas> ]\n[ <S\u0105ra\u0161as>, <Element\u0173 skai\u010dius> ]\n[ <Tekstas>, <Element\u0173 skai\u010dius> ]
Last.SyntaxCAS=[ <S\u0105ra\u0161as> ]\n[ <S\u0105ra\u0161as>, <Element\u0173 skai\u010dius> ]
LeftSide=Kair\u0117Pus\u0117
LeftSide.Syntax=[ <Lygtis> ]
LeftSide.SyntaxCAS=[ <Lygtis> ]\n[ <Lyg\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Lyg\u010di\u0173 s\u0105ra\u0161as>, <Indeksas> ]
LeftSum=Kair\u0117Suma
LeftSum.Syntax=[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117>, <Sta\u010diakampi\u0173 skai\u010dius> ]
Length=Ilgis
Length.Syntax=[ <Objektas> ]\n[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117> ]\n[ <Funkcija>, <Prad\u017eios ta\u0161kas>, <Galo ta\u0161kas> ]\n[ <Kreiv\u0117>, <Prad\u017eios t reik\u0161m\u0117>, <Galo t reik\u0161m\u0117> ]\n[ <Kreiv\u0117>, <Prad\u017eios ta\u0161kas>, <Galo ta\u0161kas> ]
Length.SyntaxCAS=[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117> ]\n[ <Funkcija>, <Kintamasis>, <Prad\u017eios ta\u0161kas>, <Galo ta\u0161kas> ]
LetterToUnicode=Raid\u0117Unikode
LetterToUnicode.Syntax=[ <Tekstas> ]
Limit=Riba
Limit.Syntax=[ <Funkcija>, <Reik\u0161m\u0117> ]
Limit.SyntaxCAS=[ <I\u0161rai\u0161ka>, <Reik\u0161m\u0117> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis>, <Reik\u0161m\u0117> ]
LimitAbove=RibaVir\u0161utin\u0117
LimitAbove.Syntax=[ <Funkcija>, <Reik\u0161m\u0117> ]
LimitAbove.SyntaxCAS=[ <I\u0161rai\u0161ka>, <Reik\u0161m\u0117> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis>, <Reik\u0161m\u0117> ]
LimitBelow=RibaApatin\u0117
LimitBelow.Syntax=[ <Funkcija>, <Reik\u0161m\u0117> ]
LimitBelow.SyntaxCAS=[ <I\u0161rai\u0161ka>, <Reik\u0161m\u0117> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis>, <Reik\u0161m\u0117> ]
Line=Ties\u0117
Line.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Lygiagret\u0117> ]\n[ <Ta\u0161kas>, <Krypties vektorius> ]
LineBisector=StatmenaKirstin\u0117
LineBisector.Syntax=[ <Atkarpa> ]\n[ <Ta\u0161kas>, <Ta\u0161kas> ]
LineBisector.Syntax3D=[ <Atkarpa> ]\n[ <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Kryptis> ]
Locus=Hodografas
Locus.Syntax=[ <Ta\u0161kas apibr\u0117\u017eiantis hodograf\u0105>, <Ta\u0161kas> ]\n[ <Ta\u0161kas apibr\u0117\u017eiantis hodograf\u0105>, <Slankjuost\u0117> ]\n[ <Posvyrio laukas>, <Ta\u0161kas> ]\n[ <f(x, y)>, <Ta\u0161kas> ]
LocusEquation=HodografoLygtis
LocusEquation.Syntax=[ <Hodografas> ]\n[ <Hodografo ta\u0161kas>, <Judantis Ta\u0161kas> ]
LogNormal=LogNormalus
LogNormal.Syntax=[ <Vidurkis>, <Standartinis nuokrypis>, <Kintamojo vert\u0117> ]\n[ <Vidurkis>, <Standartinis nuokrypis>, x, <Login\u0117 vert\u0117> ]
Logistic=Logistinis
Logistic.Syntax=[ <Vidurkis>, <Skal\u0117>, <Kintamojo vert\u0117> ]\n[ <Vidurkis>, <Skal\u0117>, x, <Login\u0117 vert\u0117> ]
LowerSum=Apatin\u0117Suma
LowerSum.Syntax=[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117>, <Sta\u010diakampi\u0173 skai\u010dius> ]
MAD.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
MatrixPlot=MatricosVaizdas
MatrixRank=MatricosRangas
MatrixRank.Syntax=[ <Matrica> ]
Max=Maksimumas
Max.Syntax=[ <Intervalas> ]\n[ <S\u0105ra\u0161as> ]\n[ <Skai\u010dius>, <Skai\u010dius> ]\n[ <Duomen\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]\n[ <Funkcija>, <x prad\u017eios vert\u0117>, <x galo vert\u0117> ]
Max.SyntaxCAS=[ <S\u0105ra\u0161as> ]\n[ <Skai\u010dius>, <Skai\u010dius> ]
Maximize=Maksimizuoti
Maximize.Syntax=[ <Priklausomas skai\u010dius>, <Nepriklausomas skai\u010dius> ]
Mean=Vidurkis
Mean.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
Mean.SyntaxCAS=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]
MeanX=VidurkisX
MeanX.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
MeanY=VidurkisY
MeanY.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
Median=Mediana
Median.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
Median.SyntaxCAS=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]
Midpoint=VidurioTa\u0161kas
Midpoint.Syntax=[ <Atkarpa> ]\n[ <Antros eil\u0117s kreiv\u0117> ]\n[ <Intervalas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas> ]
Min=Minimalus
Min.Syntax=[ <Intervalas> ]\n[ <S\u0105ra\u0161as> ]\n[ <Skai\u010dius>, <Skai\u010dius> ]\n[ <Duomen\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]\n[ <Funkcija>, <x prad\u017eios vert\u0117>, <x galo vert\u0117> ]
Min.SyntaxCAS=[ <S\u0105ra\u0161as> ]\n[ <Skai\u010dius>, <Skai\u010dius> ]
Minimize=Minimizuoti
Minimize.Syntax=[ <Priklausomas skai\u010dius>, <Nepriklausomas skai\u010dius> ]
MinimumSpanningTree=MinimalusPasiskirstymoMedis
MinimumSpanningTree.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
Mirror=Atspindys
Mirror.Syntax=[ <Objektas>, <Ta\u0161kas> ]\n[ <Objektas>, <Ties\u0117> ]\n[ <Ta\u0161kas>, <Apskritimas> ]
Mirror.Syntax3D=[ <Objektas>, <Ta\u0161kas> ]\n[ <Objektas>, <Ties\u0117> ]\n[ <Objektas>, <Plok\u0161tuma> ]\n[ <Objektas>, <Apskritimas> ]
MixedNumber=TinkamaTrupmena
MixedNumber.SyntaxCAS=[ <Skai\u010dius> ]
Mod=Liekana
Mod.Syntax=[ <Skaitiklis>, <Vardiklis> ]\n[ <Dalinamasis daugianaris>, <Dalinantis daugianaris> ]
Mode=Moda
Mode.Syntax=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]
NIntegral=NIntegralas
NIntegral.SyntaxCAS=[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117> ]\n[ <Funkcija>, <Kintamasis>, <Prad\u017eios vert\u0117>, <Galo vert\u0117> ]
NSolutions=NSprendiniai
NSolutions.SyntaxCAS=[ <Lygtis> ]\n[ <Lygtis>, <Kintamasis> ]\n[ <Lygtis>, <Kintamasis = pradin\u0117 vert\u0117> ]\n[ <Lyg\u010di\u0173 s\u0105ra\u0161as>, <Kintam\u0173j\u0173 s\u0105ra\u0161as> ]
NSolve=NSpr\u0119sti
NSolve.SyntaxCAS=[ <Lygtis> ]\n[ <Lygtis>, <Kintamasis> ]\n[ <Lygtis>, <Kintamasis = pradin\u0117 vert\u0117> ]\n[ <Lyg\u010di\u0173 sistema>, <Kintam\u0173j\u0173 s\u0105ra\u0161as> ]
NSolveODE=NSpr\u0119stiODE
NSolveODE.Syntax=[ <I\u0161vestini\u0173 s\u0105ra\u0161as>, <Prad\u017eios x ta\u0161kas>, <Prad\u017eios y ta\u0161kas>, <Galo x ta\u0161kas> ]
Name=Pavadinimas
Name.Syntax=[ <Objektas> ]
Net=Tinklas
Net.Syntax=[ <Daugiasienis>, <Skai\u010dius> ]\n[ <Daugiasienis>, <Skai\u010dius>, <Plok\u0161tuma>, <Kra\u0161tin\u0117>, <Kra\u0161tin\u0117>, ... ]
NextPrime=KitasPirminis
NextPrime.Syntax=[ <Skai\u010dius> ]
Normal=Normal\u0117
Normal.Syntax=[ <Vidurkis>, <Standartinis nuokrypis>, <Kintamojo vert\u0117> ]\n[ <Vidurkis>, <Standartinis nuokrypis>, <Kintamojo vert\u0117>, <Login\u0117 vert\u0117>  ]\n[ <Vidurkis>, <Standartinis nuokrypis>, x, <Login\u0117 vert\u0117> ]
Normal.SyntaxCAS=[ <Vidurkis>, <Standartinis nuokrypis>, <Kintamojo vert\u0117> ]
NormalQuantilePlot=NormalusKvantileGrafikas
NormalQuantilePlot.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]
Normalize=Normalizuoti
Numerator=Skaitiklis
Numerator.Syntax=[ <Funkcija> ]
Numerator.SyntaxCAS=[ <I\u0161rai\u0161ka> ]
Numeric=Skaitinis
Numeric.SyntaxCAS=[ <I\u0161rai\u0161ka> ]\n[ <I\u0161rai\u0161ka>, <reik\u0161miniai skai\u010diai> ]
Object=Objektas
Object.Syntax=[ <Objekto pavadinimas> ]
Octahedron.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Kryptis> ]
Ordinal=Sutvarkytas
Ordinal.Syntax=[ <Sveikas> ]
OrdinalRank=SutvarkytasRangas
OrdinalRank.Syntax=[ <S\u0105ra\u0161as> ]
OrthogonalLine=Statmuo
OrthogonalLine.Syntax=[ <Ta\u0161kas>, <Ties\u0117> ]\n[ <Ta\u0161kas>, <Daugiakampis> ]\n[ <Ta\u0161kas>, <Vektorius> ]
OrthogonalLine.Syntax3D=[ <Ta\u0161kas>, <Ties\u0117> ]\n[ <Ta\u0161kas>, <Atkarpa> ]\n[ <Ta\u0161kas>, <Vektorius> ]\n[ <Ta\u0161kas>, <Plok\u0161tuma> ]\n[ <Ties\u0117>, <Ties\u0117> ]\n[ <Ta\u0161kas>, <Ties\u0117>, <Ties\u0117> ]\n[ <Ta\u0161kas>, <Vektorius>, <Vektorius> ]\n[ <Ta\u0161kas>, <Ties\u0117>, <Kontekstas> ]
OrthogonalPlane=StatmenaPlok\u0161tuma
OrthogonalPlane.Syntax=[ <Ta\u0161kas>, <Ties\u0117> ]\n[ <Ta\u0161kas>, <Vektorius> ]
OrthogonalVector=StatmenasVektorius
OrthogonalVector.Syntax=[ <Ties\u0117> ]\n[ <Atkarpa> ]\n[ <Vektrius> ]
OrthogonalVector.Syntax3D=[ <Ties\u0117> ]\n[ <Atkarpa> ]\n[ <Vektorius> ]\n[ <Plok\u0161tuma> ]
OrthogonalVector.SyntaxCAS=[ <Vektrius> ]
OsculatingCircle=OscApskritimas
OsculatingCircle.Syntax=[ <Ta\u0161kas>, <Objekatas> ]
PMCC=PMCC
PMCC.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <x koordina\u010di\u0173 s\u0105ra\u0161as>, <y koordina\u010di\u0173 s\u0105ra\u0161as> ]
Pan.Syntax3D=[ <x>, <y>, <z> ]
Parabola=Parabol\u0117
Parabola.Syntax=[ <Ta\u0161kas>, <Ties\u0117> ]
Parameter=Parametras
Parameter.Syntax=[ <Parabol\u0117> ]
ParametricDerivative=Parametrin\u0117I\u0161vestin\u0117
ParametricDerivative.Syntax=[ <Kreiv\u0117> ]
ParseToFunction=Nagrin\u0117tiFunkcij\u0105
ParseToFunction.Syntax=[ <Funkcija>, <Eilut\u0117> ]
ParseToNumber=Nagrin\u0117tiSkai\u010di\u0173
ParseToNumber.Syntax=[ <Skai\u010dius>, <Eilut\u0117> ]
PartialFractions=Dalin\u0117sTrupmenos
PartialFractions.Syntax=[ <Funkcija> ]
PartialFractions.SyntaxCAS=[ <Funkcija> ]\n[ <Funkcija>, <Kintamasis> ]
Pascal.Syntax=[ <S\u0117kmi\u0173 skai\u010dius>, <S\u0117km\u0117s tikimyb\u0117> ]\n[ <S\u0117kmi\u0173 skai\u010dius>, <S\u0117km\u0117s tikimyb\u0117>, <Login\u0117 vert\u0117> ]\n[ <S\u0117kmi\u0173 skai\u010dius>, <S\u0117km\u0117s tikimyb\u0117>, <Kintamojo vert\u0117>, <Login\u0117 vert\u0117> ]
Pascal.SyntaxCAS=[ <S\u0117kmi\u0173 skai\u010dius>, <S\u0117km\u0117s tikimyb\u0117>, <Kintamojo vert\u0117>, <Login\u0117 vert\u0117> ]
PathParameter=KelioParametras
PathParameter.Syntax=[ <Ta\u0161kas kelyje> ]
Payment=Mokestis
Payment.Syntax=[ <Da\u017enis>, <Period\u0173 skai\u010dius>, <Dabartin\u0117 vert\u0117>, <Ateities vert\u0117 (neb\u016btinas)>, <Tipas (neb\u016btinas)> ]
Percentile=Procentilis
Percentile.Syntax=[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Procentai> ]
Perimeter=Perimetras
Perimeter.Syntax=[ <Daugiakampis> ]\n[ <Antros eil\u0117s kreiv\u0117> ]\n[ <Hodografas> ]
Periods=Periodai
Periods.Syntax=[ <Da\u017enis>, <Mok\u0117jimas>, <Dabartin\u0117 vert\u0117>, <Ateities vert\u0117 (neb\u016btinas)>, <Tipas (neb\u016btinas)> ]
Plane=Plok\u0161tuma
Plane.Syntax=[ <Daugiakampis> ]\n[ <K\u016bgis> ]\n[ <Ta\u0161kas>, <Plok\u0161tuma> ]\n[ <Ta\u0161kas>, <Ties\u0117> ]\n[ <Ties\u0117>, <Ties\u0117> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]
PlaneBisector=Plok\u0161tumosPusiaukampin\u0117
PlaneBisector.Syntax=[ <Atkarpa> ]\n[ <Ta\u0161kas>, <Ta\u0161kas> ]
PlaySound=GrotiGars\u0105
PlaySound.Syntax=[ <Dokumentas> ]\n[ <Funkcija>, <Minimali vert\u0117>, <Maksimali vert\u0117> ]\n[ <Funkcija>, <Minimali vert\u0117>, <Maksimali vert\u0117>, <Pavyzd\u017eio da\u017enis>, <Pavyzd\u017eio gylis> ]
Point=Ta\u0161kas
Point.Syntax=[ <Objektas> ]\n[ <S\u0105ra\u0161as> ]\n[ <Objektas>, <Parametras> ]\n[ <Ta\u0161kas>, <Vektorius> ]
PointIn=Ta\u0161kasViduje
PointIn.Syntax=[ <Regionas> ]
PointList=Ta\u0161k\u0173S\u0105ra\u0161as
PointList.Syntax=[ <S\u0105ra\u0161as> ]
Poisson.Syntax=[ <Vidurkis> ]\n[ <Vidurkis>, <Login\u0117 vert\u0117> ]\n[ <Vidurkis>, <Kintamojo vert\u0117>, <Login\u0117 vert\u0117> ]
Poisson.SyntaxCAS=[ <Vidurkis>, <Kintamojo vert\u0117>, <Login\u0117 vert\u0117> ]
Polar=Poliarin\u0117s
Polar.Syntax=[ <Ta\u0161kas>, <Antros eil\u0117s kreiv\u0117> ]\n[ <Ties\u0117>, <Antros eil\u0117s kreiv\u0117> ]
PolyLine=Polilinija
PolyLine.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <Ta\u0161kas>, ..., <Ta\u0161kas> ]
Polygon=Daugiakampis
Polygon.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <Ta\u0161kas>, ..., <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Kra\u0161tini\u0173 skai\u010dius> ]
Polygon.Syntax3D=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <Ta\u0161kas>, ..., <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Vir\u0161\u016bni\u0173 skai\u010dius> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Vir\u0161\u016bni\u0173 skai\u010dius>, <Kryptis> ]
Polynomial=Daugianaris
Polynomial.Syntax=[ <Funkcija> ]\n[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
Polynomial.SyntaxCAS=[ <Funkcija> ]\n[ <Funkcija>, <Kintamasis> ]
PresentValue=Pristatyti\u012evert\u012f
PresentValue.Syntax=[ <Da\u017enis>, <Period\u0173 skai\u010dius>, <Mok\u0117jimas>, <Ateities vert\u0117 (neb\u016btinas)>, <Tipas (neb\u016btinas)> ]
PreviousPrime=PraeitasPirminis
PreviousPrime.Syntax=[ <Skai\u010dius> ]
PrimeFactors=I\u0161skaidytiPirminiais
PrimeFactors.Syntax=[ <Skai\u010dius> ]
Prism=Prizm\u0117
Prism.Syntax=[ <Polygon>, <Ta\u0161kas> ]\n[ <Polygon>, <Height value> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, ... ]
Product=Sandauga
Product.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Element\u0173 kiekis> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
Product.SyntaxCAS=[ <I\u0161rai\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis>, <Pradinis kintamasis>, <Paskutinis kintamasis> ]
Prove=\u012erodyti
Prove.Syntax=[ <B\u016blio i\u0161rai\u0161ka> ]
ProveDetails=\u012erodymo\u017dingsniai
ProveDetails.Syntax=[ <B\u016blio operatorius> ]
Pyramid=Piramid\u0117
Pyramid.Syntax=[ <Daugiakampis>, <Ta\u0161kas> ]\n[ <Daugiakampis>, <Auk\u0161tis> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, ... ]
Q1=Q1
Q1.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
Q3=Q3
Q3.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
QuadricSide=Pus\u0117
QuadricSide.Syntax=[ <Kvadratin\u0117 lygtis> ]
RSquare=RKvadratas
RSquare.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Funkcija> ]
Radius=ApskritimoSpindulys
Radius.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
Random=AtsitiktinisTarp
Random.Syntax=[ <Ma\u017eiausias sveikas skai\u010dius>, <Did\u017eiausias sveikas skai\u010dius> ]\n[ <Ma\u017eiausias sveikas skai\u010dius>, <<Did\u017eiausias sveikas skai\u010dius>, <Fiksuotas B\u016blio operatorius> ]
Random.SyntaxCAS=[ <Ma\u017eiausias sveikas skai\u010dius>, <Did\u017eiausias sveikas skai\u010dius> ]
RandomBinomial=AtsitiktinisBinominis
RandomBinomial.Syntax=[ <Bandym\u0173 skai\u010dius>, <Tikimyb\u0117> ]
RandomDiscrete.Syntax=[ <S\u0105r\u0161as>, <S\u0105ra\u0161as> ]
RandomElement=AtsitiktinisElementas
RandomElement.Syntax=[ <S\u0105ra\u0161as> ]
RandomNormal=AtsitiktinisNormalus
RandomNormal.Syntax=[ <Reik\u0161m\u0117>, <Nuokrypis> ]
RandomPointIn=AtsitiktinisTa\u0161kasTarp
RandomPoisson=Atsitiktin\u0117Pozicija
RandomPoisson.Syntax=[ <Vidurkis> ]
RandomPolynomial=AtsitiktinisDaugianaris
RandomPolynomial.Syntax=[ <Laipsnis>, <Koeficient\u0173 minimumas>, <Koeficient\u0173 maksimumas> ]
RandomPolynomial.SyntaxCAS=[ <Laipsnis>, <Koeficient\u0173 minimumas>, <Koeficient\u0173 maksimumas> ]\n[ <Kintamasis>, <Laipsnis>, <Koeficient\u0173 minimumas>, <Koeficient\u0173 maksimumas> ]
RandomUniform=AtsitiktinisSuvienodinimas
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <Tast\u0173 kiekis> ]
Rate=Tempas
Rate.Syntax=[ <Period\u0173 skai\u010dius>, <\u012emoka>, <Dabartin\u0117 vert\u0117>, <Ateityje \u012fgyjama vert\u0117 (neb\u016btina)>, <Tipas (neb\u016btinas)>, <Sp\u0117jimas (neb\u016btinas)> ]
Rationalize=Racionalizuoti
Rationalize.SyntaxCAS=[ <Skai\u010dius> ]
Ray=Spindulys
Ray.Syntax=[ <Prad\u017eios ta\u0161kas>, <Ta\u0161kas> ]\n[ <Prad\u017eios ta\u0161kas>, <Krypties vektorius> ]
RectangleSum=Sta\u010diakamp\u0117Suma
RectangleSum.Syntax=[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117>, <Sta\u010diakampi\u0173 skai\u010dius>, <Sta\u010diakampio prad\u017eios pozicija> ]
ReducedRowEchelonForm=Suma\u017eintaEilut\u0117EchelonForma
ReducedRowEchelonForm.Syntax=[ <Matrica> ]
Relation=Santykis
Relation.Syntax=[ <Objektas>, <Objektas> ]
Remove=I\u0161trinti
Remove.Syntax=[ <S\u0105ra\u0161as>, <S\u0105ra\u0161as> ]
RemoveUndefined=I\u0161trintiNeapibr\u0117\u017etus
RemoveUndefined.Syntax=[ <S\u0105ra\u0161as> ]
Rename=KeistiPavadinim\u0105
Rename.Syntax=[ <Objektas>, <Pavadinimas> ]
ResidualPlot=Lik\u0119sGrafikas
ResidualPlot.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Funkcija> ]
Reverse=Atstatyti
Reverse.Syntax=[ <S\u0105ra\u0161as> ]
RightSide=De\u0161in\u0117Pus\u0117
RightSide.Syntax=[ <Lygtis> ]
RightSide.SyntaxCAS=[ <Lygtis> ]\n[ <Lyg\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Lyg\u010di\u0173 s\u0105ra\u0161as>, <Indeksas> ]
RigidPolygon=StandusDaugiakampis
RigidPolygon.Syntax=[ <Daugiakampis> ]\n[ <Daugiakampis>, <x nuokrypis>, <y nuokrypis> ]\n[ <Laisvas ta\u0161kas>, ..., <Laisvas ta\u0161kas> ]
Root=\u0160aknis
Root.Syntax=[ <Daugianaris> ]\n[ <Funkcija>, <Pradin\u0117 x reik\u0161m\u0117> ]\n[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117> ]
Root.SyntaxCAS=[ <Daugianaris> ]
RootList=\u0160akn\u0173S\u0105ra\u0161as
RootList.Syntax=[ <S\u0105ra\u0161as> ]
RootMeanSquare=KvadratinisVidurkis
RootMeanSquare.Syntax=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]
Roots=\u0160aknys
Roots.Syntax=[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117> ]
Rotate=Sukti
Rotate.Syntax=[ <Objektas>, <Kampas> ]\n[ <Objektas>, <Kampas>, <Ta\u0161kas> ]
Rotate.Syntax3D=[ <Objektas>, <Kampas> ]\n[ <Objektas>, <Kampas>, <Ta\u0161kas> ]\n[ <Objektas>, <Kampas>, <Pos\u016bkio a\u0161is> ]\n[ <Objektas>, <Kampas>, <Ta\u0161kas a\u0161yje>, <A\u0161ies kryptis ar plok\u0161tuma> ]
RotateText=SuktiTekst\u0105
RotateText.Syntax=[ <Tekstas>, <Kampas> ]
Row=Eilut\u0117
Row.Syntax=[ <Skai\u010diuokl\u0117s langelis> ]
RunClickScript=PaspaudimoScenarijus
RunClickScript.Syntax=[ <Objektas> ]
RunUpdateScript=AtnaujinimoScenarijus
RunUpdateScript.Syntax=[ <Objektas> ]
SD.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
SDX.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
SDY.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
SVD.Syntax=[ <Matrica> ]
SXX=SXX
SXX.Syntax=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
SXY.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Skai\u010di\u0173 s\u0105ra\u0161as> ]
SYY.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Skai\u010di\u0173 s\u0105ra\u0161as> ]
Sample=Imtis
Sample.Syntax=[ <S\u0105ra\u0161as>, <Dydis> ]\n[ <S\u0105ra\u0161as>, <Dydis>, <Su pakeitimu> ]
SampleSD=ImtisSD
SampleSD.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
SampleSD.SyntaxCAS=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]
SampleSDX=ImtisSDX
SampleSDX.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
SampleSDY=ImtisSDY
SampleSDY.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
SampleVariance=ImtiesDispersija
SampleVariance.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
SampleVariance.SyntaxCAS=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]
ScientificText=MokslinisTekstas
ScientificText.Syntax=[ <Skai\u010dius> ]\n[ <Skai\u010dius>, <Tikslumas> ]
SecondAxis=AntrojiA\u0161is
SecondAxis.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
SecondAxisLength=AntrosA\u0161iesIlgis
SecondAxisLength.Syntax=[ <Antros eil\u0117s kreiv\u0117> ]
Sector=I\u0161pjova
Sector.Syntax=[ <Antros eil\u0117s kreiv\u0117>, <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Antros eil\u0117s kreiv\u0117>, <Prametro reik\u0161m\u0117>, <Parametro reik\u0161m\u0117> ]
Segment=Atkarpa
Segment.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ilgis> ]
SelectObjects=PasirinktiObjektus
SelectObjects.Syntax=[ ]\n[ <Objektas>, <Objektas>, ... ]
SelectedElement=PasirinktasElementas
SelectedElement.Syntax=[ <S\u0105ra\u0161as> ]
SelectedIndex=Pasirinkim\u0173S\u0105ra\u0161as
SelectedIndex.Syntax=[ <S\u0105ra\u0161as> ]
Semicircle=Pusapskritimis
Semicircle.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas> ]
Sequence=Seka
Sequence.Syntax=[ <I\u0161rai\u0161ka>, <Kintamasis>, <Prad\u017eios vert\u0117>, <Galo vert\u0117> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis>, <Prad\u017eios vert\u0117>, <Galo vert\u0117>, <\u017dingsni\u0173 skai\u010dius> ]
SetActiveView=\u012ejugtiAktyv\u0173Vaizd\u0105
SetActiveView.Syntax=[ <Vaizdas> ]
SetAxesRatio=NustatytiA\u0161i\u0173Santyk\u012f
SetAxesRatio.Syntax=[ <Skai\u010dius>, <Skai\u010dius> ]
SetAxesRatio.Syntax3D=[ <Skai\u010dius>, <Skai\u010dius> ]\n[ <Skai\u010dius>, <Skai\u010dius>, <Skai\u010dius> ]
SetBackgroundColor=NustatytiFonoSpalv\u0105
SetBackgroundColor.Syntax=[ <Objektas>, "<Spalva>" ]\n[ <Objketas>, <Raudona>, <\u017dalia>, <M\u0117lyna> ]
SetCaption=NustatytiAntra\u0161t\u0119
SetCaption.Syntax=[ <Objektas>, <Tekstas> ]
SetColor=NustatytiSpalv\u0105
SetColor.Syntax=[ <Objektas>, "<Spalva>" ]\n[ <Objketas>, <Raudona>, <\u017dalia>, <M\u0117lyna> ]
SetConditionToShowObject=NustatytiObjektoRodymoS\u0105lyg\u0105
SetConditionToShowObject.Syntax=[ <Objektas>, <S\u0105lyga> ]
SetConstructionStep.Syntax=[ <Skai\u010dius> ]
SetCoords=NustatytiKoordinates
SetCoords.Syntax=[ <Objektas>, <x>, <y> ]
SetDynamicColor=NustatytiDinamin\u0119Spalv\u0105
SetDynamicColor.Syntax=[ <Objketas>, <Raudona>, <\u017dalia>, <M\u0117lyna> ]
SetFilling=NustatytiU\u017epild\u0105
SetFilling.Syntax=[ <Objektas>, <Skai\u010dius> ]
SetFixed=NustatytiFiksacij\u0105
SetFixed.Syntax=[ <Objektas>, <tiesa | melas> ]
SetLabelMode=NustatytiAntra\u0161t\u0117sTip\u0105
SetLabelMode.Syntax=[ <Objektas>, <Skai\u010dius> ]
SetLayer=NustatytiSluoksn\u012f
SetLayer.Syntax=[ <Objektas>, <Sluoksnis> ]
SetLineStyle=NustatytiTies\u0117sStili\u0173
SetLineStyle.Syntax=[ <Ties\u0117>, <Skai\u010dius> ]
SetLineThickness=NustatytiTies\u0117sStor\u012f
SetLineThickness.Syntax=[ <Ties\u0117>, <Skai\u010dius> ]
SetPerspective=NustatyitPerspektyv\u0105
SetPerspective.Syntax=[ <Tekstas> ]
SetPointSize=NustatytiTa\u0161koDyd\u012f
SetPointSize.Syntax=[ <Objektas>, <Skai\u010dius> ]
SetPointStyle=NustatytiTa\u0161koStili\u0173
SetPointStyle.Syntax=[ <Ta\u0161kas>, <Skai\u010dius> ]
SetSeed=NustatytiPrad\u017ei\u0105
SetSeed.Syntax=[ <Sveikas skai\u010dius> ]
SetSpinSpeed=NustatytiSukimoGreit\u012f
SetSpinSpeed.Syntax=[ <Skai\u010dius> ]
SetTooltipMode=NustatytiEtiket\u0117sTip\u0105
SetTooltipMode.Syntax=[ <Objektas>, <Skai\u010dius> ]
SetTrace=NustatytiP\u0117dsak\u0105
SetTrace.Syntax=[ <Objektas>, <tiesa | melas> ]
SetValue=NustatytiVert\u0119
SetValue.Syntax=[ <Login\u0117 vert\u0117>, <0|1> ]\n[ <Objektas>, <Objektas> ]\n[ <S\u0105ra\u0161as>, <Skai\u010dius>, <Objektas> ]
SetViewDirection=NustatytiVaizdoKrypt\u012f
SetViewDirection.Syntax=[ <Kryptis> ]
SetVisibleInView=NustatytiMatom\u0105Lauk\u0105
SetVisibleInView.Syntax=[ <Objektas>, <Vaizd\u0173 skai\u010dius 1|2>, <Login\u0117 vert\u0117> ]
Shear=Dalintis
Shear.Syntax=[ <Objektas>, <Ties\u0117>, <Santykis> ]
ShortestDistance=TrumpiausiasAtstumas
ShortestDistance.Syntax=[ <Atkarp\u0173 s\u0105ra\u0161as>, <Prad\u017eios ta\u0161kas>, <Galo ta\u0161kas>, <Login\u0117 vert\u0117 - svoris> ]
ShowAxes=RodytiA\u0161is
ShowAxes.Syntax=[ ]\n[ <Login\u0117 vert\u0117> ]\n[ <Vaizdas>, <Login\u0117 vert\u0117> ]
ShowGrid=RodytiTinklel\u012f
ShowGrid.Syntax=[ ]\n[ <Login\u0117 vert\u0117> ]\n[ <Vaizdas>, <Login\u0117 vert\u0117> ]
ShowLabel=RodytiAntra\u0161t\u0119
ShowLabel.Syntax=[ <Objektas>, <Login\u0117 vert\u0117> ]
ShowLayer=RodytiSluoksn\u012f
ShowLayer.Syntax=[ <Skai\u010dius> ]
Shuffle=Sumai\u0161yti
Shuffle.Syntax=[ <S\u0105ra\u0161as> ]
SigmaXX.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
SigmaXY.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <x koordina\u010di\u0173 s\u0105ra\u0161as>, <y koordina\u010di\u0173 s\u0105ra\u0161as> ]
SigmaYY.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
Simplify=Suprastinti
Simplify.Syntax=[ <Funkcija> ]\n[ <Tekstas> ]
Simplify.SyntaxCAS=[ <Funkcija> ]
Slider=Slankjuost\u0117
Slider.Syntax=[ <Min>, <Max>, <Prieaugis>, <Greitis>, <Plotis>, <Yra kampas>, <Horizontalus>, <Animuotas>, <Atsitiktinis> ]
Slope=Posvyris
Slope.Syntax=[ <Ties\u0117> ]
SlopeField=Posvyri\u0173Laukas
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Skai\u010dius n> ]\n[ <f(x, y)>, <Skai\u010dius n>, <Daugiklis a> ]\n[ <f(x, y)>, <Skai\u010dius n>, <Daugiklis a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=L\u0117tasGrafikas
SlowPlot.Syntax=[ <Funkcija> ]
Solutions=Sprendiniai
Solutions.SyntaxCAS=[ <Lygtis> ]\n[ <Lygtis>, <Kintamasis> ]\n[ <Lyg\u010di\u0173 sara\u0161as>, <Kintam\u0173j\u0173 s\u0105ra\u0161as> ]
Solve=Spr\u0119sti
Solve.SyntaxCAS=[ <Lygtis priklausanti nuo x> ]\n[ <Lygtis>, <Kintamasis> ]\n[ <Lyg\u010di\u0173 s\u0105ra\u0161as>, <Kintam\u0173j\u0173 s\u0105ra\u0161as> ]
SolveCubic=I\u0161spr\u0119stiKubin\u0119Lygt\u012f
SolveCubic.SyntaxCAS=[ <Tre\u010dio laipsnio daugianaris> ]
SolveODE=Spr\u0119stiODE
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Ta\u0161kas priklausantis f> ]\n[ <f'(x, y)>, <x prad\u017eia>, <y prad\u017eia>, <x pabaiga>, <\u017dingsnis> ]\n[ <y'>, <x'>, <x prad\u017eia>, <y prad\u017eia>, <t pabaiga>, <\u017dingsnis> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x prad\u017eia>, <y prad\u017eia>, <y' prad\u017eia>, <x pabaiga>, <\u017dingsnis> ]
SolveODE.SyntaxCAS=[ <Lygtis> ]\n[ <Lygtis>, <Priklausomas kintamasis>, <Nepriklausomas kintamasis> ]
SolveQuartic.SyntaxCAS=[ <Antro laipsnio daugianaris> ]
Sort=R\u016b\u0161iuoti
Sort.Syntax=[ <S\u0105ra\u0161as> ]\n[ <Vert\u0117s>, <Raktai> ]
Spearman=Spirmano
Spearman.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Skai\u010di\u0173 s\u0105ra\u0161as> ]
Sphere=Sfera
Sphere.Syntax=[ <Ta\u0161kas>, <Spindulys> ]\n[ <Ta\u0161kas>, <Ta\u0161kas> ]
Spline=Spties\u0117
Spline.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Laipsnis \u2265 3> ]
StartAnimation=Prad\u0117tiAnimacij\u0105
StartAnimation.Syntax=[ ]\n[ <Login\u0117 vert\u0117> ]\n[ <Slankjuost\u0117 arba skai\u010dius>, <Slankjuost\u0117 arba skai\u010dius>, ... ]\n[ <Slankjuost\u0117 arba skai\u010dius>, <Slankjuost\u0117 arba skai\u010dius>, ..., <Login\u0117 vert\u0117> ]
StartLogging=Prad\u0117tiRegistravim\u0105
StartLogging.Syntax=[ "<Sensorius>", <Kintamasis>, "<Sensorius>", <Kintamasis>, ... ]
StartRecord=Prad\u0117ti\u012era\u0161ym\u0105
StemPlot=KamienoGrafikas
StemPlot.Syntax=[ <S\u0105ra\u0161as> ]\n[ <S\u0105ra\u0161as>, <Parinkimas -1|0|1> ]
StepGraph=\u017dingsnioGrafikas
StepGraph.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar Sujungti> ]\n[ <x koordina\u010di\u0173 s\u0105ra\u0161as>, <y koordina\u010di\u0173 s\u0105ra\u0161as> ]\n[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar Sujungti>, <Ta\u0161ko stilius> ]\n[ <x koordina\u010di\u0173 s\u0105ra\u0161as>, <y koordina\u010di\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar Sujungti> ]\n[ <x koordina\u010di\u0173 s\u0105ra\u0161as>, <y koordina\u010di\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar Sujungti>, <Ta\u0161ko stilius> ]
StickGraph=PrilipdytiGrafik\u0105
StickGraph.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]\n[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar Horizontalu> ]\n[ <x koordina\u010di\u0173 s\u0105ra\u0161as>, <y koordina\u010di\u0173 s\u0105ra\u0161as> ]\n[ <x koordina\u010di\u0173 s\u0105ra\u0161as>, <y koordina\u010di\u0173 s\u0105ra\u0161as>, <Login\u0117 vert\u0117 ar Horizontalu> ]
StopLogging=StabdytiRegistravim\u0105
StopLogging.Syntax=[ ]
Stretch=I\u0161tempti
Stretch.Syntax=[ <Objektas>, <Vektorius> ]\n[ <Objektas>, <Ties\u0117>, <Santykis> ]
Substitute=Pakeisti
Substitute.SyntaxCAS=[ <I\u0161rai\u0161ka>, <nuo>, <iki> ]
Sum=Suma
Sum.Syntax=[ <S\u0105ra\u0161as> ]\n[ <S\u0105ra\u0161as>, <Element\u0173 skai\u010dius> ]\n[ <S\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
Sum.SyntaxCAS=[ <S\u0105ra\u0161as> ]\n[ <I\u0161rai\u0161ka>, <Kintamasis>, <Prad\u017eios vert\u0117>, <Galo vert\u0117> ]
SumSquaredErrors=SumosKvadratuKlaidos
SumSquaredErrors.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as>, <Funkcija> ]
SurdText=IracionalausSkai\u010diausTekstas
SurdText.Syntax=[ <Skai\u010dius> ]\n[ <Ta\u0161kas> ]
Surface=Pavir\u0161ius
Surface.Syntax=[ <I\u0161rai\u0161ka>, <I\u0161rai\u0161ka>, <I\u0161rai\u0161ka>, <Parametro kintamasis 1>, <Prad\u017eios vert\u0117>, <Galo vert\u0117>, <Parametro kintamasis 2>, <Prad\u017eios vert\u0117>, <Galo vert\u0117> ]
TDistribution=TPasiskirstymas
TDistribution.Syntax=[ <Laisv\u0117s laipsnis>, <Kintamojo vert\u0117> ]\n[ <Laisv\u0117s laipsnis>, x, <Login\u0117 vert\u0117> ]
TDistribution.SyntaxCAS=[ <Laisv\u0117s laipsnis>, <Kintamojo vert\u0117> ]
TMean2Estimate=TVidurkioVertinimas
TMean2Estimate.Syntax=[ <Pavyzdini\u0173 duomen\u0173 s\u0105ra\u0161as 1>, <Pavyzdini\u0173 duomen\u0173 s\u0105ra\u0161as 2>, <Lygis>, <Login\u0117 vert\u0117 - Sukaupiamasis> ]\n[ <Pavyzd\u017eio vidurkis 1>, <Pavyzd\u017eio standartinis nuokrypis 1>, <Pavyzd\u017eio dydis 1>, <Pavyzd\u017eio vidurkis 2>, <Pavyzd\u017eio standartinis nuokrypis 2>, <Pavyzd\u017eio dydis 2>, <Lygis>, <Login\u0117 vert\u0117 - Sukaupiamasis> ]
TMeanEstimate=TVidrukio\u012evertinimas
TMeanEstimate.Syntax=[ <Pavyzdini\u0173 duomen\u0173 s\u0105ra\u0161as>, <Lygis> ]\n[ <Pavyzd\u017eio vidurkis>, <Pavyzd\u017eio standartinis nuokrypis>, <Pavyzd\u017eio dydis>, <Lygis> ]
TTest=TTestas
TTest.Syntax=[ <Pavyzdini\u0173 duomen\u0173 s\u0105ra\u0161as>, <Prognozuotas vidurkis>, <Uodega> ]\n[ <Pavyzd\u017eio vidurkis>, <Pavyzd\u017eio standartinis nuokrypis>, <Pavyzd\u017eio dydis>, <Prognozuotas vidurkis>, <Uodega> ]
TTest2=TTestas2
TTest2.Syntax=[ <Pavyzdini\u0173 duomen\u0173 s\u0105ra\u0161as 1>, <Pavyzdini\u0173 duomen\u0173 s\u0105ra\u0161as 2>, <Uodega>, <Sukaupiamasis Bulio> ]\n[ <Pavyzd\u017eio vidurkis 1>, <Pavyzd\u017eio standartinis nuokrypis 1>, <Pavyzd\u017eio dydis 1>, <Pavyzd\u017eio vidurkis 2>, <Pavyzd\u017eio standartinis nuokrypis 2>, <Pavyzd\u017eio dydis 2>, <Uodega>, <Sukaupiamasis Bulio> ]
TTestPaired=TTestasSuporuotas
TTestPaired.Syntax=[ <Pavyzdini\u0173 duomen\u0173 s\u0105ra\u0161as 1>, <Pavyzdini\u0173 duomen\u0173 s\u0105ra\u0161as 2>, <Uodega> ]
TableText=Lentel\u0117sTekstas
TableText.Syntax=[ <S\u0105ra\u0161as>, <S\u0105ra\u0161as>, ... ]\n[ <S\u0105ra\u0161as>, <S\u0105ra\u0161as>, ..., <Teksto lygiuot\u0117> ]
Take=Paimti
Take.Syntax=[ <S\u0105ra\u0161as>, <Prad\u017eios pozicija> ]\n[ <Tekstas>, <Prad\u017eios pozicija> ]\n[ <S\u0105ra\u0161as>, <Prad\u017eios pozicija>, <Galo pozicija> ]\n[ <Tekstas>, <Prad\u017eios pozicija>, <Galo pozicija> ]
Take.SyntaxCAS=[ <S\u0105ra\u0161as>, <Prad\u017eios pozicija>, <Galo pozicija> ]
Tangent=Liestin\u0117
Tangent.Syntax=[ <Ta\u0161kas>, <Antros eil\u0117s kreiv\u0117> ]\n[ <Ta\u0161kas>, <Funkcija> ]\n[ <Kreiv\u0117s Ta\u0161kas>, <Kreiv\u0117> ]\n[ <x reik\u0161m\u0117>, <Funkcija> ]\n[ <Ties\u0117>, <Antros eil\u0117s kreiv\u0117> ]\n[ <Apskritimas>, <Apskritimas> ]
TaylorSeries=TayloroDaugianaris
TaylorSeries.Syntax=[ <Funkcija>, <x vert\u0117>, <Sekos skai\u010dius> ]
TaylorSeries.SyntaxCAS=[ <Funkcija>, <x vert\u0117>, <Sekos skai\u010dius> ]\n[ <Funkcija>, <Kintamasis>, <Kintamojo vert\u0117>, <Tvarkos skai\u010dius> ]
Tetrahedron.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas> ]\n[ <Ta\u0161kas>, <Ta\u0161kas>, <Kryptis> ]
Text=Tekstas
Text.Syntax=[ <Objektas> ]\n[ <Objektas>, <Login\u0117 keitimo kintam\u0173j\u0173 reik\u0161m\u0117> ]\n[ <Objektas>, <Ta\u0161kas> ]\n[ <Objektas>, <Ta\u0161kas>, <Login\u0117 keitimo kintam\u0173j\u0173 reik\u0161m\u0117> ]
TextToUnicode=TekstasUnikode
TextToUnicode.Syntax=[ <Tekstas> ]
Textfield=TekstoLaukas
Textfield.Syntax=[ ]\n[ <Priskirtas objektas> ]
TiedRank=SusietasRangas
TiedRank.Syntax=[ <S\u0105ra\u0161as> ]
ToBase=LinkBaz\u0117s
ToBase.Syntax=[ <Skai\u010dius>, <Baz\u0117> ]
ToComplex=Konvertuoti\u012eKompleksin\u012f
ToComplex.Syntax=[ <Vektorius> ]
ToExponential=Konvertuoti\u012eEksponentin\u012f
ToExponential.SyntaxCAS=[ <Kompeksinis skai\u010dius> ]
ToPoint=Konvertuoti\u012eTa\u0161k\u0105
ToPoint.Syntax=[ <Kompeksinis skai\u010dius> ]
ToPolar=Konvertuoti\u012ePolinesKoordinates
ToPolar.Syntax=[ <Kompleksinis skai\u010dius> ]\n[ <Vektorius> ]
ToolImage=\u012eranki\u0173Vaizdas
ToolImage.Syntax=[ <Skai\u010dius> ]
Top=Vir\u0161us
Top.Syntax=[ <Kvadratin\u0117 lygtis> ]
Translate=Versti
Translate.Syntax=[ <Objektas>, <Vektorius> ]\n[ <Vektorius>, <Prad\u017eios ta\u0161kas> ]
Transpose=Transponuoti
Transpose.Syntax=[ <Matrica> ]
TrapezoidalSum=Trapezoidin\u0117Suma
TrapezoidalSum.Syntax=[ <Funkcija>, <Prad\u017eios x vert\u0117>, <Galo x vert\u0117>, <Trapezoid\u0173 skai\u010dius> ]
TravelingSalesman=KeliaujantisPirklys
TravelingSalesman.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
TriangleCenter=TrikampioCentras
TriangleCenter.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas>, <Skai\u010dius> ]
TriangleCurve=TrikampioKreiv\u0117
TriangleCurve.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas>, <Lygtis> ]
Triangular=Trianguliacija
Triangular.Syntax=[ <Apatin\u0117 riba>, <Vir\u0161utin\u0117 riba>, <Re\u017eimas>, <Kintamojo vert\u0117> ]\n[ <Apatin\u0117 riba>, <Vir\u0161utin\u0117 riba>, <Re\u017eimas>, x, <Login\u0117 vert\u0117> ]
TrigCombine=Trigonometrin\u0117Kombinacija
TrigCombine.Syntax=[ <I\u0161rai\u0161ka> ]\n[ <I\u0161rai\u0161ka>, <Tikslin\u0117 funkcija> ]
TrigExpand=TrigPrapl\u0117sti
TrigExpand.Syntax=[ <I\u0161rai\u0161ka> ]\n[ <I\u0161rai\u0161ka>, <Tikslo funkcija> ]
TrigExpand.SyntaxCAS=[ <I\u0161rai\u0161ka> ]\n[ <I\u0161rai\u0161ka>, <Tikslin\u0117 funkcija> ]\n[ <I\u0161rai\u0161ka>, <Tikslin\u0117 funkcija>, <Tikslinis kintamasis> ]\n[ <I\u0161rai\u0161ka>, <Tikslin\u0117 funkcija>, <Tikslinis kintamasis>, <Tikslinis kintamasis> ]
TrigSimplify=TrigSuprastinti
TrigSimplify.Syntax=[ <I\u0161rai\u0161ka> ]
Trilinear=Trilinijinis
Trilinear.Syntax=[ <Ta\u0161kas>, <Ta\u0161kas>, <Ta\u0161kas>, <Skai\u010dius>, <Skai\u010dius>, <Skai\u010dius> ]
TurningPoint=LinkioTa\u0161kas
TurningPoint.Syntax=[ <Daugianaris> ]
Turtle=V\u0117\u017eliukas
Turtle.Syntax=[ ]
TurtleBack=V\u0117\u017eliukasAtgal
TurtleBack.Syntax=[ <V\u0117\u017eliukas>, <Atstumas> ]
TurtleDown=V\u0117\u017eliukas\u017demyn
TurtleDown.Syntax=[ <V\u0117\u017eliukas> ]
TurtleForward=V\u0117\u017eliukasPriekin
TurtleForward.Syntax=[ <V\u0117\u017eliukas>, <Atstumas> ]
TurtleLeft=V\u0117\u017eliukasKair\u0117n
TurtleLeft.Syntax=[ <V\u0117\u017eliukas>, <Kampas> ]
TurtleRight=V\u0117\u017eliukasDe\u0161in\u0117n
TurtleRight.Syntax=[ <V\u0117\u017eliukas>, <Kampas> ]
TurtleUp=V\u0117\u017eliukasAuk\u0161tyn
TurtleUp.Syntax=[ <V\u0117\u017eliukas> ]
UnicodeToLetter=UnikodoRaid\u0117
UnicodeToLetter.Syntax=[ <Sveikas skai\u010dius> ]
UnicodeToText=UnikodoTekstas
UnicodeToText.Syntax=[ <Sveik\u0173 skai\u010di\u0173 s\u0105ra\u0161as> ]
Uniform=Vienodas
Uniform.Syntax=[ <Apatin\u0117 riba>, <Vir\u0161utin\u0117 riba>, <Kintamojo vert\u0117> ]\n[ <Apatin\u0117 riba>, <Vir\u0161utin\u0117 riba>, x, <Login\u0117 vert\u0117> ]
Union=S\u0105junga
Union.Syntax=[ <S\u0105ra\u0161as>, <S\u0105ra\u0161as> ]\n[ <Daugiakampis>, <Daugiakampis> ]
Unique=Unikalus
Unique.Syntax=[ <S\u0105ra\u0161as> ]
UnitOrthogonalVector=VienetinisStatmenasVektorius
UnitOrthogonalVector.Syntax=[ <Ties\u0117> ]\n[ <Atkarpa> ]\n[ <Vektorius> ]
UnitOrthogonalVector.Syntax3D=[ <Ties\u0117> ]\n[ <Atkarpa> ]\n[ <Vektorius> ]\n[ <Plok\u0161tuma> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vektorius> ]
UnitVector=VienetinisVektorius
UnitVector.Syntax=[ <Objektas> ]
UnitVector.SyntaxCAS=[ <Vektorius> ]
UpdateConstruction=AtnaujintiKonstrukcij\u0105
UpdateConstruction.Syntax=[ ]\n[ <Kartai> ]
UpperSum=Vir\u0161utin\u0117Suma
UpperSum.Syntax=[ <Funkcija>, <Prad\u017eios x reik\u0161m\u0117>, <Galo x reik\u0161m\u0117>, <Sta\u010diakampi\u0173 skai\u010dius> ]
Variance=Nuokrypis
Variance.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
Variance.SyntaxCAS=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]
Vector=Vektorius
Vector.Syntax=[ <Ta\u0161kas> ]\n[ <Prad\u017eios ta\u0161kas>, <Galo ta\u0161kas> ]
Vertex=KampoVir\u0161\u016bn\u0117
Vertex.Syntax=[ <K\u016bgis> ]\n[ <Nelygyb\u0117> ]\n[ <Daugiakampis> ]\n[ <Daugiakampis>, <Indeksas> ]
VerticalText=VertikalusTekstas
VerticalText.Syntax=[ <Tekstas> ]\n[ <Tekstas>, <Ta\u0161kas> ]
Volume=T\u016bris
Volume.Syntax=[ <K\u016bnas> ]
Voronoi.Syntax=[ <Ta\u0161k\u0173 s\u0105ra\u0161as> ]
Weibull=Veibul
Weibull.Syntax=[ <Shape>, <Skal\u0117>, <Kintamojo vert\u0117> ]\n[ <Shape>, <Skal\u0117>, x, <Login\u0117 vert\u0117> ]
Weibull.SyntaxCAS=[ <Fig\u016bra>, <Skal\u0117>, <Kintamojo vert\u0117> ]
ZMean2Estimate=ZVidurkis2\u012evertis
ZMean2Estimate.Syntax=[ <Duomen\u0173 s\u0105ra\u0161as nr.1>, <Duomen\u0173 s\u0105ra\u0161as nr.2>, <\u03c31>, <\u03c32>, <Lygis> ]\n[ <Vidrukis nr.1>, <\u03c31>, <Duomen\u0173 dydis nr.1>, <Vidrukis nr.2>, <\u03c32>, <SDuomen\u0173 dydis nr.2>, <Lygis> ]
ZMean2Test=ZVidkurkis2Testas
ZMean2Test.Syntax=[ <Duomen\u0173 s\u0105ra\u0161as nr.1>, <Duomen\u0173 s\u0105ra\u0161as nr.2>, <\u03c31>, <\u03c32>, <Liekana> ]\n[ <Vidrukis nr.1>, <\u03c31>, <Duomen\u0173 dydis nr.1>, <Vidrukis nr.2>, <\u03c32>, <SDuomen\u0173 dydis nr.2>, <Liekana> ]
ZMeanEstimate=ZVidurkio\u012evertis
ZMeanEstimate.Syntax=[ <Duomen\u0173 s\u0105ra\u0161as>, <\u03c3>, <Lygis> ]\n[ <Vidurkis>, <\u03c3>, <Duomen\u0173 kiekis>, <Lygis> ]
ZMeanTest=ZVidurkioTestas
ZMeanTest.Syntax=[ <Duomen\u0173 s\u0105ra\u0161as>, <\u03c3>, <Tikimasis vidurkis>, <Liekana> ]\n[ <Vidurkis>, <\u03c3>, <Duomen\u0173 kiekis>, <Tikimasis vidurkis>, <Liekana> ]
ZProportion2Estimate=ZProporcija2\u012evertis
ZProportion2Estimate.Syntax=[ <Duomen\u0173 dalis nr.1>, <Duomen\u0173 kiekis nr.1>, <Duomen\u0173 dalis nr.2>, <Duomen\u0173 kiekis nr.2>, <Lygis> ]
ZProportion2Test=ZProporcija2Testas
ZProportion2Test.Syntax=[ <Duomen\u0173 dalis nr.1>, <Duomen\u0173 kiekis nr.1>, <Duomen\u0173 dalis nr.2>, <Duomen\u0173 kiekis nr.2>, <Liekana> ]
ZProportionEstimate=ZProporcijos\u012evertis
ZProportionEstimate.Syntax=[ <Duomen\u0173 dalis>, <Duomen\u0173 kiekis>, <Lygis> ]
ZProportionTest=ZProporcijosTestas
ZProportionTest.Syntax=[ <Duomen\u0173 dalis>, <Duomen\u0173 kiekis>, <Tikimasi dalis>, <Liekana> ]
Zip.Syntax=[ <I\u0161rai\u0161ka>, <Kint1>, <S\u0105r1>, <Kint2>, <S\u0105r2>, ... ]
Zipf.Syntax=[ <Element\u0173 skai\u010dius>, <Eksponentinis> ]\n[ <Element\u0173 skai\u010dius>, <Eksponentinis>, <Login\u0117 vert\u0117> ]\n[ <Element\u0173 skai\u010dius>, <Eksponentinis>, <Kintamojo vert\u0117>, <Login\u0117 vert\u0117> ]
Zipf.SyntaxCAS=[ <Element\u0173 skai\u010dius>, <Eksponentinis>, <Kintamojo vert\u0117>, <Login\u0117 vert\u0117> ]
ZoomIn=Priartinti
ZoomIn.Syntax=[ <Skal\u0117s faktorius> ]\n[ <Skal\u0117s faktorius>, <Centro ta\u0161kas> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]
ZoomOut=Tolinti
ZoomOut.Syntax=[ <Skal\u0117s faktorius> ]\n[ <Skal\u0117s faktorius>, <Centro ta\u0161kas> ]
mean.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
mean.SyntaxCAS=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]
nCr.Syntax=[ <Skai\u010dius>, <Skai\u010dius> ]
stdev.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
stdevp.Syntax=[ <Neapdorot\u0173 duomen\u0173 s\u0105ra\u0161as> ]\n[ <Skai\u010di\u0173 s\u0105ra\u0161as>, <Da\u017eni\u0173 s\u0105ra\u0161as> ]
stdevp.SyntaxCAS=[ <Skai\u010di\u0173 s\u0105ra\u0161as> ]