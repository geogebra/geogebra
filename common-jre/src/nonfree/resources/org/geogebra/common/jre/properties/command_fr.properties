# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA=AnalyseVariance
ANOVA.Syntax=[ <Liste>, <Liste>, ... ]
AffineRatio=RapportColinéarité
Angle.Syntax=[ <Objet> ]\n[ <Vecteur>, <Vecteur> ]\n[ <Droite>, <Droite> ]\n[ <Point>, <Sommet>, <Point> ]\n[ <Point>, <Sommet>, <Angle> ]
Angle.Syntax3D=[ <Objet> ]\n[ <Vecteur>, <Vecteur> ]\n[ <Ligne>, <Ligne> ]\n[ <Ligne>, <Plan> ]\n[ <Plan>, <Plan> ]\n[ <Point>, <Sommet>, <Point> ]\n[ <Point>, <Sommet>, <Angle> ]\n[ <Point>, <Point>, <Point>, <Direction> ]
AngularBisector=Bissectrice
AngularBisector.Syntax=[ <Droite>, <Droite> ]\n[ <Point>, <Point>, <Point> ]
Append=Ajouter
Append.Syntax=[ <Liste>, <Objet> ]\n[ <Objet>, <Liste> ]
ApplyMatrix=AppliquerMatrice
ApplyMatrix.Syntax=[ <Matrice>, <Objet> ]
Arc.Syntax=[ <Cercle>, <Point>, <Point> ]\n[ <Ellipse>, <Point>, <Point> ]\n[ <Cercle>, <Valeur Paramètre>, <Valeur Paramètre> ]\n[ <Ellipse>, <Valeur Paramètre>, <Valeur Paramètre> ]
AreCollinear=SontAlignés
AreConcurrent=SontConcourantes
AreConcurrent.Syntax=[ <Ligne>, <Ligne>, <Ligne> ]
AreConcyclic=SontCocycliques
AreCongruent=SontIsométriques
AreCongruent.Syntax=[ <Objet>, <Objet> ]
AreEqual=SontÉgaux
AreEqual.Syntax=[ <Objet>, <Objet> ]
AreParallel=SontParallèles
AreParallel.Syntax=[ <Ligne>, <Ligne> ]
ArePerpendicular=SontPerpendiculaires
ArePerpendicular.Syntax=[ <Ligne>, <Ligne> ]
Area=Aire
Area.Syntax=[ <Conique> ]\n[ <Polygone> ]\n[ <Point>, ..., <Point> ]
Assume=Sachant
Asymptote.Syntax=[ <Conique> ]\n[ <Fonction> ]\n[ <Courbe implicite> ]
AttachCopyToView=AttacherCopieAVue
AttachCopyToView.Syntax=[ <Objet>, <Vue 0|1|2> ]\n[ <Objet>, <Vue 0|1|2>, <Point 1>, <Point 2>, <Écran Point 1>, <Écran Point 2> ]
Axes.Syntax=[ <Conique> ]
Axes.Syntax3D=[ <Conique> ]\n[ <Quadrique> ]
AxisStepX=PasAxeX
AxisStepY=PasAxeY
BarChart=Barres
BarChart.Syntax=[ <Liste Données>, <Liste Effectifs> ]\n[ <Série brute>, <Largeur Barres>, <Echelle (optionnelle)> ]\n[ <Liste Données>, <Liste Effectifs>, <Largeur Barres> ]\n[ <Valeur Début>, <Valeur Fin>, <Liste Hauteurs> ]\n[ <Valeur Début>, <Valeur Fin>, <Expression>, <Variable>, <de>, <à> ]\n[ <Valeur Début>, <Valeur Fin>, <Expression>, <Variable>, <de>, <à>, <pas> ]
BarCode=CodeBarre
BarCode.Syntax=[ ]\n[ <Image> ]\n[ <Texte ou Nombre>, "<Format (optionnel)>", "<Correction Erreur(optionnel)>", <Largeur (optionnel)>, <Hauteur (optionnel)> ]
Barycenter=Barycentre
Barycenter.Syntax=[ <Liste Points>, <Liste Masses> ]
Bernoulli.Syntax=[ <Probabilité>, <Booléen Cumul> ]
Binomial=Combinaison
Binomial.Syntax=[ <Nombre n>, <Nombre p> ]
BinomialDist=Binomiale
BinomialDist.Syntax=[ <Nombre d'essais>, <Probabilité du Succès> ]\n[ <Nombre d'essais>, <Probabilité du Succès>, <Booléen Cumul> ]\n[ <Nombre d'essais>, <Probabilité du Succès>, <Nombre Succès>, <Booléen Cumul> ]
BinomialDist.SyntaxCAS=[ <Nombre d'essais>, <Probabilité du Succès>, <Nombre Succès>, <Booléen Cumul> ]
Bottom=EnBas
Bottom.Syntax=[ <Quadrique> ]
BoxPlot=BoiteMoustaches
BoxPlot.Syntax=[ <Ordonnée>, <Demi hauteur>, <Série brute> ]\n[ <Ordonnée>, <Demi hauteur>, <Série brute>, <Booléen Aberrantes> ]\n[ <Ordonnée>, <Demi hauteur>, <Liste des valeurs>, <Liste des effectifs>, <Booléen Aberrantes> ]\n[ <Ordonnée>, <Demi hauteur>, <Valeur Départ>, <Q1>, <Médiane>, <Q3>, <Valeur Finale> ]
Button=Bouton
Button.Syntax=[ ]\n[ <Légende> ]
CFactor=CFactorisation
CIFactor=FactoriseCI
CSolutions.SyntaxCAS=[ <Équation> ]\n[ <Équation>, <Variable> ]\n[ <Liste Équations>, <Liste Variables> ]
CSolve=CRésoudre
CSolve.SyntaxCAS=[ <Équation> ]\n[ <Équation>, <Variable> ]\n[ <Liste Équations>, <Liste Variables> ]
Cauchy.Syntax=[ <Médiane>, <Échelle>, <Valeur Variable> ]\n[ <Médiane>, <Échelle>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Médiane>, <Échelle>, x, <Booléen Cumul> ]
Cauchy.SyntaxCAS=[ <Médiane>, <Échelle>, <Valeur Variable> ]
Cell=Cellule
Cell.Syntax=[ <Colonne>, <Ligne> ]
CellRange=Plage
CellRange.Syntax=[ <Cellule Début>, <Cellule Fin> ]
Center=Centre
Center.Syntax=[ <Conique> ]
Center.Syntax3D=[ <Conique> ]\n[ <Quadrique> ]
CenterView=CentreVue
CenterView.Syntax=[ <Centre> ]
Centroid=CentreGravité
Centroid.Syntax=[ <Polygone> ]
Checkbox=CaseACocher
Checkbox.Syntax=[ ]\n[ <Légende> ]\n[ <Liste> ]\n[ <Légende>, <Liste> ]
ChiSquared=KhiCarré
ChiSquared.Syntax=[ <Degré de liberté>, <Valeur Variable> ]\n[ <Degré de liberté>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Degré de liberté>, x, <Booléen Cumul> ]
ChiSquared.SyntaxCAS=[ <Degré de liberté>, <Valeur Variable> ]
ChiSquaredTest=KhiCarréTest
ChiSquaredTest.Syntax=[ <Matrice> ]\n[ <Liste>, <Liste> ]\n[ <Matrice>, <Matrice> ]
Circle=Cercle
Circle.Syntax=[ <Point>, <Rayon> ]\n[ <Point>, <Segment> ]\n[ <Point>, <Point> ]\n[ <Point>, <Point>, <Point> ]
Circle.Syntax3D=[ <Point>, <Rayon> ]\n[ <Point>, <Segment> ]\n[ <Point>, <Point> ]\n[ <Axe>, <Point> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Rayon>, <Direction> ]\n[ <Point>, <Point>, <Direction> ]
CircleArc=ArcCercle
CircleArc.Syntax=[ <Centre>, <Point>, <Point> ]
CircleSector=SecteurCirculaire
CircleSector.Syntax=[ <Centre>, <Point>, <Point> ]
CircumcircleArc=ArcCercleCirconscrit
CircumcircleSector=SecteurCirculaire3points
Circumference=Circonférence
Circumference.Syntax=[ <Conique> ]
Classes.Syntax=[ <Liste Données>, <Nombre Classes> ]\n[ <Liste Données>, <Début>, <Largeur Classes> ]
ClosestPoint=PointPlusProche
ClosestPoint.Syntax=[ <Chemin>, <Point> ]\n[ <Droite>, <Droite> ]
ClosestPointRegion=PointPlusProcheRégion
ClosestPointRegion.Syntax=[ <Région>, <Point> ]
Coefficients.Syntax=[ <Polynôme> ]\n[ <Conique> ]
Coefficients.SyntaxCAS=[ <Polynôme> ]\n[ <Polynôme>, <Variable> ]
Column=Colonne
Column.Syntax=[ <Cellule> ]
ColumnName=NomColonne
ColumnName.Syntax=[ <Cellule> ]
Command=Commande
CommonDenominator=DénominateurCommun
CompetitionRank=Classement
CompetitionRank.Syntax=[ <Liste> ]
CompleteSquare=FormeCanonique
CompleteSquare.Syntax=[ <Fonction 2d degré> ]
ComplexRoot=RacineComplexe
ComplexRoot.Syntax=[ <Polynôme> ]
Cone=Cône
Cone.Syntax=[ <Cercle>, <Hauteur> ]\n[ <Point>, <Point>, <Rayon> ]\n[ <Point>, <Vecteur>, <Angle> ]
Conic=Conique
Conic.Syntax=[ <Point1>, <Point2>, <Point3>, <Point4>, <Point5> ]\n[ <Nombre1>, <Nombre2>, <Nombre3>, <Nombre4>, <Nombre5>, <Nombre6> ]
ConstructionStep=EtapeConstruction
ConstructionStep.Syntax=[ ]\n[ <Objet> ]
ContingencyTable=TableContingences
ContingencyTable.Syntax=[ <Liste de textes>, <Liste de textes> ]\n[ <Liste de textes>, <Liste de textes>, <Options> ]\n[ <Liste TitresLignes>, <Liste TitresColonnes>, <Matrice Dépouillée> ]\n[ <Liste TitresLignes>, <Liste TitresColonnes>, <Matrice Dépouillée>, <Options> ]
ContinuedFraction=FractionContinue
ContinuedFraction.Syntax=[ <Nombre> ]\n[ <Nombre>, <Niveau> ]\n[ <Nombre>, <Niveau>, <Enligne true|false> ]
ConvexHull=EnveloppeConvexe
ConvexHull.Syntax=[ <Liste Points> ]
CopyFreeObject=CopierObjetLibre
CopyFreeObject.Syntax=[ <Objet> ]
Corner=Coin
Corner.Syntax=[ <Numéro> ]\n[ <Image>, <Numéro> ]\n[ <Texte>, <Numéro> ]\n[ <Vue graphique>, <Numéro> ]
CountIf=NbSi
CountIf.Syntax=[ <Condition>, <Liste> ]\n[ <Condition>, <Variable>, <Liste> ]
Covariance.Syntax=[ <Liste Points> ]\n[ <Liste Nombres>, <Liste Nombres> ]
Cross=ProduitVectoriel
Cross.Syntax=[ <Vecteur>, <Vecteur> ]
CrossRatio=Birapport
Cube.Syntax=[ <Carré> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Cubic=Cubique
Cubic.Syntax=[ <Point>, <Point>, <Point>, <Nombre> ]
Curvature=Courbure
Curvature.Syntax=[ <Point>, <Objet> ]
CurvatureVector=VecteurCourbure
CurvatureVector.Syntax=[ <Point>, <Objet> ]
CurveCartesian=Courbe
CurveCartesian.Syntax=[ <Expression>, <Expression>, <Variable>, <de>, <à> ]
CurveCartesian.Syntax3D=[ <Expression>, <Expression>, <Variable>, <de>, <à> ]\n[ <Expression>, <Expression>, <Expression>, <Variable>, <de>, <à> ]
Cylinder=Cylindre
Cylinder.Syntax=[ <Cercle>, <Hauteur> ]\n[ <Point>, <Point>, <Rayon> ]
DataFunction=FonctionDonnées
DataFunction.Syntax=[ <Liste Nombres>, <Liste Nombres> ]
Defined=EstDéfini
Defined.Syntax=[ <Objet> ]
Degree=Degré
Degree.Syntax=[ <Polynôme> ]
Degree.SyntaxCAS=[ <Polynôme> ]\n[ <Polynôme>, <Variable> ]
DelauneyTriangulation=TriangulationDelaunay
DelauneyTriangulation.Syntax=[ <Liste Points> ]
Delete=Effacer
Delete.Syntax=[ <Objet> ]
Denominator=Dénominateur
Denominator.Syntax=[ <Nombre> ]\n[ <Fonction> ]
DensityPlot=TracéDensité
Derivative=Dérivée
Derivative.Syntax=[ <Fonction> ]\n[ <Courbe> ]\n[ <Fonction>, <Ordre> ]\n[ <Fonction>, <Variable> ]\n[ <Courbe>, <Ordre> ]\n[ <Fonction>, <Variable>, <Ordre> ]
Derivative.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Variable> ]\n[ <Expression>, <Variable>, <Nombre> ]
Determinant=Déterminant
Determinant.Syntax=[ <Matrice> ]
Diameter=Diamètre
Diameter.Syntax=[ <Vecteur>, <Conique> ]\n[ <Droite>, <Conique> ]
Difference=Différence
Difference.Syntax=[ <Polygone>, <Polygone> ]
Dilate=Homothétie
Dilate.Syntax=[ <Objet>, <Rapport> ]\n[ <Objet>, <Rapport>, <Centre> ]
Dimension.Syntax=[ <Objet> ]
Direction.Syntax=[ <Ligne> ]
Directrix=Directrice
Directrix.Syntax=[ <Conique> ]
Distance.Syntax=[ <Point>, <Objet> ]\n[ <Ligne>, <Ligne> ]\n[ <Plan>, <Plan> ]
Div=Quotient
Div.Syntax=[ <Dividende>, <Diviseur> ]\n[ <Polynôme Dividende>, <Polynôme Diviseur> ]
Division.Syntax=[ <Dividende>, <Diviseur> ]\n[ <Polynôme Dividende>, <Polynôme Diviseur> ]
Divisors=Diviseurs
Divisors.Syntax=[ <Nombre> ]
DivisorsList=ListeDiviseurs
DivisorsList.Syntax=[ <Nombre> ]
DivisorsSum=SommeDiviseurs
DivisorsSum.Syntax=[ <Nombre> ]
Dodecahedron=Dodécaèdre
Dodecahedron.Syntax=[ <Pentagone régulier> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Dot=ProduitScalaire
Dot.Syntax=[ <Vecteur>, <Vecteur> ]
DotPlot=NuagePoints
DotPlot.Syntax=[ <Liste Données>, <Empiler Points adjacents (optionnel)>, <Echelle (optionnelle)> ]
DynamicCoordinates=CoordonnéesDynamiques
DynamicCoordinates.Syntax=[ <Point>, <Nombre>, <Nombre> ]\n[ <Point>, <Nombre>, <Nombre>, <Nombre> ]
Eccentricity=Excentricité
Eccentricity.Syntax=[ <Conique> ]
Eigenvalues=ValeursPropres
Eigenvalues.SyntaxCAS=[ <Matrice> ]
Eigenvectors=VecteursPropres
Eigenvectors.SyntaxCAS=[ <Matrice> ]
Element=Elément
Element.Syntax=[ <Liste>, <Position> ]\n[ <Matrice>, <Ligne>, <Colonne> ]\n[ <Liste>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <Liste>, <Position> ]\n[ <Matrice>, <Ligne>, <Colonne> ]
Eliminate=Elimination
Eliminate.Syntax=[ <Liste Polynômes>, <Liste Variables> ]
Ellipse.Syntax=[ <Foyer>, <Foyer>, <Demi Longueur Axe Principal> ]\n[ <Foyer>, <Foyer>, <Segment> ]\n[ <Foyer>, <Foyer>, <Point> ]
Ends=Finaux
Ends.Syntax=[ <Quadrique> ]
Envelope=Enveloppe
Envelope.Syntax=[ <Chemin>, <Point> ]
Erlang.Syntax=[ <Forme>, <Intensité>, <Valeur Variable> ]\n[ <Forme>, <Intensité>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Forme>, <Intensité>, x, <Booléen Cumul> ]
Evaluate=Evaluer
Excentricity=ExcentricitéLinéaire
Excentricity.Syntax=[ <Conique> ]
Execute=Exécute
Execute.Syntax=[ <Liste Textes> ]\n[ <Liste Textes>, <Paramètre>, <Paramètre>, ... ]
Expand=Développer
Exponential=Exponentielle
Exponential.Syntax=[ <Lambda>, <Valeur Variable> ]\n[ <Lambda>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Lambda>, x, <Booléen Cumul> ]
Exponential.SyntaxCAS=[ <Lambda>, <Valeur Variable> ]
ExportImage=ExporterImage
ExportImage.Syntax=[ <Paramètre>, <Valeur>, <Paramètre>, <Valeur>, ... ]
Extremum.Syntax=[ <Polynôme> ]\n[ <Fonction>, <x initial>, <x final> ]
FDistribution.Syntax=[ <Degré liberté Numérateur>, <Degré liberté Dénominateur>, <Valeur Variable> ]\n[ <Degré liberté Numérateur>, <Degré liberté Dénominateur>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Degré liberté Numérateur>, <Degré liberté Dénominateur>, x, <Booléen Cumul> ]
FDistribution.SyntaxCAS=[ <Degré liberté Numérateur>, <Degré liberté Dénominateur>, x ]
Factor=Factoriser
Factor.Syntax=[ <Polynôme> ]
Factor.SyntaxCAS=[ <Nombre> ]\n[ <Polynôme> ]\n[ <Expression>, <Variable> ]
Factors=Facteurs
Factors.Syntax=[ <Nombre> ]\n[ <Polynôme> ]
FillCells=RemplirCellules
FillCells.Syntax=[ <Plage>, <Objet> ]\n[ <Cellule>, <Liste> ]\n[ <Cellule>, <Matrice> ]
FillColumn=RemplirColonne
FillColumn.Syntax=[ <Colonne>, <Liste> ]
FillRow=RemplirLigne
FillRow.Syntax=[ <Ligne>, <Liste> ]
First=Premiers
First.Syntax=[ <Liste> ]\n[ <Texte> ]\n[ <Liste>, <Nombre> ]\n[ <Texte>, <Nombre> ]\n[ <Lieu>, <Nombre> ]
First.SyntaxCAS=[ <Liste> ]\n[ <Liste>, <Nombre> ]
FirstAxis=GrandAxe
FirstAxis.Syntax=[ <Conique> ]
FirstAxisLength=LDemiGrandAxe
FirstAxisLength.Syntax=[ <Conique> ]
Fit=Ajustement
Fit.Syntax=[ <Liste Points>, <Liste Fonctions> ]\n[ <Liste Points>, <Fonction> ]
FitExp=AjustExp
FitExp.Syntax=[ <Liste Points> ]
FitGrowth=AjustCroissance
FitGrowth.Syntax=[ <Liste Points> ]
FitImplicit=AjustImplicite
FitImplicit.Syntax=[ <Liste de Points>, <Ordre> ]
FitLineX=AjustLinX
FitLineX.Syntax=[ <Liste Points> ]
FitLineY=AjustLin
FitLineY.Syntax=[ <Liste Points> ]
FitLog=AjustLog
FitLog.Syntax=[ <Liste Points> ]
FitLogistic=AjustLogistique
FitLogistic.Syntax=[ <Liste Points> ]
FitPoly=AjustPoly
FitPoly.Syntax=[ <Liste Points>, <Degré> ]\n[ <Fonction à main levée>, <Degré> ]
FitPow=AjustPuissance
FitPow.Syntax=[ <Liste Points> ]
FitSin=AjustSin
FitSin.Syntax=[ <Liste Points> ]
Flatten=Aplatir
Flatten.Syntax=[ <Liste> ]
Focus=Foyer
Focus.Syntax=[ <Conique> ]
FractionText=FractionTexte
FractionText.Syntax=[ <Nombre> ]\n[ <Point> ]
Frequency=Effectifs
Frequency.Syntax=[ <Liste brute des données> ]\n[ <Booléen Cumul>, <Liste brute des données> ]\n[ <Liste des bornes des classes>, <Liste brute des données> ]\n[ <Liste de textes>, <Liste de textes> ]\n[ <Booléen Cumul>, <Liste des bornes des classes>, <Liste brute des données> ]\n[ <Liste des bornes des classes>, <Liste brute des données>, <Densité true|false>, <Echelle (optionnel)> ]\n[ <Booléen Cumul>, <Liste des bornes des classes>, <Liste brute des données>, <Densité true|false>, <Echelle (optionnel)> ]
FrequencyPolygon=PolygoneEffectifs
FrequencyPolygon.Syntax=[ <Liste Bornes Classes>, <Liste Hauteurs> ]\n[ <Liste Bornes Classes>, <Liste Données>, <Densité true|false>, <Echelle (optionnel)> ]\n[ <Booléen Cumul>, <Liste Bornes Classes>, <Liste Données>, <Densité true|false>, <Echelle (optionnel)> ]
FrequencyTable=TableauEffectifs
FrequencyTable.Syntax=[ <Liste Données>, <Echelle (optionnelle)> ]\n[ <Booléen Cumul>, <Liste Données> ]\n[ <Liste Bornes Classes>, <Liste Données> ]\n[ <Booléen Cumul>, <Liste Bornes Classes>, <Liste Données> ]\n[ <Liste Bornes Classes>, <Liste Données>, <Densité True|False>, <Echelle (optionnel)> ]\n[ <Booléen Cumul>, <Liste Bornes Classes>, <Liste Données>, <Densité True|False>, <Echelle (optionnelle)> ]
FromBase=DeBase
FromBase.Syntax=[ "<Nombre en Texte>", <Base> ]
Function=Fonction
Function.Syntax=[ <Liste de Nombres> ]\n[ <Fonction>, <x initial>, <x final> ]
Function.Syntax3D=[ <Liste Nombres> ]\n[ <Fonction>, <de>, <à> ]\n[ <Expression>, <Variable 1>, <de>, <à>, <Variable 2>, <de>, <à> ]
Function.SyntaxCAS=[ <Fonction>, <de>, <à> ]
FutureValue=ValeurFuture
FutureValue.Syntax=[ <Taux>, <Nombre de Périodes>, <Paiement>, <Valeur Actuelle (optionnelle)>, <Type (optionnel)> ]
GCD=PGCD
GCD.Syntax=[ <Liste Nombres> ]\n[ <Nombre>, <Nombre> ]
GCD.SyntaxCAS=[ <Liste Nombres> ]\n[ <Liste Polynômes> ]\n[ <Nombre>, <Nombre> ]\n[ <Polynôme>, <Polynôme> ]
Gamma.Syntax=[ <Alpha>, <Beta>, <Valeur Variable> ]\n[ <Alpha>, <Beta>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Alpha>, <Beta>, x, <Booléen Cumul> ]
Gamma.SyntaxCAS=[ <Alpha>, <Beta>, x ]
GeometricMean=MoyenneGéométrique
GeometricMean.Syntax=[ <Liste Nombres> ]
GetTime=LireTemps
GetTime.Syntax=[ ]\n[ <Format> ]
GroebnerDegRevLex=GroebnerDegInvLex
GroebnerDegRevLex.Syntax=[ <Liste Polynômes> ]\n[ <Liste Polynômes>, <Liste Variables> ]
GroebnerLex.Syntax=[ <Liste Polynômes> ]\n[ <Liste Polynômes>, <Liste Variables> ]
GroebnerLexDeg.Syntax=[ <Liste Polynômes> ]\n[ <Liste Polynômes>, <Liste Variables> ]
HarmonicMean=MoyenneHarmonique
HarmonicMean.Syntax=[ <Liste Nombres> ]
Height=Hauteur
Height.Syntax=[ <Solide> ]
HideLayer=CacherCalque
HideLayer.Syntax=[ <Numéro> ]
Histogram=Histogramme
Histogram.Syntax=[ <Liste Bornes Classes>, <Liste Hauteurs> ]\n[ <Liste Bornes Classes>, <Liste Données>, <Densité True|False>, <Echelle (optionnel)> ]\n[ <Booléen Cumul>, <Liste Bornes Classes>, <Liste Données>, <Densité True|False>, <Echelle (optionnel)> ]
HistogramRight=HistogramDroite
HistogramRight.Syntax=[ <Liste Bornes Classes>, <Liste Hauteurs> ]\n[ <Liste Bornes Classes>, <Liste Données>, <Densité True|False>, <Echelle (optionnel)> ]\n[ <Booléen Cumul>, <Liste Bornes Classes>, <Liste Données>, <Densité True|False>, <Echelle (optionnel)> ]
HyperGeometric=HyperGéométrique
HyperGeometric.Syntax=[ <Taille Population>, <Nombre Succès>, <Taille Echantillon> ]\n[ <Taille Population>, <Nombre Succès>, <Taille Echantillon>, <Booléen Cumul> ]\n[ <Taille Population>, <Nombre Succès>, <Taille Echantillon>, <Valeur Variable>, <Booléen Cumul> ]
HyperGeometric.SyntaxCAS=[ <Taille Population>, <Nombre Succès>, <Taille Échantillon>, x, <Booléen Cumul> ]
Hyperbola=Hyperbole
Hyperbola.Syntax=[ <Foyer>, <Foyer>, <Longueur demi-Axe Principal> ]\n[ <Foyer>, <Foyer>, <Segment> ]\n[ <Point>, <Point>, <Point> ]
IFactor=FactoriseIrr
IFactor.Syntax=[ <Polynome> ]
Icosahedron=Icosaèdre
Icosahedron.Syntax=[ <Triangle Equilatéral> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Identity=Identité
Identity.Syntax=[ <Nombre> ]
If=Si
If.Syntax=[ <Condition>, <Alors> ]\n[ <Condition>, <Alors>, <Sinon> ]
ImplicitCurve=CourbeImplicite
ImplicitCurve.Syntax=[ <Liste Points> ]\n[ <f(x, y)> ]
ImplicitDerivative=DérivéeImplicite
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Expression (x, y)>, <Fonction y de la variable x>, <Variable x> ]
Incircle=CercleInscrit
IndexOf=Position
IndexOf.Syntax=[ <Objet>, <Liste> ]\n[ <Texte>, <Texte> ]\n[ <Objet>, <Liste>, <Position Départ> ]\n[ <Texte>, <Texte>, <Position Départ> ]
InfiniteCone=CôneInfini
InfiniteCone.Syntax=[ <Point>, <Vecteur>, <Angle> ]\n[ <Point>, <Point>, <Angle> ]\n[ <Point>, <Droite>, <Angle> ]
InfiniteCylinder=CylindreInfini
InfiniteCylinder.Syntax=[ <Ligne>, <Rayon> ]\n[ <Point>, <Vecteur>, <Rayon> ]\n[ <Point>, <Point>, <Rayon> ]
Insert=Insérer
Insert.Syntax=[ <Liste>, <Liste>, <Position> ]\n[ <Objet>, <Liste>, <Position> ]
Integral=Intégrale
Integral.Syntax=[ <Fonction> ]\n[ <Fonction>, <Variable> ]\n[ <Fonction>, <x min>, <x max> ]\n[ <Fonction>, <x min>, <x max>, <Booléen Calcul> ]
Integral.SyntaxCAS=[ <Fonction> ]\n[ <Fonction>, <Variable> ]\n[ <Fonction>, <x min>, <x max> ]\n[ <Fonction>, <Variable>, <de>, <à> ]
IntegralBetween=IntégraleDomaine
IntegralBetween.Syntax=[ <Fonction>, <Fonction>, <x min>, <x max> ]\n[ <Fonction>, <Fonction>, <x min>, <x max>, <true|false Calcul> ]
IntegralBetween.SyntaxCAS=[ <Fonction>, <Fonction>, <x min>, <x max> ]\n[ <Fonction>, <Fonction>, <Variable>, <de>, <à> ]
InteriorAngles=AnglesIntérieurs
InteriorAngles.Syntax=[ <Polygone> ]
Intersect=Intersection
Intersect.Syntax=[ <Objet>, <Objet> ]\n[ <Objet>, <Objet>, <Numéro> ]\n[ <Objet>, <Objet>, <Point Initial> ]\n[ <Fonction>, <Fonction>, <x min>, <x max> ]\n[ <Courbe 1>, <Courbe 2>, <Paramètre 1>, <Paramètre 2> ]
Intersect.SyntaxCAS=[ <Fonction>, <Fonction> ]
IntersectConic=InterConique
IntersectConic.Syntax=[ <Plan>, <Quadrique> ]\n[ <Quadrique>, <Quadrique> ]
IntersectPath=IntersectionChemins
IntersectPath.Syntax=[ <Ligne>, <Polygone> ]\n[ <Polygone>, <Polygone> ]
IntersectPath.Syntax3D=[ <Ligne>, <Polygone> ]\n[ <Polygone>, <Polygone> ]\n[ <Plan>, <Polygone> ]\n[ <Plan>, <Quadrique> ]
Intersection=Inter
Intersection.Syntax=[ <Liste>, <Liste> ]
InverseBinomial=InverseBinomiale
InverseBinomial.Syntax=[ <Nombre Essais>, <Probabilité Succès>, <Probabilité> ]
InverseCauchy.Syntax=[ <Médiane>, <Echelle>, <Probabilité> ]
InverseChiSquared=InverseKhiCarré
InverseChiSquared.Syntax=[ <Degré de liberté>, <Probabilité> ]
InverseExponential=InverseExponentielle
InverseExponential.Syntax=[ <Lambda>, <Probabilité> ]
InverseFDistribution.Syntax=[ <Degré liberté Numérateur>, <Degré liberté Dénominateur>, <Probabilité> ]
InverseGamma.Syntax=[ <Alpha>, <Beta>, <Probabilité> ]
InverseHyperGeometric=InverseHyperGéométrique
InverseHyperGeometric.Syntax=[ <Taille Population>, <Nombre Succès>, <Taille Echantillon>, <Probabilité> ]
InverseLaplace.Syntax=[ <Fonction> ]\n[ <Fonction>, <Variable> ]\n[ <Fonction>, <Variable>, <Variable> ]
InverseLogNormal=InverseLogNormale
InverseLogNormal.Syntax=[ <Moyenne>, <Écart-type>, <Probabilité> ]
InverseLogistic=InverseLogistique
InverseLogistic.Syntax=[ <Moyenne>, <Écart-type>, <Probabilité> ]
InverseNormal=InverseNormale
InverseNormal.Syntax=[ <Moyenne>, <Ecart-type>, <Probabilité> ]
InversePascal.Syntax=[ <n>, <p>, <Probabilité> ]
InversePoisson.Syntax=[ <Moyenne>, <Probabilité> ]
InverseTDistribution.Syntax=[ <Degré de liberté>, <Probabilité> ]
InverseWeibull.Syntax=[ <Forme>, <Echelle>, <Probabilité> ]
InverseZipf.Syntax=[ <Nombre Éléments>, <Exposant>, <Probabilité> ]
Invert=Inverser
Invert.Syntax=[ <Matrice> ]\n[ <Fonction> ]
IsInRegion=EstDansRégion
IsInRegion.Syntax=[ <Point>, <Région> ]
IsInteger=EstEntier
IsInteger.Syntax=[ <Nombre> ]
IsPrime=EstPremier
IsPrime.Syntax=[ <Nombre> ]
IsTangent=EstTangente
IsTangent.Syntax=[ <Ligne>, <Conique> ]
Iteration=Itération
Iteration.Syntax=[ <Fonction>, <Valeur départ>, <Nombre> ]\n[ <Expression>, <Variables>, <Valeurs départ>, <Nombre> ]
IterationList=ItérationListe
IterationList.Syntax=[ <Fonction>, <Valeur départ>, <Nombre> ]\n[ <Expression>, <Variables>, <Valeurs départ>, <Nombre> ]
Join=Unir
Join.Syntax=[ <Liste de listes> ]\n[ <Liste>, <Liste>, ... ]
JordanDiagonalization=JordanDiagonalisation
JordanDiagonalization.SyntaxCAS=[ <Matrice> ]
KeepIf=GarderSi
KeepIf.Syntax=[ <Condition>, <Liste> ]\n[ <Condition>, <Variable>, <Liste> ]
LCM=PPCM
LCM.Syntax=[ <Liste Nombres> ]\n[ <Nombre>, <Nombre> ]
LCM.SyntaxCAS=[ <Liste Nombres> ]\n[ <Liste Polynômes> ]\n[ <Nombre>, <Nombre> ]\n[ <Polynôme>, <Polynôme> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Objet> ]\n[ <Objet>, <Booléen pour Substitution Variables> ]\n[ <Objet>, <Booléen pour Substitution Variables>, <Booléen pour Affichage Nom> ]
Laplace.Syntax=[ <Fonction> ]\n[ <Fonction>, <Variable> ]\n[ <Fonction>, <Variable>, <Variable> ]
Last=Derniers
Last.Syntax=[ <Liste> ]\n[ <Texte> ]\n[ <Liste>, <Nombre> ]\n[ <Texte>, <Nombre> ]
Last.SyntaxCAS=[ <Liste> ]\n[ <Liste>, <Nombre> ]
LeftSide=MembreGauche
LeftSide.Syntax=[ <Équation> ]
LeftSide.SyntaxCAS=[ <Équation> ]\n[ <Liste d'équations> ]\n[ <Liste d'équations>, <Indice> ]
LeftSum=SommeGauche
LeftSum.Syntax=[ <Fonction>, <x min>, <x max>, <Nombre Rectangles> ]
Length=Longueur
Length.Syntax=[ <Objet> ]\n[ <Fonction>, <x min>, <x max> ]\n[ <Fonction>, <Point Début>, <Point Fin> ]\n[ <Courbe>, <t min>, <t max> ]\n[ <Courbe>, <Point Début>, <Point Fin> ]
Length.SyntaxCAS=[ <Liste> ]\n[ <Fonction>, <x min>, <x max> ]\n[ <Fonction>, <Variable>, <Valeur Début>, <Valeur Fin> ]
LetterToUnicode=LettreEnUnicode
LetterToUnicode.Syntax=[ "<Lettre>" ]
Limit=Limite
Limit.Syntax=[ <Fonction>, <Nombre> ]
Limit.SyntaxCAS=[ <Expression>, <Valeur ou Infini> ]\n[ <Expression>, <Variable>, <Valeur ou Infini> ]
LimitAbove=LimDroite
LimitAbove.Syntax=[ <Fonction>, <Valeur> ]
LimitAbove.SyntaxCAS=[ <Expression>, <Valeur> ]\n[ <Expression>, <Variable>, <Valeur> ]
LimitBelow=LimGauche
LimitBelow.Syntax=[ <Fonction>, <Valeur> ]
LimitBelow.SyntaxCAS=[ <Expression>, <Valeur> ]\n[ <Expression>, <Variable>, <Valeur> ]
Line=Droite
Line.Syntax=[ <Point>, <Point> ]\n[ <Point>, <Ligne parallèle> ]\n[ <Point>, <Vecteur> ]
LineBisector=Médiatrice
Locus=Lieu
Locus.Syntax=[ <Point créant le lieu>, <Point> ]\n[ <Point créant le lieu>, <Curseur> ]\n[ <Champ vectoriel>, <Point> ]\n[ <f(x, y)>, <Point> ]
LocusEquation=EquationLieu
LocusEquation.Syntax=[ <Lieu point-point> ]\n[ <Point Lieu>, <Point mobile> ]\n[ <Booléen>, <Point mobile> ]
LogNormal=LogNormale
LogNormal.Syntax=[ <Moyenne>, <Écart-Type>, <Valeur Variable> ]\n[ <Moyenne>, <Écart-Type>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Moyenne>, <Écart-Type>, x, <Booléen Cumul> ]
Logistic=Logistique
Logistic.Syntax=[ <Moyenne>, <Paramètre>, <Valeur Variable> ]\n[ <Moyenne>, <Paramètre>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Moyenne>, <Paramètre>, x, <Booléen Cumul> ]
LowerSum=SommeInférieure
LowerSum.Syntax=[ <Fonction>, <x min>, <x max>, <Nombre Rectangles> ]
MAD=DAM
MAD.Syntax=[ <Liste de données brutes> ]\n[ <Liste des valeurs>, <Liste des effectifs> ]
MatrixPlot=ImageMatrice
MatrixRank=Rang
MatrixRank.Syntax=[ <Matrice> ]
Max.Syntax=[ <Intervalle> ]\n[ <Liste> ]\n[ <Nombre>, <Nombre> ]\n[ <Liste données>, <Liste effectifs> ]\n[ <Fonction>, <x initial>, <x final> ]
Max.SyntaxCAS=[ <Liste> ]\n[ <Nombre>, <Nombre> ]
Maximize=Maximiser
Maximize.Syntax=[ <Nombre lié>, <Nombre libre> ]\n[ <Nombre lié>, <Point sur chemin> ]
Mean=Moyenne
Mean.Syntax=[ <Liste de données brutes> ]\n[ <Liste de nombres>, <Liste d'effectifs> ]
Mean.SyntaxCAS=[ <Liste Nombres> ]
MeanX=MoyenneX
MeanX.Syntax=[ <Liste Points> ]
MeanY=MoyenneY
MeanY.Syntax=[ <Liste Points> ]
Median=Médiane
Median.Syntax=[ <Liste de données brutes> ]\n[ <Liste de nombres>, <Liste d'effectifs> ]
Median.SyntaxCAS=[ <Liste Nombres> ]
Midpoint=MilieuCentre
Midpoint.Syntax=[ <Segment> ]\n[ <Conique> ]\n[ <Intervalle> ]\n[ <Point>, <Point> ]
Min.Syntax=[ <Intervalle> ]\n[ <Liste> ]\n[ <Nombre>, <Nombre> ]\n[ <Liste données>, <Liste effectifs> ]\n[ <Fonction>, <x initial>, <x final> ]
Min.SyntaxCAS=[ <Liste> ]\n[ <Nombre>, <Nombre> ]
Minimize=Minimiser
Minimize.Syntax=[ <Nombre lié>, <Nombre libre> ]\n[ <Nombre lié>, <Point sur chemin> ]
MinimumSpanningTree=ArbreCouvrantMinimum
MinimumSpanningTree.Syntax=[ <Liste Points> ]
Mirror=Symétrie
Mirror.Syntax=[ <Objet>, <Point> ]\n[ <Objet>, <Droite> ]\n[ <Objet>, <Cercle> ]
Mirror.Syntax3D=[ <Objet>, <Point> ]\n[ <Objet>, <Ligne> ]\n[ <Objet>, <Plan> ]\n[ <Objet>, <Cercle> ]
MixedNumber=FractionPropre
MixedNumber.SyntaxCAS=[ <Expression> ]
Mod=Reste
Mod.Syntax=[ <Dividende>, <Diviseur> ]\n[ <Polynôme Dividende>, <Polynôme Diviseur> ]
Mode.Syntax=[ <Liste Nombres> ]
NDerivative=NDérivée
NDerivative.Syntax=[ <Fonction> ]
NIntegral=NIntégrale
NIntegral.Syntax=[ <Fonction> ]\n[ <Fonction>, <de>, <à> ]
NIntegral.SyntaxCAS=[ <Fonction>, <x min>, <x max> ]\n[ <Fonction>, <Variable>, <de>, <à> ]
NInvert=NInverser
NInvert.Syntax=[ <Fonction> ]
NSolutions.Syntax=[ <Équation> ]
NSolutions.SyntaxCAS=[ <Équation> ]\n[ <Équation>, <Variable> ]\n[ <Équation>, <Variable = valeur départ> ]\n[ <Liste Équations>, <Liste Variables> ]
NSolve=NRésoudre
NSolve.Syntax=[ <Équation> ]
NSolve.SyntaxCAS=[ <Équation> ]\n[ <Équation>, <Variable> ]\n[ <Équation>, <Variable = valeur départ> ]\n[ <Liste Équations>, <Liste Variables> ]
NSolveODE=NRésolEquaDiff
NSolveODE.Syntax=[ <Liste des Dérivées>, <Abscisse initiale>, <Liste des ordonnées initiales>, <Abscisse finale> ]
Name=Nom
Name.Syntax=[ <Objet> ]
Net=Patron
Net.Syntax=[ <Polyèdre>, <Nombre> ]\n[ <Polyèdre>, <Nombre>, <Face>, <Arête>, <Arête>, ... ]
NextPrime=PremierSuivant
NextPrime.Syntax=[ <Nombre> ]
Normal=Normale
Normal.Syntax=[ <Moyenne>, <Écart-Type>, <Valeur Variable> ]\n[ <Moyenne>, <Écart-Type>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Moyenne>, <Écart-Type>, x, <Booléen Cumul> ]
Normal.SyntaxCAS=[ <Moyenne>, <Écart-Type>, x ]
NormalQuantilePlot=NormaleQuantile
NormalQuantilePlot.Syntax=[ <Liste Données> ]
Normalize=Normaliser
Normalize.Syntax=[ <Liste Nombres> ]\n[ <Liste  Points> ]
Numerator=Numérateur
Numerator.Syntax=[ <Nombre> ]\n[ <Fonction> ]
Numeric=Numérique
Numeric.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <nombre de chiffres> ]
Object=Objet
Object.Syntax=[ <Nom Objet en Texte> ]
Octahedron=Octaèdre
Octahedron.Syntax=[ <Triangle Equilatéral> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Ordinal.Syntax=[ <Entier naturel> ]
OrdinalRank=Positions
OrdinalRank.Syntax=[ <Liste> ]
OrthogonalLine=Perpendiculaire
OrthogonalLine.Syntax=[ <Point>, <Droite> ]\n[ <Point>, <Segment> ]\n[ <Point>, <Vecteur> ]
OrthogonalLine.Syntax3D=[ <Point>, <Ligne> ]\n[ <Point>, <Segment> ]\n[ <Point>, <Vecteur> ]\n[ <Point>, <Plan> ]\n[ <Ligne>, <Ligne> ]\n[ <Point>, <Direction>, <Direction> ]\n[ <Point>, <Ligne>, <Contexte> ]
OrthogonalPlane=PlanOrthogonal
OrthogonalPlane.Syntax=[ <Point>, <Ligne> ]\n[ <Point>, <Vecteur> ]
OrthogonalVector=VecteurOrthogonal
OrthogonalVector.Syntax=[ <Droite> ]\n[ <Segment> ]\n[ <Vecteur> ]
OrthogonalVector.Syntax3D=[ <Droite> ]\n[ <Segment> ]\n[ <Vecteur> ]\n[ <Plan> ]
OrthogonalVector.SyntaxCAS=[ <Vecteur> ]
OsculatingCircle=CercleOsculateur
OsculatingCircle.Syntax=[ <Point>, <Objet> ]
PMCC=CoeffCorrélation
PMCC.Syntax=[ <Liste Points> ]\n[ <Liste Abscisses>, <Liste Ordonnées> ]
Pan=DéplacerGraphique
Parabola=Parabole
Parabola.Syntax=[ <Point>, <Droite> ]
Parameter=Paramètre
Parameter.Syntax=[ <Parabole> ]
ParametricDerivative=DérivéeParamétrique
ParametricDerivative.Syntax=[ <Courbe> ]
ParseToFunction=AnalyserFonction
ParseToFunction.Syntax=[ <Fonction>, <Chaîne> ]
ParseToNumber=AnalyserNombre
ParseToNumber.Syntax=[ <Nombre>, <Chaîne> ]
PartialFractions=ElémentsSimples
PartialFractions.Syntax=[ <Fonction> ]
PartialFractions.SyntaxCAS=[ <Fonction> ]\n[ <Fonction>, <Variable> ]
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <Booléen Cumul> ]\n[ <n>, <p>, <Valeur Variable>, <Booléen Cumul> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Valeur Variable v>, <Booléen Cumul> ]
PathParameter=ParamètreChemin
PathParameter.Syntax=[ <Point sur Chemin> ]
Payment=Paiement
Payment.Syntax=[ <Taux>, <Nombre de Périodes>, <Valeur Actuelle>, <Valeur Future (optionnelle)>, <Type (optionnel)> ]
Percentile=Centile
Percentile.Syntax=[ <Liste Nombres>, <Pourcentage> ]
Perimeter=Périmètre
Perimeter.Syntax=[ <Polygone> ]\n[ <Conique> ]\n[ <Lieu> ]
Periods=Périodes
Periods.Syntax=[ <Taux>, <Paiement>, <Valeur Actuelle>, <Valeur Future (optionnelle)>, <Type (optionnel)> ]
Plane=Plan
Plane.Syntax=[ <Polygone> ]\n[ <Conique> ]\n[ <Point>, <Plan> ]\n[ <Point>, <Ligne> ]\n[ <Ligne>, <Ligne> ]\n[ <Point>, <Point>, <Point> ]
PlaneBisector=PlanMédiateur
PlaySound=JouerSon
PlaySound.Syntax=[ <URL> ]\n[ <false|true> ]\n[ <Fonction>, <Valeur Min>, <Valeur Max> ]\n[ <Fonction>, <Valeur Min>, <Valeur Max>, <Débit>, <Profondeur> ]
Point.Syntax=[ <Objet> ]\n[ <Liste> ]\n[ <Objet>, <Paramètre> ]\n[ <Point>, <Vecteur> ]
PointIn=PointDans
PointIn.Syntax=[ <Région> ]
PointList=PointListe
PointList.Syntax=[ <Liste> ]
Poisson.Syntax=[ <Moyenne> ]\n[ <Moyenne>, <Booléen Cumul> ]\n[ <Moyenne>, <Valeur Variable>, <Booléen Cumul> ]
Poisson.SyntaxCAS=[ <Moyenne>, x, <Booléen Cumul> ]
Polar=Polaire
Polar.Syntax=[ <Point>, <Conique> ]\n[ <Droite>, <Conique> ]
PolyLine=LigneBrisée
PolyLine.Syntax=[ <Liste Points> ]\n[ <Point>, ..., <Point> ]
Polygon=Polygone
Polygon.Syntax=[ <Liste Points> ]\n[ <Point>, ..., <Point> ]\n[ <Point>, <Point>, <Nombre Sommets> ]
Polygon.Syntax3D=[ <Liste Points> ]\n[ <Point>, ..., <Point> ]\n[ <Point>, <Point>, <Nombre Sommets> ]\n[ <Point>, <Point>, <Nombre Sommets>, <Direction> ]
Polynomial=Polynôme
Polynomial.Syntax=[ <Fonction> ]\n[ <Liste Points> ]
Polynomial.SyntaxCAS=[ <Fonction> ]\n[ <Fonction>, <Variable> ]
PresentValue=ValeurActuelle
PresentValue.Syntax=[ <Taux>, <Nombre de Périodes>, <Paiement>, <Valeur Future (optionnelle)>, <Type (optionnel)> ]
PreviousPrime=PremierPrécédent
PreviousPrime.Syntax=[ <Nombre> ]
PrimeFactors=FacteursPremiers
PrimeFactors.Syntax=[ <Nombre> ]
Prism=Prisme
Prism.Syntax=[ <Polygone>, <Point> ]\n[ <Polygone>, <Hauteur> ]\n[ <Point>, <Point>, ... ]
Product=Produit
Product.Syntax=[ <Liste de données brutes> ]\n[ <Liste de nombres>, <Nombre Éléments> ]\n[ <Liste de nombres>, <Liste d'effectifs> ]\n[ <Expression>, <Variable>, <de>, <à> ]
Product.SyntaxCAS=[ <Liste d'expressions> ]\n[ <Expression>, <variable>, <de>, <à> ]
Prove=Prouver
Prove.Syntax=[ <Expression booléenne> ]
ProveDetails=PreuveDétaillée
ProveDetails.Syntax=[ <Expression> ]
Pyramid=Pyramide
Pyramid.Syntax=[ <Polygone>, <Point> ]\n[ <Polygone>, <Hauteur> ]\n[ <Point>, <Point>, <Point>, <Point>, ... ]
Q1.Syntax=[ <Liste de données brutes> ]\n[ <Liste de nombres>, <Liste d'effectifs> ]
Q3.Syntax=[ <Liste de données brutes> ]\n[ <Liste de nombres>, <Liste d'effectifs> ]
QuadricSide=SurfaceLatérale
QuadricSide.Syntax=[ <Quadrique> ]
RSquare=R2
RSquare.Syntax=[ <Liste Points>, <Fonction> ]
Radius=Rayon
Radius.Syntax=[ <Cercle> ]
Random=AléaEntreBornes
Random.Syntax=[ <Entier Minimum>, <Entier Maximum> ]\n[ <Entier Minimum>, <Entier Maximum>, <Booléen> ]
Random.SyntaxCAS=[ <Entier minimum>, <Entier maximum> ]
RandomBinomial=AléaBinomiale
RandomBinomial.Syntax=[ <Nombre Essais>, <Probabilité> ]
RandomDiscrete=HasardDiscret
RandomDiscrete.Syntax=[ <Liste>, <Liste> ]
RandomElement=ElémentAuHasard
RandomElement.Syntax=[ <Liste> ]
RandomNormal=AléaNormale
RandomNormal.Syntax=[ <Moyenne>, <Écart-Type> ]
RandomPointIn=PointAuHasardDans
RandomPointIn.Syntax=[ <Région> ]\n[ <Liste Points> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=AléaPoisson
RandomPoisson.Syntax=[ <Moyenne> ]
RandomPolynomial=PolynômeAuHasard
RandomPolynomial.Syntax=[ <Degré>, <Minimum pour Coefficients>, <Maximum pour Coefficients> ]
RandomPolynomial.SyntaxCAS=[ <Degré>, <Minimum pour les Coefficients>, <Maximum pour les Coefficients> ]\n[ <Variable>, <Degré>, <Minimum pour les Coefficients>, <Maximum pour les Coefficients> ]
RandomUniform=AléaUniforme
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <Nombre de tirages> ]
Rate=Taux
Rate.Syntax=[ <Nombre de Périodes>, <Paiement>, <Valeur Actuelle>, <Valeur Future  (optionnelle)>, <Type (optionnel)>, <Estimation (optionnelle)> ]
Rationalize=EcritureRationnelle
Rationalize.SyntaxCAS=[ <Nombre> ]
Ray=DemiDroite
Ray.Syntax=[ <Origine>, <Point> ]\n[ <Origine>, <Vecteur> ]
ReadText=LireTexte
ReadText.Syntax=[ <Texte> ]
RectangleSum=SommeRectangles
RectangleSum.Syntax=[ <Fonction>, <x min>, <x max>, <Nombre Rectangles>, <Position pour hauteur> ]
ReducedRowEchelonForm=MatriceEchelonnéeRéduite
ReducedRowEchelonForm.Syntax=[ <Matrice> ]
Relation.Syntax=[ <Liste (au plus 4)> ]\n[ <Objet>, <Objet> ]
Remove=Supprimer
Remove.Syntax=[ <Liste>, <Liste> ]
RemoveUndefined=Nettoyer
RemoveUndefined.Syntax=[ <Liste> ]
Rename=Renommer
Rename.Syntax=[ <Objet>, <Nom> ]
Repeat=Répéter
Repeat.Syntax=[ <Nombre>, <Script>, <Script>, ... ]
ResidualPlot=Résidus
ResidualPlot.Syntax=[ <Liste Points>, <Fonction> ]
Reverse=Retourner
Reverse.Syntax=[ <Liste> ]
RightSide=MembreDroite
RightSide.Syntax=[ <Équation> ]
RightSide.SyntaxCAS=[ <Équation> ]\n[ <Liste d'équations> ]\n[ <Liste d'équations>, <Indice> ]
RigidPolygon=PolygoneIndéformable
RigidPolygon.Syntax=[ <Polygone> ]\n[ <Polygone>, <Décalage x>, <Décalage y> ]\n[ <Point libre>, ..., <Point libre> ]
Root=Racine
Root.Syntax=[ <Polynôme> ]\n[ <Fonction>, <x initial> ]\n[ <Fonction>, <x min>, <x max> ]
Root.SyntaxCAS=[ <Polynôme> ]
RootList=RacineListe
RootList.Syntax=[ <Liste> ]
RootMeanSquare=MoyenneQuadratique
RootMeanSquare.Syntax=[ <Liste Nombres> ]
Roots=Racines
Roots.Syntax=[ <Fonction>, <x min>, <x max> ]
Rotate=Rotation
Rotate.Syntax=[ <Objet>, <Angle> ]\n[ <Objet>, <Angle>, <Point> ]
Rotate.Syntax3D=[ <Objet>, <Angle> ]\n[ <Objet>, <Angle>, <Point> ]\n[ <Objet>, <Angle>, <Axe de Rotation> ]\n[ <Objet>, <Angle>, <Point sur Axe>, <Direction ou Plan d'Axe> ]
RotateText=TexteTourné
RotateText.Syntax=[ <Texte>, <Angle> ]
Row=Ligne
Row.Syntax=[ <Cellule> ]
RunClickScript=LanceScriptClic
RunClickScript.Syntax=[ <Objet> ]
RunUpdateScript=LanceScriptActu
RunUpdateScript.Syntax=[ <Objet> ]
SD=EcartType
SD.Syntax=[ <Liste de données brutes> ]\n[ <Liste des valeurs>, <Liste des effectifs> ]
SDX=EcartTypeX
SDX.Syntax=[ <Liste Points> ]
SDY=EcartTypeY
SDY.Syntax=[ <Liste Points> ]
SVD=DVS
SVD.Syntax=[ <Matrice> ]
SXX=nVarX
SXX.Syntax=[ <Liste Nombres> ]\n[ <Liste Points> ]
SXY=nCov
SXY.Syntax=[ <Liste Points> ]\n[ <Liste Nombres>, <Liste Nombres> ]
SYY=nVarY
SYY.Syntax=[ <Liste Points> ]
Sample=Echantillon
Sample.Syntax=[ <Liste>, <Taille> ]\n[ <Liste>, <Taille>, <booléen true : avec répétition> ]
SampleSD=EcartTypeEchantillon
SampleSD.Syntax=[ <Liste de données brutes> ]\n[ <Liste des valeurs>, <Liste des effectifs> ]
SampleSD.SyntaxCAS=[ <Liste de données brutes> ]
SampleSDX=EcartTypeEchantillonX
SampleSDX.Syntax=[ <Liste Points> ]
SampleSDY=EcartTypeEchantillonY
SampleSDY.Syntax=[ <Liste Points> ]
SampleVariance=VarianceEchantillon
SampleVariance.Syntax=[ <Liste de données brutes> ]\n[ <Liste de nombres>, <Liste d'effectifs> ]
SampleVariance.SyntaxCAS=[ <Liste Nombres> ]
ScientificText=NotationScientifique
ScientificText.Syntax=[ <Nombre> ]\n[ <Nombre>, <Précision> ]
SecondAxis=PetitAxe
SecondAxis.Syntax=[ <Conique> ]
SecondAxisLength=LDemiPetitAxe
SecondAxisLength.Syntax=[ <Conique> ]
Sector=Secteur
Sector.Syntax=[ <Conique>, <Point>, <Point> ]\n[ <Conique>, <Valeur Paramètre>, <Valeur Paramètre> ]
Segment.Syntax=[ <Point>, <Point> ]\n[ <Point>, <Longueur> ]
SelectObjects=SélectionObjets
SelectObjects.Syntax=[ ]\n[ <Objet>, <Objet>, ... ]
SelectedElement=ElémentSélectionné
SelectedElement.Syntax=[ <Liste> ]
SelectedIndex=PositionSélectionnée
SelectedIndex.Syntax=[ <Liste> ]
Semicircle=DemiCercle
Sequence=Séquence
Sequence.Syntax=[ <Entier final> ]\n[ <Entier initial>, <Entier final> ]\n[ <de>, <à>, <pas> ]\n[ <Expression>, <Variable>, <de>, <à> ]\n[ <Expression>, <Variable>, <de>, <à>, <pas> ]
SetActiveView=SoitVueActive
SetActiveView.Syntax=[ <Vue> ]\n[ <Plan> ]
SetAxesRatio=SoitRapportAxes
SetAxesRatio.Syntax=[ <Nombre>, <Nombre> ]
SetAxesRatio.Syntax3D=[ <Nombre>, <Nombre> ]\n[ <Nombre>, <Nombre>, <Nombre> ]
SetBackgroundColor=SoitCouleurAPlan
SetBackgroundColor.Syntax=[ "<couleur>" ]\n[ <Objet>, "<couleur>" ]\n[ <Rouge>, <Vert>, <Bleu> ]\n[ <Objet>, <Rouge>, <Vert>, <Bleu> ]
SetCaption=SoitLégende
SetCaption.Syntax=[ <Objet>, <Texte> ]
SetColor=SoitCouleur
SetColor.Syntax=[ <Objet>, "<couleur>" ]\n[ <Objet>, <Rouge>, <Vert>, <Bleu> ]
SetConditionToShowObject=SoitConditionPourAfficherObjet
SetConditionToShowObject.Syntax=[ <Objet>, <Condition> ]
SetConstructionStep=SoitÉtapeConstruction
SetConstructionStep.Syntax=[ <Nombre> ]
SetCoords=SoitCoordonnées
SetCoords.Syntax=[ <Objet>, <x>, <y> ]\n[ <Objet>, <x>, <y>, <z> ]
SetDecoration=SoitDécoration
SetDecoration.Syntax=[ <Objet>, <Nombre> ]
SetDynamicColor=SoitCouleurDynamique
SetDynamicColor.Syntax=[ <Objet>, <Rouge>, <Vert>, <Bleu> ]\n[ <Objet>, <Rouge>, <Vert>, <Bleu>, <Opacité> ]
SetFilling=SoitRemplissage
SetFilling.Syntax=[ <Objet>, <Nombre> ]
SetFixed=SoitFixé
SetFixed.Syntax=[ <Objet>, <true | false> ]\n[ <Objet>, <fixé true | false>, <sélectionnable true | false> ]
SetLabelMode=SoitOptionEtiquette
SetLabelMode.Syntax=[ <Objet>, <Numéro> ]
SetLayer=SoitCalque
SetLayer.Syntax=[ <Objet>, <Calque> ]
SetLevelOfDetail=SoitNiveaudeDétail
SetLevelOfDetail.Syntax=[ <Surface>, <0 | 1> ]
SetLineStyle=SoitStyleTracé
SetLineStyle.Syntax=[ <Objet>, <Nombre> ]
SetLineThickness=SoitÉpaisseurTracé
SetLineThickness.Syntax=[ <Objet>, <Nombre> ]
SetPerspective=SoitDispositions
SetPerspective.Syntax=[ <Texte> ]
SetPointSize=SoitTaillePoint
SetPointSize.Syntax=[ <Objet>, <Nombre> ]
SetPointStyle=SoitStylePoint
SetPointStyle.Syntax=[ <Point>, <Nombre> ]
SetSeed=SoitGraine
SetSeed.Syntax=[ <Entier> ]
SetSpinSpeed=SoitVitesseRotation
SetSpinSpeed.Syntax=[ <Nombre> ]
SetTooltipMode=SoitOptionInfoBulle
SetTooltipMode.Syntax=[ <Objet>, <Numéro> ]
SetTrace=SoitTrace
SetTrace.Syntax=[ <Objet>, <true | false> ]
SetValue=SoitValeur
SetValue.Syntax=[ <Booléen>, <0|1> ]\n[ <Objet>, <Objet> ]\n[ <Liste>, <Nombre>, <Objet> ]
SetViewDirection=SoitDirectionVue
SetViewDirection.Syntax=[ ]\n[ <Direction> ]\n[ <Direction>, <Booléen Animation> ]
SetVisibleInView=SoitVisibleDansVue
SetVisibleInView.Syntax=[ <Objet>, <Numéro 1|2|-1>, <Booléen> ]
Shear=Transvection
Shear.Syntax=[ <Objet>, <Ligne>, <Rapport> ]
ShortestDistance=PlusCourteDistance
ShortestDistance.Syntax=[ <Liste Segments>, <Départ>, <Arrivée>, <Booléen pondéré> ]
ShowAxes=AfficherAxes
ShowAxes.Syntax=[ ]\n[ <Booléen> ]\n[ <Vue>, <Booléen> ]
ShowGrid=AfficherGrille
ShowGrid.Syntax=[ ]\n[ <Booléen> ]\n[ <Vue>, <Booléen> ]
ShowLabel=AfficherEtiquette
ShowLabel.Syntax=[ <Objet>, <true|false> ]
ShowLayer=AfficherCalque
ShowLayer.Syntax=[ <Numéro> ]
Shuffle=Mélangée
Shuffle.Syntax=[ <Liste> ]
SigmaXX=SommeXX
SigmaXX.Syntax=[ <Liste de Points> ]\n[ <Liste de données brutes> ]\n[ <Liste de Nombres>, <Liste d'effectifs> ]
SigmaXY=SommeXY
SigmaXY.Syntax=[ <Liste Points> ]\n[ <Liste Abscisses>, <Liste Ordonnées> ]
SigmaYY=SommeYY
SigmaYY.Syntax=[ <Liste Points> ]
Simplify=Simplifier
Simplify.Syntax=[ <Fonction> ]\n[ <Texte> ]
Simplify.SyntaxCAS=[ <Fonction> ]
Slider=Curseur
Slider.Syntax=[ <Min>, <Max>, <Incrément>, <Vitesse>, <Longueur>, <EstUnAngle>, <Horizontal>, <Animé>, <Aléatoire> ]
Slope=Pente
Slope.Syntax=[ <Ligne> ]
SlopeField=ChampVecteurs
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Nombre n> ]\n[ <f(x, y)>, <Nombre n>, <Longueur a> ]\n[ <f(x, y)>, <Nombre n>, <Longueur a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=CréerGraphique
SlowPlot.Syntax=[ <Fonction> ]\n[ <Fonction>, <Booléen Répéter> ]
Solutions.Syntax=[ <Équation> ]
Solutions.SyntaxCAS=[ <Équation> ]\n[ <Équation>, <Variable> ]\n[ <Liste Équations>, <Liste Variables> ]
Solve=Résoudre
Solve.Syntax=[ <Équation> ]
Solve.SyntaxCAS=[ <Équation en x> ]\n[ <Équation>, <Variable> ]\n[ <Liste Équations>, <Liste Variables> ]\n[ <Liste Équations paramétriques>, <Liste Variables> ]\n[ <Équation>, <Variable>, <Liste Hypothèses> ]
SolveCubic=RésoudreCubique
SolveCubic.SyntaxCAS=[ <Polynôme de degré 3> ]
SolveODE=RésolEquaDiff
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Point de f> ]\n[ <f'(x, y)>, <x initial>, <y initial>, <x final>, <Pas> ]\n[ <y'>, <x'>, <x initial>, <y initial>, <t final>, <Pas> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x initial>, <y initial>, <y'initial>, <x final>, <Pas> ]
SolveODE.SyntaxCAS=[ <Équation> ]\n[ <Équation>, <Point(s) de f> ]\n[ <Équation>, <Point(s) de f>, <Point(s) de f'> ]\n[ <Équation>, <Var Dépendante>, <Var Indépendante>, <Point(s) de f> ]\n[ <Équation>, <Var Dépendante>, <Var Indépendante>, <Point(s) de f>, <Point(s) de f'> ]
SolveQuartic=RésoudreQuartique
SolveQuartic.SyntaxCAS=[ <Polynôme de degré 4> ]
Sort=Trier
Sort.Syntax=[ <Liste> ]\n[ <Valeurs>, <Clés> ]
Spearman.Syntax=[ <Liste Points> ]\n[ <Liste Nombres>, <Liste Nombres> ]
Sphere=Sphère
Sphere.Syntax=[ <Point>, <Rayon> ]\n[ <Point>, <Point> ]
Spline.Syntax=[ <Liste de Points> ]\n[ <Liste de Points>, <Degré \u2265 3> ]\n[ <Liste de Points>, <Degré \u2265 3>, <Fonction de poids> ]
StartAnimation=DémarrerAnimation
StartAnimation.Syntax=[ ]\n[ <Booléen> ]\n[ <Curseur ou Point>, <Curseur ou Point>, ... ]\n[ <Curseur ou Point>, <Curseur ou Point>, ..., <Booléen> ]
StartLogging=LanceAcquis
StartLogging.Syntax=[ "<Capteur>", <Variable>, "<Capteur>", <Variable>, ... ]
StartRecord=DémarrerEnregistrement
StartRecord.Syntax=[ ]\n[ <booléen> ]
StemPlot=TigeFeuilles
StemPlot.Syntax=[ <Liste> ]\n[ <Liste>, <Ajustement -1|0|1> ]
StepGraph=DiagrammeEscaliers
StepGraph.Syntax=[ <Liste de points> ]\n[ <Liste de points>, <Booléen Reliés> ]\n[ <Liste d\u2019abscisses>, <Liste d'ordonnées> ]\n[ <Liste de points>, <Booléen Reliés>, <Style des points> ]\n[ <Liste d'abscisses>, <Liste d'ordonnées>, <Booléen Reliés> ]\n[ <Liste d'abscisses>, <Liste d'ordonnées>, <Booléen Reliés>, <Style des points> ]
StickGraph=DiagrammeBâtons
StickGraph.Syntax=[ <Liste de points> ]\n[ <Liste de points>, <Booléen Horizontal> ]\n[ <Liste d'abscisses>, <Liste d'ordonnées> ]\n[ <Liste d'abscisses>, <Liste d'ordonnées>, <Booléen Horizontal> ]
StopLogging=ArrêteAcquis
StopLogging.Syntax=[ ]
Stretch=Dilatation
Stretch.Syntax=[ <Objet>, <Vecteur> ]\n[ <Objet>, <Ligne>, <Rapport> ]
Substitute=Substituer
Substitute.SyntaxCAS=[ <Expression>, <Liste Substitution> ]\n[ <Expression>, <de>, <par> ]
Sum=Somme
Sum.Syntax=[ <Liste> ]\n[ <Liste>, <Nombre d'éléments> ]\n[ <Liste>, <Liste d'effectifs> ]\n[ <Expression>, <Variable>, <de>, <à> ]
Sum.SyntaxCAS=[ <Liste> ]\n[ <Expression>, <Variable>, <Valeur départ>, <Valeur fin> ]
SumSquaredErrors=SommeCarrésErreurs
SumSquaredErrors.Syntax=[ <Liste Points>, <Fonction> ]
SurdText=TexteMath
SurdText.Syntax=[ <Nombre> ]\n[ <Point> ]\n[ <Nombre>, <Liste> ]
Surface.Syntax=[ <Fonction>, <Angle> ]\n[ <Courbe>, <Angle>, <Ligne> ]\n[ <Expression>, <Expression>, <Expression>, <Variable 1>, <de>, <à>, <Variable 2>, <de>, <à> ]
TDistribution.Syntax=[ <Degré Liberté>, <Valeur Variable> ]\n[ <Degré Liberté>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Degré Liberté>, x, <Booléen Cumul> ]
TDistribution.SyntaxCAS=[ <Degré Liberté>, <Valeur Variable> ]
TMean2Estimate=TMoyenne2Estimée
TMean2Estimate.Syntax=[ <Liste Données 1>, <Liste Données 2>, <Valeur critique>, <Booléen sondé> ]\n[ <Moy Éch1>, <É-Type Éch1>, <Taille Éch1>, <Moy Éch2>, <É-Type Éch2>, <Taille Éch2>, <Moyenne attendue>, <Valeur critique>, <Booléen sondé> ]
TMeanEstimate=TMoyenneEstimée
TMeanEstimate.Syntax=[ <Liste Données Échantillon>, <Niveau> ]\n[ <Moyenne Échantillon>, <Écart-Type Échantillon>, <Taille Échantillon>, <Niveau> ]
TTest.Syntax=[ <Liste Données Échantillon>, <Moyenne attendue>, <Valeur critique> ]\n[ <Moyenne Échantillon>, <Écart-Type Échantillon>, <Taille Échantillon>, <Moyenne attendue>, <Valeur critique> ]
TTest2.Syntax=[ <Liste Données Échantillon 1>, <Liste Données Échantillon 2>, <Valeur critique>, <Booléen sondé> ]\n[ <Moy Éch1>, <É-Type Éch1>, <Taille Éch1>, <Moy Éch2>, <É-Type Éch2>, <Taille Éch2>, <Valeur critique>, <Booléen sondé> ]
TTestPaired=TTestApparié
TTestPaired.Syntax=[ <Liste Données Échantillon 1>, <Liste Données Échantillon 2>, <Valeur critique> ]
TableText=Tableau
TableText.Syntax=[ <Liste>, <Liste>, ... ]\n[ <Liste>, <Liste>, ..., <Alignement> ]
Take=Extraite
Take.Syntax=[ <Liste>, <Début> ]\n[ <Texte>, <Début> ]\n[ <Liste>, <Début>, <Fin> ]\n[ <Texte>, <Début>, <Fin> ]
Take.SyntaxCAS=[ <Liste>, <Position Début> ]\n[ <Liste>, <Position Début>, <Position Fin> ]
Tangent=Tangente
Tangent.Syntax=[ <Point>, <Conique> ]\n[ <Point>, <Fonction> ]\n[ <Point>, <Courbe> ]\n[ <Abscisse>, <Fonction> ]\n[ <Ligne>, <Conique> ]\n[ <Conique>, <Conique> ]
Tangent.SyntaxCAS=[ <Nombre>, <Fonction> ]\n[ <Point>, <Objet> ]
TaylorSeries=PolynômeTaylor
TaylorSeries.Syntax=[ <Fonction>, <Valeur x>, <Ordre> ]
TaylorSeries.SyntaxCAS=[ <Expression>, <Valeur x>, <Ordre> ]\n[ <Expression>, <Variable>, <Valeur x>, <Ordre> ]
Tetrahedron=Tétraèdre
Tetrahedron.Syntax=[ <Triangle Equilatéral> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Text=Texte
Text.Syntax=[ <Objet> ]\n[ <Objet>, <Booléen pour Substitution Variables> ]\n[ <Objet>, <Point> ]\n[ <Objet>, <Point>, <Booléen pour Substitution Variables> ]\n[ <Objet>, <Point>, <Booléen pour Substitution Variables>, <Booléen pour formule LaTeX> ]
TextToUnicode=TexteEnUnicode
TextToUnicode.Syntax=[ <Texte> ]
Textfield=ChampTexte
Textfield.Syntax=[ ]\n[ <Objet lié> ]
TiedRank=PositionMoy
TiedRank.Syntax=[ <Liste> ]
ToBase=EnBase
ToBase.Syntax=[ <Nombre>, <Base> ]
ToComplex=EnComplexe
ToComplex.Syntax=[ <Vecteur> ]
ToExponential=FormeExponentielle
ToExponential.SyntaxCAS=[ <Nombre complexe> ]
ToPoint=EnPoint
ToPoint.Syntax=[ <Nombre complexe> ]
ToPolar=EnPolaires
ToPolar.Syntax=[ <Nombre complexe> ]\n[ <Vecteur> ]
ToolImage=IcôneOutil
ToolImage.Syntax=[ <Numéro> ]\n[ <Numéro>, <Point> ]\n[ <Numéro>, <Point>, <Point> ]
Top=EnHaut
Top.Syntax=[ <Quadrique> ]
Translate=Translation
Translate.Syntax=[ <Objet>, <Vecteur> ]\n[ <Vecteur>, <Origine> ]
Transpose=Transposer
Transpose.Syntax=[ <Matrice> ]
TrapezoidalSum=SommeTrapèzes
TrapezoidalSum.Syntax=[ <Fonction>, <x min>, <x max>, <Nombre Trapèzes> ]
TravelingSalesman=ReprésentantCommerce
TravelingSalesman.Syntax=[ <Liste Points> ]
TriangleCenter=TriangleCentre
TriangleCenter.Syntax=[ <Point>, <Point>, <Point>, <Nombre> ]
TriangleCurve=TriangleCourbe
TriangleCurve.Syntax=[ <Point>, <Point>, <Point>, <Équation> ]
Triangular=Triangulaire
Triangular.Syntax=[ <Borne inférieure>, <Borne supérieure>, <Mode>, <Valeur Variable> ]\n[ <Borne inférieure>, <Borne supérieure>, <Mode>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Borne inférieure>, <Borne supérieure>, <Mode>, x, <Booléen Cumul> ]
TrigCombine=TrigoCombiner
TrigCombine.Syntax=[ <Expression> ]\n[ <Expression>, <Fonction cible> ]
TrigExpand=TrigoDévelopper
TrigExpand.Syntax=[ <Expression> ]\n[ <Expression>, <Fonction cible> ]
TrigExpand.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Fonction cible> ]\n[ <Expression>, <Fonction cible>, <Variable cible> ]\n[ <Expression>, <Fonction cible>, <Variable cible>, <Variable cible> ]
TrigSimplify=TrigoSimplifier
Trilinear=Trilinéaire
Trilinear.Syntax=[ <Point>, <Point>, <Point>, <Nombre>, <Nombre>, <Nombre> ]
TurningPoint=PointInflexion
TurningPoint.Syntax=[ <Polynôme> ]
Turtle=Tortue
Turtle.Syntax=[ ]
TurtleBack=TortueRecule
TurtleBack.Syntax=[ <Tortue>, <Distance> ]
TurtleDown=TortueBC
TurtleDown.Syntax=[ <Tortue> ]
TurtleForward=TortueAvance
TurtleForward.Syntax=[ <Tortue>, <Distance> ]
TurtleLeft=TortueAGauche
TurtleLeft.Syntax=[ <Tortue>, <Angle> ]
TurtleRight=TortueADroite
TurtleRight.Syntax=[ <Tortue>, <Angle> ]
TurtleUp=TortueLC
TurtleUp.Syntax=[ <Tortue> ]
UnicodeToLetter=UnicodeEnLettre
UnicodeToLetter.Syntax=[ <Entier> ]
UnicodeToText=UnicodeEnTexte
UnicodeToText.Syntax=[ <Liste Entiers> ]
Uniform=Uniforme
Uniform.Syntax=[ <Borne inférieure>, <Borne supérieure>, <Valeur Variable> ]\n[ <Borne inférieure>, <Borne supérieure>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Borne inférieure>, <Borne supérieure>, x, <Booléen Cumul> ]
Union.Syntax=[ <Liste>, <Liste> ]\n[ <Polygone>, <Polygone> ]
Unique.Syntax=[ <Liste> ]
UnitOrthogonalVector=VecteurUnitaireOrthogonal
UnitOrthogonalVector.Syntax=[ <Droite> ]\n[ <Segment> ]\n[ <Vecteur> ]
UnitOrthogonalVector.Syntax3D=[ <Droite> ]\n[ <Segment> ]\n[ <Vecteur> ]\n[ <Plan> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vecteur> ]
UnitVector=VecteurUnitaire
UnitVector.Syntax=[ <Objet> ]
UnitVector.SyntaxCAS=[ <Vecteur> ]
UpdateConstruction=ActualiserConstruction
UpdateConstruction.Syntax=[ ]\n[ <Nombre de fois> ]
UpperSum=SommeSupérieure
UpperSum.Syntax=[ <Fonction>, <x min>, <x max>, <Nombre Rectangles> ]
Variance.Syntax=[ <Liste de données brutes> ]\n[ <Liste de nombres>, <Liste d'effectifs> ]
Variance.SyntaxCAS=[ <Liste Nombres> ]
Vector=Vecteur
Vector.Syntax=[ <Point> ]\n[ <Origine>, <Extrémité> ]
Vertex=Sommet
Vertex.Syntax=[ <Conique> ]\n[ <Inéquation> ]\n[ <Polygone> ]\n[ <Polygone>, <Indice> ]\n[ <Segment>, <Indice> ]
VerticalText=TexteVertical
VerticalText.Syntax=[ <Texte> ]\n[ <Texte>, <Point> ]
Volume.Syntax=[ <Solide> ]
Voronoi.Syntax=[ <Liste Points> ]
Weibull.Syntax=[ <Forme>, <Échelle>, <Valeur Variable> ]\n[ <Forme>, <Échelle>, <Valeur Variable>, <Booléen Cumul> ]\n[ <Forme>, <Échelle>, x, <Booléen Cumul> ]
Weibull.SyntaxCAS=[ <Forme>, <Échelle>, <Valeur Variable> ]
ZMean2Estimate=ZEstimationMoyenne2
ZMean2Estimate.Syntax=[ <Liste Données Éch1>, <Liste Données Éch2>, <\u03c31>, <\u03c32>, <Niveau> ]\n[ <Moy Éch1>, <\u03c31>, <Taille Éch1>, <Moy Éch2>, <\u03c32>, <Taille Éch2>, <Niveau> ]
ZMean2Test=ZTestMoyenne2
ZMean2Test.Syntax=[ <Liste Données Éch1>, <\u03c31>, <Liste Données Éch2>, <\u03c32>, <Queue> ]\n[ <Moy Éch1>, <\u03c31>, <Taille Éch1>, <Moy Éch2>, <\u03c32>, <Taille Éch2>, <Queue> ]
ZMeanEstimate=ZEstimationMoyenne
ZMeanEstimate.Syntax=[ <Liste Données Échantillon>, <\u03c3>, <Niveau> ]\n[ <Moyenne Échantillon>, <\u03c3>, <Taille Échantillon>, <Niveau> ]
ZMeanTest=ZTestMoyenne
ZMeanTest.Syntax=[ <Liste Données Échantillon>, <\u03c3>, <Hypothèse Moyenne>, <Queue> ]\n[ <Moyenne Échantillon>, <\u03c3>, <Taille Échantillon>, <Hypothèse Moyenne>, <Queue> ]
ZProportion2Estimate=ZEstimationProportion2
ZProportion2Estimate.Syntax=[ <Proportion Éch1>, <Taille Éch1>, <Proportion Éch2>, <Taille Éch2>, <Niveau> ]
ZProportion2Test=ZTestProportion2
ZProportion2Test.Syntax=[ <Proportion Éch1>, <Taille Éch1>, <Proportion Éch2>, <Taille Éch2>, <Queue> ]
ZProportionEstimate=ZEstimationProportion
ZProportionEstimate.Syntax=[ <Proportion Échantillon>, <Taille Échantillon>, <Niveau> ]
ZProportionTest=ZTestProportion
ZProportionTest.Syntax=[ <Proportion Échantillon>, <Taille Échantillon>, <Hypothèse Proportion>, <Queue> ]
Zip=Compactée
Zip.Syntax=[ <Expression>, <Var1>, <Liste1>, <Var2>, <Liste2>, ... ]
Zipf.Syntax=[ <Nombre d'éléments>, <Exposant> ]\n[ <Nombre d'éléments>, <Exposant>, <Booléen Cumul> ]\n[ <Nombre d'éléments>, <Exposant>, <Valeur Variable>, <Booléen Cumul> ]
Zipf.SyntaxCAS=[ <Nombre d'éléments>, <Exposant>, x, <Booléen Cumul> ]
ZoomIn=Agrandir
ZoomIn.Syntax=[ <Facteur> ]\n[ <Facteur>, <Centre> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]
ZoomOut=Réduire
ZoomOut.Syntax=[ <Facteur de réduction> ]\n[ <Facteur de réduction>, <Centre> ]
mad=dam
mean=moy
mean.Syntax=[ <Liste de données brutes> ]\n[ <Liste de nombres>, <Liste d'effectifs> ]
mean.SyntaxCAS=[ <Liste Nombres> ]
nCr=Cbin
nCr.Syntax=[ <Nombre n>, <Nombre p> ]
stdev=eType
stdev.Syntax=[ <Liste de données brutes> ]\n[ <Liste des valeurs>, <Liste des effectifs> ]
stdevp=eTypeP
stdevp.Syntax=[ <Liste de données brutes> ]\n[ <Liste des valeurs>, <Liste des effectifs> ]
stdevp.SyntaxCAS=[ <Liste de données brutes> ]