# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <\u30ea\u30b9\u30c8>, <\u30ea\u30b9\u30c8>, ... ]
AffineRatio.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9> ]
Angle.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]\n[ <\u30d9\u30af\u30c8\u30eb>, <\u30d9\u30af\u30c8\u30eb> ]\n[ <\u76f4\u7dda>, <\u76f4\u7dda> ]\n[ <\u70b9>, <\u9802\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u9802\u70b9>, <\u89d2\u5ea6> ]
Angle.Syntax3D=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]\n[ <\u30d9\u30af\u30c8\u30eb>, <\u30d9\u30af\u30c8\u30eb> ]\n[ <\u76f4\u7dda>, <\u76f4\u7dda> ]\n[ <\u76f4\u7dda>, <\u5e73\u9762> ]\n[ <\u5e73\u9762>, <\u5e73\u9762> ]\n[ <\u70b9>, <\u9802\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u9802\u70b9>, <\u89d2\u5ea6> ]\n[ <\u70b9>, <\u70b9>, <\u70b9>, <\u5411\u304d> ]
AngularBisector.Syntax=[ <\u76f4\u7dda>, <\u76f4\u7dda> ]\n[ <\u70b9>, <\u70b9>, <\u70b9> ]
Append.Syntax=[ <\u30ea\u30b9\u30c8>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30ea\u30b9\u30c8> ]
ApplyMatrix.Syntax=[ <\u884c\u5217>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
Arc.Syntax=[ <\u5186>, <\u70b9>, <\u70b9> ]\n[ <\u6955\u5186>, <\u70b9>, <\u70b9> ]\n[ <\u5186>, <\u5a92\u4ecb\u5909\u6570\u306e\u5024>, <\u5a92\u4ecb\u5909\u6570\u306e\u5024> ]\n[ <\u6955\u5186>, <\u5a92\u4ecb\u5909\u6570\u306e\u5024>, <\u5a92\u4ecb\u5909\u6570\u306e\u5024> ]
AreCollinear.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9> ]
AreConcurrent.Syntax=[ <\u76f4\u7dda>, <\u76f4\u7dda>, <\u76f4\u7dda> ]
AreConcyclic.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9>, <\u70b9> ]
AreCongruent.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
AreEqual.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
AreParallel.Syntax=[ <\u76f4\u7dda>, <\u76f4\u7dda> ]
ArePerpendicular.Syntax=[ <\u76f4\u7dda>, <\u76f4\u7dda> ]
Area.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]\n[ <\u591a\u89d2\u5f62> ]\n[ <\u70b9>, ..., <\u70b9> ]
Assume.SyntaxCAS=[ <\u6761\u4ef6>, <\u5f0f> ]
Asymptote.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]\n[ <\u95a2\u6570> ]\n[ <\u9670\u95a2\u6570\u66f2\u7dda> ]
AttachCopyToView.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30d3\u30e5\u30fc 0|1|2> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30d3\u30e5\u30fc 0|1|2>, <\u70b9 1>, <\u70b9 2>, <Screen Point 1>, <Screen Point 2> ]
Axes.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
Axes.Syntax3D=[ <\uff12\u6b21\u66f2\u7dda> ]\n[ <\uff12\u6b21\u66f2\u9762> ]
BarChart.Syntax=[ <\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]\n[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u68d2\u306e\u5e45>, <\u7e26\u65b9\u5411\u500d\u7387 (\u30aa\u30d7\u30b7\u30e7\u30f3)> ]\n[ <\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8>, <\u68d2\u306e\u5e45> ]\n[ <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024>, <\u9ad8\u3055\u306e\u30ea\u30b9\u30c8> ]\n[ <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024>, <\u5f0f>, <\u5909\u6570>, <\u59cb\u70b9>, <\u7d42\u70b9> ]\n[ <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024>, <\u5f0f>, <\u5909\u6570>, <\u59cb\u70b9>, <\u7d42\u70b9>, <\u9593\u9694> ]
BarCode=\u30d0\u30fc\u30b3\u30fc\u30c9
BarCode.Syntax=[ ]\n[ <\u753b\u50cf> ]\n[ <\u30c6\u30ad\u30b9\u30c8\u304b\u6570\u5024>, "<\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 (\u30aa\u30d7\u30b7\u30e7\u30f3)>", "<\u30a8\u30e9\u30fc\u8a02\u6b63 (\u30aa\u30d7\u30b7\u30e7\u30f3)>", <\u5e45 (\u30aa\u30d7\u30b7\u30e7\u30f3)>, <\u9ad8\u3055 (\u30aa\u30d7\u30b7\u30e7\u30f3)> ]
Barycenter.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <List of Weights> ]
Bernoulli.Syntax=[ <\u78ba\u7387>, <Boolean Cumulative> ]
Binomial.Syntax=[ <\u6570\u5024>, <\u6570\u5024> ]
BinomialDist.Syntax=[ <\u8a66\u884c\u56de\u6570>, <Probability of Success> ]\n[ <\u8a66\u884c\u56de\u6570>, <Probability of Success>, <Boolean Cumulative> ]\n[ <\u8a66\u884c\u56de\u6570>, <Probability of Success>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]
BinomialDist.SyntaxCAS=[ <\u8a66\u884c\u56de\u6570>, <\u6210\u529f\u306e\u78ba\u7387>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]
Bottom.Syntax=[ <\uff12\u6b21\u66f2\u9762> ]
BoxPlot.Syntax=[ <yOffset>, <y\u30b9\u30b1\u30fc\u30eb>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <yOffset>, <y\u30b9\u30b1\u30fc\u30eb>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <Boolean Outliers> ]\n[ <yOffset>, <y\u30b9\u30b1\u30fc\u30eb>, <\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8>, <Boolean Outliers> ]\n[ <yOffset>, <y\u30b9\u30b1\u30fc\u30eb>, <\u958b\u59cb\u5024>, <Q1>, <\u4e2d\u592e\u5024>, <Q3>, <\u7d42\u4e86\u5024> ]
Button.Syntax=[ ]\n[ <\u898b\u51fa\u3057> ]
CFactor.SyntaxCAS=[ <\u5f0f> ]\n[ <\u5f0f>, <\u5909\u6570> ]
CIFactor.SyntaxCAS=[ <\u5f0f> ]\n[ <\u5f0f>, <\u5909\u6570> ]
CSolutions.SyntaxCAS=[ <\u65b9\u7a0b\u5f0f> ]\n[ <\u65b9\u7a0b\u5f0f>, <\u5909\u6570> ]\n[ <\u65b9\u7a0b\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u5909\u6570\u306e\u30ea\u30b9\u30c8> ]
CSolve.SyntaxCAS=[ <\u65b9\u7a0b\u5f0f> ]\n[ <\u65b9\u7a0b\u5f0f>, <\u5909\u6570> ]\n[ <\u65b9\u7a0b\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u5909\u6570\u306e\u30ea\u30b9\u30c8> ]
Cauchy.Syntax=[ <\u4e2d\u592e\u5024>, <\u30b9\u30b1\u30fc\u30eb>, <\u5909\u6570\u5024> ]\n[ <\u4e2d\u592e\u5024>, <\u30b9\u30b1\u30fc\u30eb>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <\u4e2d\u592e\u5024>, <\u30b9\u30b1\u30fc\u30eb>, x, <Boolean Cumulative> ]
Cauchy.SyntaxCAS=[ <\u4e2d\u592e\u5024>, <\u30b9\u30b1\u30fc\u30eb>, <\u5909\u6570\u5024> ]
Cell.Syntax=[ <\u5217>, <\u884c> ]
CellRange.Syntax=[ <\u958b\u59cb\u30bb\u30eb>, <\u7d42\u4e86\u30bb\u30eb> ]
Center.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
Center.Syntax3D=[ <\uff12\u6b21\u66f2\u7dda> ]\n[ <\uff12\u6b21\u66f2\u9762> ]
CenterView.Syntax=[ <\u4e2d\u5fc3\u70b9> ]
Centroid.Syntax=[ <\u591a\u89d2\u5f62> ]
Checkbox.Syntax=[ ]\n[ <\u898b\u51fa\u3057> ]\n[ <\u30ea\u30b9\u30c8> ]\n[ <\u898b\u51fa\u3057>, <\u30ea\u30b9\u30c8> ]
ChiSquared.Syntax=[ <\u81ea\u7531\u5ea6>, <\u5909\u6570\u5024> ]\n[ <\u81ea\u7531\u5ea6>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <\u81ea\u7531\u5ea6>, x, <Boolean Cumulative> ]
ChiSquared.SyntaxCAS=[ <\u81ea\u7531\u5ea6>, <\u5909\u6570> ]
ChiSquaredTest.Syntax=[ <\u884c\u5217> ]\n[ <\u30ea\u30b9\u30c8>, <\u30ea\u30b9\u30c8> ]\n[ <\u884c\u5217>, <\u884c\u5217> ]
Circle.Syntax=[ <\u70b9>, <\u534a\u5f84\u306e\u6570\u5024> ]\n[ <\u70b9>, <\u7dda\u5206> ]\n[ <\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u70b9>, <\u70b9> ]
Circle.Syntax3D=[ <\u70b9>, <Radius Number> ]\n[ <\u70b9>, <\u7dda\u5206> ]\n[ <\u70b9>, <\u70b9> ]\n[ <\u76f4\u7dda>, <\u70b9> ]\n[ <\u70b9>, <\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u534a\u5f84>, <\u5411\u304d> ]\n[ <\u70b9>, <\u70b9>, <\u5411\u304d> ]
CircleArc.Syntax=[ <\u4e2d\u5fc3>, <\u70b9>, <\u70b9> ]
CircleSector.Syntax=[ <\u4e2d\u5fc3>, <\u70b9>, <\u70b9> ]
CircumcircleArc.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9> ]
CircumcircleSector.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9> ]
Circumference.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
Classes.Syntax=[ <\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u968e\u7d1a\u306e\u6570> ]\n[ <\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u958b\u59cb>, <\u968e\u7d1a\u306e\u5e45> ]
ClosestPoint.Syntax=[ <\u30d1\u30b9>, <\u70b9> ]\n[ <\u76f4\u7dda>, <\u76f4\u7dda> ]
ClosestPointRegion.Syntax=[ <\u9818\u57df>, <\u70b9> ]
Coefficients.Syntax=[ <\u591a\u9805\u5f0f> ]\n[ <\uff12\u6b21\u66f2\u7dda> ]
Coefficients.SyntaxCAS=[ <\u591a\u9805\u5f0f> ]\n[ <\u591a\u9805\u5f0f>, <\u5909\u6570> ]
Column.Syntax=[ <\u8868\u8a08\u7b97\u306e\u30bb\u30eb> ]
ColumnName.Syntax=[ <\u8868\u8a08\u7b97\u306e\u30bb\u30eb> ]
CommonDenominator.Syntax=[ <\u5f0f>, <\u5f0f> ]
CompetitionRank.Syntax=[ <\u30ea\u30b9\u30c8> ]
CompleteSquare.Syntax=[ <\uff12\u6b21\u95a2\u6570> ]
ComplexRoot.Syntax=[ <\u591a\u9805\u5f0f> ]
Cone.Syntax=[ <\u5186>, <\u9ad8\u3055> ]\n[ <\u70b9>, <\u70b9>, <\u534a\u5f84> ]\n[ <\u70b9>, <\u30d9\u30af\u30c8\u30eb>, <\u89d2\u5ea6> ]
Conic.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9>, <\u70b9>, <\u70b9> ]\n[ <\u6570\u5024>, <\u6570\u5024>, <\u6570\u5024>, <\u6570\u5024>, <\u6570\u5024>, <\u6570\u5024> ]
ConstructionStep.Syntax=[ ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
ContingencyTable.Syntax=[ <\u30c6\u30ad\u30b9\u30c8\u306e\u30ea\u30b9\u30c8>, <\u30c6\u30ad\u30b9\u30c8\u306e\u30ea\u30b9\u30c8> ]\n[ <\u30c6\u30ad\u30b9\u30c8\u306e\u30ea\u30b9\u30c8>, <\u30c6\u30ad\u30b9\u30c8\u306e\u30ea\u30b9\u30c8>, <\u30aa\u30d7\u30b7\u30e7\u30f3> ]\n[ <List of Row Values>, <List of Column Values>, <\u5ea6\u6570\u8868> ]\n[ <List of Row Values>, <List of Column Values>, <\u5ea6\u6570\u8868>, <\u30aa\u30d7\u30b7\u30e7\u30f3> ]
ContinuedFraction.Syntax=[ <\u6570\u5024> ]\n[ <\u6570\u5024>, <\u30ec\u30d9\u30eb> ]\n[ <\u6570\u5024>, <\u30ec\u30d9\u30eb>, <\u7c21\u7565\u5316 true | false> ]
ConvexHull.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
CopyFreeObject.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
Corner.Syntax=[ <\u9685\u306e\u756a\u53f7> ]\n[ <\u753b\u50cf>, <\u9685\u306e\u756a\u53f7> ]\n[ <\u30c6\u30ad\u30b9\u30c8>, <\u9685\u306e\u756a\u53f7> ]\n[ <\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30d3\u30e5\u30fc>, <\u9685\u306e\u756a\u53f7> ]
CountIf.Syntax=[ <\u6761\u4ef6>, <\u30ea\u30b9\u30c8> ]\n[ <\u6761\u4ef6>, <\u5909\u6570>, <\u30ea\u30b9\u30c8> ]
Covariance.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
Cross.Syntax=[ <\u30d9\u30af\u30c8\u30eb>, <\u30d9\u30af\u30c8\u30eb> ]
CrossRatio.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9>, <\u70b9> ]
Cube.Syntax=[ <\u6b63\u65b9\u5f62> ]\n[ <\u70b9>, <\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u70b9>, <\u5411\u304d> ]
Cubic.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9>, <\u70b9> ]
Curvature.Syntax=[ <\u70b9>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
CurvatureVector.Syntax=[ <\u70b9>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
CurveCartesian.Syntax=[ <\u5f0f>, <\u5f0f>, <\u5a92\u4ecb\u5909\u6570>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]
CurveCartesian.Syntax3D=[ <\u5f0f>, <\u5f0f>, <\u5a92\u4ecb\u5909\u6570>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]\n[ <\u5f0f>, <\u5f0f>, <\u5f0f>, <\u5a92\u4ecb\u5909\u6570>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]
Cylinder.Syntax=[ <\u5186>, <\u9ad8\u3055> ]\n[ <\u70b9>, <\u70b9>, <\u534a\u5f84> ]
DataFunction.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
Defined.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
Degree.Syntax=[ <\u591a\u9805\u5f0f> ]
Degree.SyntaxCAS=[ <\u591a\u9805\u5f0f> ]\n[ <\u591a\u9805\u5f0f>, <\u5909\u6570> ]
DelauneyTriangulation.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
Delete.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
Denominator.Syntax=[ <\u6570\u5024> ]\n[ <\u95a2\u6570> ]
Denominator.SyntaxCAS=[ <\u5f0f> ]
Derivative.Syntax=[ <\u95a2\u6570> ]\n[ <\u66f2\u7dda> ]\n[ <\u95a2\u6570>, <\u6570\u5024> ]\n[ <\u95a2\u6570>, <\u5909\u6570> ]\n[ <\u66f2\u7dda>, <\u6570\u5024> ]\n[ <\u95a2\u6570>, <\u5909\u6570>, <\u6570\u5024> ]
Derivative.SyntaxCAS=[ <\u5f0f> ]\n[ <\u5f0f>, <\u5909\u6570> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u6570\u5024> ]
Determinant.Syntax=[ <\u884c\u5217> ]
Diameter.Syntax=[ <\u30d9\u30af\u30c8\u30eb>, <\uff12\u6b21\u66f2\u7dda> ]\n[ <\u76f4\u7dda>, <\uff12\u6b21\u66f2\u7dda> ]
Difference.Syntax=[ <\u591a\u89d2\u5f62>, <\u591a\u89d2\u5f62> ]
Dilate.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u62e1\u5927\u7387> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u62e1\u5927\u7387>, <\u62e1\u5927\u306e\u4e2d\u5fc3\u70b9> ]
Dimension.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
Direction.Syntax=[ <\u76f4\u7dda> ]
Directrix.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
Distance.Syntax=[ <\u70b9>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]\n[ <\u76f4\u7dda>, <\u76f4\u7dda> ]\n[ <\u5e73\u9762>, <\u5e73\u9762> ]
Div.Syntax=[ <\u5272\u3089\u308c\u308b\u6570\u5024>, <\u5272\u308b\u6570\u5024> ]\n[ <\u5272\u3089\u308c\u308b\u591a\u9805\u5f0f>, <\u5272\u308b\u591a\u9805\u5f0f> ]
Division.Syntax=[ <\u5272\u3089\u308c\u308b\u6570\u5024>, <\u5272\u308b\u6570\u5024> ]\n[ <\u5272\u3089\u308c\u308b\u591a\u9805\u5f0f>, <\u5272\u308b\u591a\u9805\u5f0f> ]
Divisors.Syntax=[ <\u6570\u5024> ]
DivisorsList.Syntax=[ <\u6570\u5024> ]
DivisorsSum.Syntax=[ <\u6570\u5024> ]
Dodecahedron.Syntax=[ <\u6b63\u4e94\u89d2\u5f62> ]\n[ <\u70b9>, <\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u70b9>, <\u5411\u304d> ]
Dot.Syntax=[ <\u30d9\u30af\u30c8\u30eb>, <\u30d9\u30af\u30c8\u30eb> ]
DotPlot.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u7a4d\u307f\u91cd\u306d true | false (\u30aa\u30d7\u30b7\u30e7\u30f3)>, <\u500d\u7387 (\u30aa\u30d7\u30b7\u30e7\u30f3)> ]
DynamicCoordinates.Syntax=[ <\u70b9>, <x\u5ea7\u6a19>, <y\u5ea7\u6a19> ]\n[ <\u70b9>, <x\u5ea7\u6a19>, <y\u5ea7\u6a19>, <z\u5ea7\u6a19> ]
Eccentricity.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
Eigenvalues.SyntaxCAS=[ <\u884c\u5217> ]
Eigenvectors.SyntaxCAS=[ <\u884c\u5217> ]
Element.Syntax=[ <\u30ea\u30b9\u30c8>, <\u8981\u7d20\u306e\u4f4d\u7f6e> ]\n[ <\u884c\u5217>, <\u884c>, <\u5217> ]\n[ <\u30ea\u30b9\u30c8>, <\u884c\u756a\u53f7>, <\u5217\u756a\u53f7> ]
Element.SyntaxCAS=[ <\u30ea\u30b9\u30c8>, <\u8981\u7d20\u306e\u4f4d\u7f6e> ]\n[ <\u884c\u5217>, <\u884c>, <\u5217> ]
Eliminate.Syntax=[ <\u591a\u9805\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u5909\u6570\u306e\u30ea\u30b9\u30c8> ]
Ellipse.Syntax=[ <\u7126\u70b9>, <\u7126\u70b9>, <\u9577\u8ef8\u306e\u9577\u3055> ]\n[ <\u7126\u70b9>, <\u7126\u70b9>, <\u7dda\u5206> ]\n[ <\u7126\u70b9>, <\u7126\u70b9>, <\u70b9> ]
Ends.Syntax=[ <\uff12\u6b21\u66f2\u9762> ]
Envelope.Syntax=[ <\u30d1\u30b9>, <\u70b9> ]
Erlang.Syntax=[ <\u30b7\u30a7\u30a4\u30d7>, <\u30ec\u30fc\u30c8>, <\u5909\u6570\u5024> ]\n[ <\u30b7\u30a7\u30a4\u30d7>, <\u30ec\u30fc\u30c8>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <\u30b7\u30a7\u30a4\u30d7>, <\u30ec\u30fc\u30c8>, x, <Boolean Cumulative> ]
Evaluate=\u5024\u3092\u6c42\u3081\u308b\u30fb\u8a55\u4fa1\u3059\u308b
Excentricity.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
Execute.Syntax=[ <\u30c6\u30ad\u30b9\u30c8\u306e\u30ea\u30b9\u30c8> ]\n[ <\u30c6\u30ad\u30b9\u30c8\u306e\u30ea\u30b9\u30c8>, <\u5f15\u6570>, <\u5f15\u6570>, ... ]
Expand.Syntax=[ <\u5f0f> ]
Exponential.Syntax=[ <\u03bb>, <\u5909\u6570\u5024> ]\n[ <\u03bb>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <\u03bb>, x, <Boolean Cumulative> ]
Exponential.SyntaxCAS=[ <\u03bb>, <\u5909\u6570\u5024> ]
ExportImage.Syntax=[ <\u30d7\u30ed\u30d1\u30c6\u30a3>, <\u5024>, <\u30d7\u30ed\u30d1\u30c6\u30a3>, <\u5024>, ... ]
Extremum.Syntax=[ <\u591a\u9805\u5f0f> ]\n[ <\u95a2\u6570>, <x\u958b\u59cb\u5024>, <x\u7d42\u4e86\u5024> ]
FDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <\u5909\u6570\u5024> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, x, <Boolean Cumulative> ]
FDistribution.SyntaxCAS=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <\u5909\u6570\u5024> ]
Factor.Syntax=[ <\u591a\u9805\u5f0f> ]
Factor.SyntaxCAS=[ <\u6570\u5024> ]\n[ <\u591a\u9805\u5f0f> ]\n[ <\u5f0f>, <\u5909\u6570> ]
Factors.Syntax=[ <\u591a\u9805\u5f0f> ]\n[ <\u6570\u5024> ]
FillCells.Syntax=[ <\u30bb\u30eb\u7bc4\u56f2>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]\n[ <\u30bb\u30eb>, <\u30ea\u30b9\u30c8> ]\n[ <\u30bb\u30eb>, <\u884c\u5217> ]
FillColumn.Syntax=[ <\u5217>, <\u30ea\u30b9\u30c8> ]
FillRow.Syntax=[ <\u884c>, <\u30ea\u30b9\u30c8> ]
First.Syntax=[ <\u30ea\u30b9\u30c8> ]\n[ <\u30c6\u30ad\u30b9\u30c8> ]\n[ <\u30ea\u30b9\u30c8>, <\u8981\u7d20\u306e\u6570> ]\n[ <\u30c6\u30ad\u30b9\u30c8>, <\u8981\u7d20\u6570> ]\n[ <\u8ecc\u8de1>, <\u8981\u7d20\u6570> ]
First.SyntaxCAS=[ <\u30ea\u30b9\u30c8> ]\n[ <\u30ea\u30b9\u30c8>, <\u8981\u7d20\u6570> ]
FirstAxis.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
FirstAxisLength.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
Fit.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <\u95a2\u6570\u306e\u30ea\u30b9\u30c8> ]\n[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <\u95a2\u6570> ]
FitExp.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
FitGrowth.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
FitImplicit.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <\u9806\u5e8f> ]
FitLineX.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
FitLineY.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
FitLog.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
FitLogistic.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
FitPoly.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <\u591a\u9805\u5f0f\u306e\u6b21\u6570> ]\n[ <\u30d5\u30ea\u30fc\u30cf\u30f3\u30c9\u3067\u63cf\u3044\u305f\u95a2\u6570>, <\u591a\u9805\u5f0f\u306e\u6b21\u6570l> ]
FitPow.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
FitSin.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
Flatten.Syntax=[ <\u30ea\u30b9\u30c8> ]
Focus.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
FractionText.Syntax=[ <\u6570\u5024> ]\n[ <\u70b9> ]
Frequency.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <Boolean Cumulative>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <List of Class Boundaries>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u30c6\u30ad\u30b9\u30c8\u306e\u30ea\u30b9\u30c8>, <\u30c6\u30ad\u30b9\u30c8\u306e\u30ea\u30b9\u30c8> ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <List of Class Boundaries>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <Use Density>, <Density Scale Factor (optional)> ]
FrequencyPolygon.Syntax=[ <List of Class Boundaries>, <\u9ad8\u3055\u306e\u30ea\u30b9\u30c8> ]\n[ <List of Class Boundaries>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <Boolean Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <Boolean Use Density>, <Density Scale Factor (optional)> ]
FrequencyTable.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u500d\u7387 (\u30aa\u30d7\u30b7\u30e7\u30f3)> ]\n[ <\u7d2f\u7a4d\u983b\u5ea6 true | false>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u533a\u9593\u306e\u30ea\u30b9\u30c8>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u7d2f\u7a4d\u983b\u5ea6 true | false>, <\u533a\u9593\u306e\u30ea\u30b9\u30c8>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u533a\u9593\u306e\u30ea\u30b9\u30c8>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u5bc6\u5ea6 true | false>, <\u5bc6\u5ea6\u306e\u500d\u7387 (\u30aa\u30d7\u30b7\u30e7\u30f3)> ]\n[ <\u7d2f\u7a4d\u983b\u5ea6 true | false>, <\u533a\u9593\u306e\u30ea\u30b9\u30c8>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u5bc6\u5ea6 true | false>, <\u5bc6\u5ea6\u306e\u500d\u7387 (\u30aa\u30d7\u30b7\u30e7\u30f3)> ]
FromBase.Syntax=[ "<\u6570\u5024\u306e\u30c6\u30ad\u30b9\u30c8>", <\u9032\u6cd5\u306e\u5e95> ]
Function.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]\n[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024> ]
Function.Syntax3D=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]\n[ <\u95a2\u6570>, <x\u958b\u59cb\u5024>, <x\u7d42\u4e86\u5024> ]\n[ <\u5f0f>, <\u5a92\u4ecb\u5909\u65701>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024>, <\u5a92\u4ecb\u5909\u65702>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]
Function.SyntaxCAS=[ <\u95a2\u6570>, <x\u958b\u59cb\u5024>, <x\u7d42\u4e86\u5024> ]
FutureValue.Syntax=[ <\u6bd4\u7387>, <\u671f\u9593\u306e\u6570>, <\u652f\u6255>, <\u73fe\u5728\u306e\u5024 (optional)>, <\u578b(optional)> ]
GCD.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024>, <\u6570\u5024> ]
GCD.SyntaxCAS=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]\n[ <\u591a\u9805\u5f0f\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024>, <\u6570\u5024> ]\n[ <\u591a\u9805\u5f0f>, <\u591a\u9805\u5f0f> ]
Gamma.Syntax=[ <Alpha>, <Beta>, <\u5909\u6570\u5024> ]\n[ <Alpha>, <Beta>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <Alpha>, <Beta>, x, <Boolean Cumulative> ]
Gamma.SyntaxCAS=[ <\u03b1>, <\u03b2>, <\u5909\u6570\u5024> ]
GeometricMean.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
GetTime.Syntax=[ ]\n[ "<\u30d5\u30a9\u30fc\u30de\u30c3\u30c8>" ]
GroebnerDegRevLex.Syntax=[ <\u591a\u9805\u5f0f\u306e\u30ea\u30b9\u30c8> ]\n[ <\u591a\u9805\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u5909\u6570\u306e\u30ea\u30b9\u30c8> ]
GroebnerLex.Syntax=[ <\u591a\u9805\u5f0f\u306e\u30ea\u30b9\u30c8> ]\n[ <\u591a\u9805\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u5909\u6570\u306e\u30ea\u30b9\u30c8> ]
GroebnerLexDeg.Syntax=[ <\u591a\u9805\u5f0f\u306e\u30ea\u30b9\u30c8> ]\n[ <\u591a\u9805\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u5909\u6570\u306e\u30ea\u30b9\u30c8> ]
HarmonicMean.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
Height.Syntax=[ <\u7acb\u4f53> ]
HideLayer.Syntax=[ <\u6570\u5024> ]
Histogram.Syntax=[ <\u30af\u30e9\u30b9\u5883\u754c\u306e\u30ea\u30b9\u30c8>, <\u9ad8\u3055\u306e\u30ea\u30b9\u30c8> ]\n[ <\u30af\u30e9\u30b9\u5883\u754c\u306e\u30ea\u30b9\u30c8>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <\u30af\u30e9\u30b9\u5883\u754c\u306e\u30ea\u30b9\u30c8>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <Use Density>, <Density Scale Factor (optional)> ]
HistogramRight.Syntax=[ <\u968e\u7d1a\u5883\u754c\u306e\u30ea\u30b9\u30c8>, <\u9ad8\u3055\u306e\u30ea\u30b9\u30c8> ]\n[ <\u968e\u7d1a\u5883\u754c\u306e\u30ea\u30b9\u30c8>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u4f7f\u7528\u5bc6\u5ea6>, <\u5bc6\u5ea6\u5c3a\u5ea6\u4fc2\u6570 (optional)> ]\n[ <Boolean Cumulative>, <\u968e\u7d1a\u5883\u754c\u306e\u30ea\u30b9\u30c8>, <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u4f7f\u7528\u5bc6\u5ea6>, <\u5bc6\u5ea6\u5c3a\u5ea6\u4fc2\u6570(optional)> ]
HyperGeometric.Syntax=[ <Population Size>, <Number of Successes>, <Sample Size> ]\n[ <Population Size>, <Number of Successes>, <Sample Size>, <Boolean Cumulative> ]\n[ <Population Size>, <Number of Successes>, <Sample Size>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]
HyperGeometric.SyntaxCAS=[ <Population Size>, <Number of Successes>, <Sample Size>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]
Hyperbola.Syntax=[ <\u7126\u70b9>, <\u7126\u70b9>, <\u9577\u8ef8\u306e\u9577\u3055> ]\n[ <\u7126\u70b9>, <\u7126\u70b9>, <\u7dda\u5206> ]\n[ <\u70b9>, <\u70b9>, <\u70b9> ]
IFactor.Syntax=[ <\u591a\u9805\u5f0f> ]
IFactor.SyntaxCAS=[ <\u5f0f> ]\n[ <\u5f0f>, <\u5909\u6570> ]
Icosahedron.Syntax=[ <\u6b63\u4e09\u89d2\u5f62> ]\n[ <\u70b9>, <\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u70b9>, <\u5411\u304d> ]
Identity.Syntax=[ <\u6570\u5024> ]
If.Syntax=[ <\u6761\u4ef6>, <\u6210\u7acb\u6642> ]\n[ <\u6761\u4ef6>, <\u6210\u7acb\u6642>, <\u4e0d\u6210\u7acb\u6642> ]
ImplicitCurve.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <\u5f0f>, <\u5f93\u5c5e\u5909\u6570>, <\u72ec\u7acb\u5909\u6570> ]
Incircle.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9> ]
IndexOf.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30ea\u30b9\u30c8> ]\n[ <\u30c6\u30ad\u30b9\u30c8>, <\u30c6\u30ad\u30b9\u30c8> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30ea\u30b9\u30c8>, <Start Index> ]\n[ <\u30c6\u30ad\u30b9\u30c8>, <\u30c6\u30ad\u30b9\u30c8>, <Start Index> ]
InfiniteCone.Syntax=[ <\u70b9>, <\u30d9\u30af\u30c8\u30eb>, <\u89d2\u5ea6> ]\n[ <\u70b9>, <\u70b9>, <\u89d2\u5ea6> ]\n[ <\u70b9>, <\u76f4\u7dda>, <\u89d2\u5ea6> ]
InfiniteCylinder.Syntax=[ <\u76f4\u7dda>, <\u534a\u5f84> ]\n[ <\u70b9>, <\u30d9\u30af\u30c8\u30eb>, <\u534a\u5f84> ]\n[ <\u70b9>, <\u70b9>, <\u534a\u5f84> ]
Insert.Syntax=[ <\u30ea\u30b9\u30c8>, <\u30ea\u30b9\u30c8>, <\u4f4d\u7f6e> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30ea\u30b9\u30c8>, <\u4f4d\u7f6e> ]
Integral.Syntax=[ <\u95a2\u6570> ]\n[ <\u95a2\u6570>, <\u5909\u6570> ]\n[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024> ]\n[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024>, <Boolean Evaluate> ]
Integral.SyntaxCAS=[ <\u95a2\u6570> ]\n[ <\u95a2\u6570>, <\u5909\u6570> ]\n[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024> ]\n[ <\u95a2\u6570>, <\u5909\u6570>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]
IntegralBetween.Syntax=[ <\u95a2\u6570>, <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024> ]\n[ <\u95a2\u6570>, <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024>, <Boolean Evaluate> ]
IntegralBetween.SyntaxCAS=[ <\u95a2\u6570>, <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024> ]\n[ <\u95a2\u6570>, <\u95a2\u6570>, <\u5909\u6570>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]
InteriorAngles.Syntax=[ <\u591a\u89d2\u5f62> ]
Intersect.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u4ea4\u70b9\u306e\u756a\u53f7> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u521d\u671f\u70b9> ]\n[ <\u95a2\u6570>, <\u95a2\u6570>, <x\u958b\u59cb\u5024>, <x\u7d42\u4e86\u5024> ]\n[ <\u66f2\u7dda 1>, <\u66f2\u7dda 2>, <\u5a92\u4ecb\u5909\u6570 1>, <\u5a92\u4ecb\u5909\u6570 2> ]
Intersect.SyntaxCAS=[ <\u95a2\u6570>, <\u95a2\u6570> ]
IntersectConic.Syntax=[ <\u5e73\u9762>, <\uff12\u6b21\u66f2\u9762> ]\n[ <\uff12\u6b21\u66f2\u9762>, <\uff12\u6b21\u66f2\u9762> ]
IntersectPath=IntersectionPaths
IntersectPath.Syntax=[ <\u76f4\u7dda>, <\u591a\u89d2\u5f62> ]\n[ <\u591a\u89d2\u5f62>, <\u591a\u89d2\u5f62> ]
IntersectPath.Syntax3D=[ <\u76f4\u7dda>, <\u591a\u89d2\u5f62> ]\n[ <\u591a\u89d2\u5f62>, <\u591a\u89d2\u5f62> ]\n[ <\u5e73\u9762>, <\u591a\u89d2\u5f62> ]\n[ <\u5e73\u9762>, <\uff12\u6b21\u66f2\u9762> ]
Intersection.Syntax=[ <\u30ea\u30b9\u30c8>, <\u30ea\u30b9\u30c8> ]
InverseBinomial.Syntax=[ <\u8a66\u884c\u56de\u6570>, <Probability of Success>, <\u78ba\u7387> ]
InverseCauchy.Syntax=[ <\u4e2d\u592e\u5024>, <\u30b9\u30b1\u30fc\u30eb>, <\u78ba\u7387> ]
InverseChiSquared.Syntax=[ <\u81ea\u7531\u5ea6>, <\u78ba\u7387> ]
InverseExponential.Syntax=[ <\u03bb>, <\u78ba\u7387> ]
InverseFDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <\u78ba\u7387> ]
InverseGamma.Syntax=[ <\u03b1>, <\u03b2>, <\u78ba\u7387> ]
InverseHyperGeometric.Syntax=[ <Population Size>, <Number of Successes>, <Sample Size>, <\u78ba\u7387> ]
InverseLaplace.Syntax=[ <\u95a2\u6570> ]\n[ <\u95a2\u6570>, <\u5909\u6570> ]\n[ <\u95a2\u6570>, <\u5909\u6570>, <\u5909\u6570> ]
InverseLogNormal.Syntax=[ <\u5e73\u5747>, <\u6a19\u6e96\u504f\u5dee>, <\u78ba\u7387> ]
InverseLogistic.Syntax=[ <\u5e73\u5747>, <\u30b9\u30b1\u30fc\u30eb>, <\u78ba\u7387> ]
InverseNormal.Syntax=[ <\u5e73\u5747>, <\u6a19\u6e96\u504f\u5dee>, <\u78ba\u7387> ]
InversePascal.Syntax=[ <\u6210\u529f\u306e\u6570>, <\u6210\u529f\u306e\u78ba\u7387>, <\u78ba\u7387> ]
InversePoisson.Syntax=[ <\u5e73\u5747>, <\u78ba\u7387> ]
InverseTDistribution.Syntax=[ <\u81ea\u7531\u5ea6>, <\u78ba\u7387> ]
InverseWeibull.Syntax=[ <\u30b7\u30a7\u30a4\u30d7>, <\u30b9\u30b1\u30fc\u30eb>, <\u78ba\u7387> ]
InverseZipf.Syntax=[ <\u8981\u7d20\u6570>, <\u6307\u6570>, <\u78ba\u7387> ]
Invert.Syntax=[ <\u884c\u5217> ]\n[ <\u95a2\u6570> ]
IsInRegion.Syntax=[ <\u70b9>, <\u9818\u57df> ]
IsInteger.Syntax=[ <\u6570\u5024> ]
IsPrime.Syntax=[ <\u6570\u5024> ]
IsTangent.Syntax=[ <\u76f4\u7dda>, <\u4e8c\u6b21\u66f2\u7dda> ]
Iteration.Syntax=[ <\u95a2\u6570>, <\u958b\u59cb\u5024>, <\u53cd\u5fa9\u56de\u6570> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u958b\u59cb\u5024>, <\u30ab\u30a6\u30f3\u30c8> ]
IterationList.Syntax=[ <\u95a2\u6570>, <\u958b\u59cb\u5024>, <\u53cd\u5fa9\u56de\u6570> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u958b\u59cb\u5024>, <\u30ab\u30a6\u30f3\u30c8> ]
Join.Syntax=[ <\u30ea\u30b9\u30c8\u306e\u30ea\u30b9\u30c8> ]\n[ <\u30ea\u30b9\u30c8>, <\u30ea\u30b9\u30c8>, ... ]
JordanDiagonalization.SyntaxCAS=[ <\u884c\u5217> ]
KeepIf.Syntax=[ <\u6761\u4ef6>, <\u30ea\u30b9\u30c8> ]\n[ <\u6761\u4ef6>, <\u5909\u6570>, <\u30ea\u30b9\u30c8> ]
LCM.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024>, <\u6570\u5024> ]
LCM.SyntaxCAS=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]\n[ <\u591a\u9805\u5f0f\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024>, <\u6570\u5024> ]\n[ <\u591a\u9805\u5f0f>, <\u591a\u9805\u5f0f> ]
LaTeX.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u5909\u6570\u4ee3\u5165\u306e\u305f\u3081\u306e\u771f\u507d\u5024> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u5909\u6570\u4ee3\u5165\u306e\u305f\u3081\u306e\u771f\u507d\u5024>, <Boolean Show Name> ]
Laplace.Syntax=[ <\u95a2\u6570> ]\n[ <\u95a2\u6570>, <\u5909\u6570> ]\n[ <\u95a2\u6570>, <\u5909\u6570>, <\u5909\u6570> ]
Last.Syntax=[ <\u30ea\u30b9\u30c8> ]\n[ <\u30c6\u30ad\u30b9\u30c8> ]\n[ <\u30ea\u30b9\u30c8>, <\u8981\u7d20\u306e\u6570> ]\n[ <\u30c6\u30ad\u30b9\u30c8>, <\u8981\u7d20\u306e\u6570> ]
Last.SyntaxCAS=[ <\u30ea\u30b9\u30c8> ]\n[ <\u30ea\u30b9\u30c8>, <\u8981\u7d20\u6570> ]
LeftSide.Syntax=[ <\u7b49\u5f0f> ]
LeftSide.SyntaxCAS=[ <\u7b49\u5f0f> ]\n[ <\u7b49\u5f0f\u306e\u30ea\u30b9\u30c8> ]\n[ <\u7b49\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u30a4\u30f3\u30c7\u30c3\u30af\u30b9> ]
LeftSum.Syntax=[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024>, <\u9577\u65b9\u5f62\u306e\u6570> ]
Length.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]\n[ <\u95a2\u6570>, <x\u958b\u59cb\u5024>, <x\u7d42\u4e86\u5024> ]\n[ <\u95a2\u6570>, <\u958b\u59cb\u70b9>, <\u7d42\u4e86\u70b9> ]\n[ <\u66f2\u7dda>, <t\u958b\u59cb\u5024>, <t\u7d42\u4e86\u5024> ]\n[ <\u66f2\u7dda>, <\u958b\u59cb\u70b9>, <\u7d42\u4e86\u70b9> ]
Length.SyntaxCAS=[ <\u30ea\u30b9\u30c8> ]\n[ <\u95a2\u6570>, <x\u958b\u59cb\u5024>, <x\u306e\u5024> ]\n[ <\u95a2\u6570>, <\u5909\u6570>, <\u958b\u59cb\u70b9>, <\u7d42\u4e86\u70b9> ]
LetterToUnicode.Syntax=[ "<\u6587\u5b57>" ]
Limit.Syntax=[ <\u95a2\u6570>, <\u5024> ]
Limit.SyntaxCAS=[ <\u5f0f>, <\u5024> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u5024> ]
LimitAbove.Syntax=[ <\u95a2\u6570>, <\u5024> ]
LimitAbove.SyntaxCAS=[ <\u5f0f>, <\u5024> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u5024> ]
LimitBelow.Syntax=[ <\u95a2\u6570>, <\u5024> ]
LimitBelow.SyntaxCAS=[ <\u5f0f>, <\u5024> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u5024> ]
Line.Syntax=[ <\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u5e73\u884c\u306a\u76f4\u7dda> ]\n[ <\u70b9>, <\u65b9\u5411\u30d9\u30af\u30c8\u30eb> ]
LineBisector.Syntax=[ <\u7dda\u5206> ]\n[ <\u70b9>, <\u70b9> ]
LineBisector.Syntax3D=[ <\u7dda\u5206> ]\n[ <\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u70b9>, <\u5411\u304d> ]
Locus.Syntax=[ <\u8ecc\u8de1\u306e\u70b9>, <\u70b9> ]\n[ <\u8ecc\u8de1\u306e\u70b9>, <\u30b9\u30e9\u30a4\u30c0\u30fc> ]\n[ <\u30d9\u30af\u30c8\u30eb\u5834>, <\u70b9> ]\n[ <f(x, y)>, <\u70b9> ]
LocusEquation.Syntax=[ <\u8ecc\u8de1> ]\n[ <\u8ecc\u8de1\u306e\u70b9>, <\u99c6\u52d5\u70b9> ]\n[ <\u8ad6\u7406\u5f0f>, <\u8ecc\u8de1\u306e\u70b9> ]
LogNormal.Syntax=[ <\u5e73\u5747>, <\u6a19\u6e96\u504f\u5dee>, <\u5909\u6570\u5024> ]\n[ <\u5e73\u5747>, <S\u6a19\u6e96\u504f\u5dee>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <\u5e73\u5747>, <\u6a19\u6e96\u504f\u5dee>, x, <Boolean Cumulative> ]
Logistic.Syntax=[ <\u5e73\u5747>, <\u30b9\u30b1\u30fc\u30eb>, <\u5909\u6570\u5024> ]\n[ <\u5e73\u5747>, <\u30b9\u30b1\u30fc\u30eb>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <\u5e73\u5747>, <\u30b9\u30b1\u30fc\u30eb>, x, <Boolean Cumulative> ]
LowerSum.Syntax=[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024>, <\u9577\u65b9\u5f62\u306e\u6570> ]
MAD.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
MatrixRank.Syntax=[ <\u884c\u5217> ]
Max.Syntax=[ <\u533a\u9593> ]\n[ <\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024>, <\u6570\u5024> ]\n[ <\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]\n[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024> ]
Max.SyntaxCAS=[ <\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024>, <\u6570\u5024> ]
Maximize.Syntax=[ <\u5f93\u5c5e\u3059\u308b\u6570\u5024>, <\u81ea\u7531\u306a\u6570\u5024> ]\n[ <\u5f93\u5c5e\u3059\u308b\u6570\u5024r>, <\u30d1\u30b9\u4e0a\u306e\u70b9> ]
Mean.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
Mean.SyntaxCAS=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
MeanX.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
MeanY.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
Median.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
Median.SyntaxCAS=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
Midpoint.Syntax=[ <\u7dda\u5206> ]\n[ <\uff12\u6b21\u66f2\u7dda> ]\n[ <\u533a\u9593> ]\n[ <\u70b9>, <\u70b9> ]
Min.Syntax=[ <\u533a\u9593> ]\n[ <\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024>, <\u6570\u5024> ]\n[ <\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]\n[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024> ]
Min.SyntaxCAS=[ <\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024>, <\u6570\u5024> ]
Minimize.Syntax=[ <\u5f93\u5c5e\u3059\u308b\u6570\u5024>, <\u81ea\u7531\u306a\u6570\u5024> ]\n[ <\u5f93\u5c5e\u3059\u308b\u6570\u5024>, <\u30d1\u30b9\u4e0a\u306e\u70b9> ]
MinimumSpanningTree.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
Mirror.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u70b9> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u76f4\u7dda> ]\n[ <\u70b9>, <\u5186> ]
Mirror.Syntax3D=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u70b9> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u76f4\u7dda> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u5e73\u9762> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u5186> ]
MixedNumber.SyntaxCAS=[ <\u6570\u5024> ]
Mod.Syntax=[ <\u5272\u3089\u308c\u308b\u6570\u5024>, <\u5272\u308b\u6570\u5024> ]\n[ <\u5272\u3089\u308c\u308b\u591a\u9805\u5f0f>, <\u5272\u308b\u591a\u9805\u5f0f> ]
Mode.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
NDerivative.Syntax=[ <\u95a2\u6570> ]
NIntegral.Syntax=[ <\u95a2\u6570> ]\n[ <\u95a2\u6570>, <x\u958b\u59cb\u5024>, <x\u7d42\u4e86\u5024> ]
NIntegral.SyntaxCAS=[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024> ]\n[ <\u95a2\u6570>, <\u5909\u6570>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]
NInvert.Syntax=[ <\u95a2\u6570> ]
NSolutions.Syntax=[ <\u65b9\u7a0b\u5f0f> ]
NSolutions.SyntaxCAS=[ <\u65b9\u7a0b\u5f0f> ]\n[ <\u65b9\u7a0b\u5f0f>, <\u5909\u6570> ]\n[ <\u65b9\u7a0b\u5f0f>, <\u5909\u6570 = \u958b\u59cb\u5024> ]\n[ <\u65b9\u7a0b\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u5909\u6570\u306e\u30ea\u30b9\u30c8> ]
NSolve.Syntax=[ <\u65b9\u7a0b\u5f0f> ]
NSolve.SyntaxCAS=[ <\u65b9\u7a0b\u5f0f> ]\n[ <\u65b9\u7a0b\u5f0f>, <\u5909\u6570> ]\n[ <\u65b9\u7a0b\u5f0f>, <\u5909\u6570 = \u958b\u59cb\u5024> ]\n[ <\u65b9\u7a0b\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u5909\u6570\u306e\u30ea\u30b9\u30c8> ]
NSolveODE.Syntax=[ <\u5c0e\u95a2\u6570\u306e\u30ea\u30b9\u30c8>, <x\u5ea7\u6a19\u306e\u521d\u671f\u5024>, <y\u5ea7\u6a19\u306e\u521d\u671f\u5024\u306e\u30ea\u30b9\u30c8>, <x\u5ea7\u6a19\u306e\u6700\u7d42\u5024> ]
Name.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
Net.Syntax=[ <\u591a\u9762\u4f53>, <\u6570\u5024> ]\n[ <\u591a\u9762\u4f53>, <\u6570\u5024>, <\u9762>, <\u8fba>, <\u8fba>, ... ]
NextPrime.Syntax=[ <\u6570\u5024> ]
Normal.Syntax=[ <\u5e73\u5747>, <\u6a19\u6e96\u504f\u5dee>, <\u5909\u6570\u5024> ]\n[ <\u5e73\u5747>, <\u6a19\u6e96\u504f\u5dee>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <\u5e73\u5747>, <\u6a19\u6e96\u504f\u5deen>, x, <Boolean Cumulative> ]
Normal.SyntaxCAS=[ <\u5e73\u5747>, <\u6a19\u6e96\u504f\u5dee>, <\u5909\u6570\u5024> ]
NormalQuantilePlot.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]
Normalize.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]\n[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
Numerator.Syntax=[ <\u6570\u5024> ]\n[ <\u95a2\u6570> ]
Numerator.SyntaxCAS=[ <\u5f0f> ]
Numeric.SyntaxCAS=[ <\u5f0f> ]\n[ <\u5f0f>, <\u6709\u52b9\u6570\u5b57> ]
Object.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\u306e\u30c6\u30ad\u30b9\u30c8> ]
Octahedron.Syntax=[ <\u6b63\u4e09\u89d2\u5f62> ]\n[ <\u70b9>, <\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u70b9>, <\u5411\u304d> ]
Ordinal.Syntax=[ <\u6574\u6570> ]
OrdinalRank.Syntax=[ <\u30ea\u30b9\u30c8> ]
OrthogonalLine.Syntax=[ <\u70b9>, <\u76f4\u7dda> ]\n[ <\u70b9>, <\u7dda\u5206> ]\n[ <\u70b9>, <\u30d9\u30af\u30c8\u30eb> ]
OrthogonalLine.Syntax3D=[ <\u70b9>, <\u76f4\u7dda> ]\n[ <\u70b9>, <\u7dda\u5206> ]\n[ <\u70b9>, <\u30d9\u30af\u30c8\u30eb> ]\n[ <\u70b9>, <\u5e73\u9762> ]\n[ <\u76f4\u7dda>, <\u76f4\u7dda> ]\n[ <\u70b9>, <\u65b9\u5411>, <\u65b9\u5411> ]\n[ <\u70b9>, <\u76f4\u7dda>, <Context> ]
OrthogonalPlane.Syntax=[ <\u70b9>, <\u76f4\u7dda> ]\n[ <\u70b9>, <\u30d9\u30af\u30c8\u30eb> ]
OrthogonalVector.Syntax=[ <\u76f4\u7dda> ]\n[ <\u7dda\u5206> ]\n[ <\u30d9\u30af\u30c8\u30eb> ]
OrthogonalVector.Syntax3D=[ <\u76f4\u7dda> ]\n[ <\u7dda\u5206> ]\n[ <\u30d9\u30af\u30c8\u30eb> ]\n[ <\u5e73\u9762> ]
OrthogonalVector.SyntaxCAS=[ <\u30d9\u30af\u30c8\u30eb> ]
OsculatingCircle.Syntax=[ <\u70b9>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
PMCC.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <x\u5ea7\u6a19\u306e\u30ea\u30b9\u30c8>, <y\u5ea7\u6a19\u306e\u30ea\u30b9\u30c8> ]
Parabola.Syntax=[ <\u70b9>, <\u76f4\u7dda> ]
Parameter.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
ParametricDerivative.Syntax=[ <\u66f2\u7dda> ]
ParseToFunction.Syntax=[ <\u95a2\u6570>, <\u6587\u5b57\u5217> ]
ParseToNumber.Syntax=[ <\u6570\u5024>, <\u6587\u5b57\u5217> ]
PartialFractions.Syntax=[ <\u95a2\u6570> ]
PartialFractions.SyntaxCAS=[ <\u95a2\u6570> ]\n[ <\u95a2\u6570>, <\u5909\u6570> ]
Pascal.Syntax=[ <Number of Successes>, <Probability of Success> ]\n[ <Number of Successes>, <Probability of Success>, <Boolean Cumulative> ]\n[ <Number of Successes>, <Probability of Success>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]
Pascal.SyntaxCAS=[ <\u56de\u6570>, <\u78ba\u7387>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]
PathParameter.Syntax=[ <\u30d1\u30b9\u4e0a\u306e\u70b9> ]
Payment.Syntax=[ <\u6bd4\u7387>, <\u671f\u9593\u306e\u6570>, <\u73fe\u5728\u306e\u5024>, <\u5c06\u6765\u306e\u5024 (optional)>, <Type (optional)> ]
Percentile.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u30d1\u30fc\u30bb\u30f3\u30c8> ]
Perimeter.Syntax=[ <\u591a\u89d2\u5f62> ]\n[ <\uff12\u6b21\u66f2\u7dda> ]\n[ <\u8ecc\u8de1> ]
Periods.Syntax=[ <\u6bd4\u7387>, <\u652f\u6255>, <\u73fe\u5728\u306e\u5024>, <\u5c06\u6765\u306e\u5024 (optional)>, <\u578b (optional)> ]
Plane.Syntax=[ <\u591a\u89d2\u5f62> ]\n[ <\uff12\u6b21\u66f2\u7dda> ]\n[ <\u70b9>, <\u5e73\u9762> ]\n[ <\u70b9>, <\u76f4\u7dda> ]\n[ <\u76f4\u7dda>, <\u76f4\u7dda> ]\n[ <\u70b9>, <\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u30d9\u30af\u30c8\u30eb>, <\u30d9\u30af\u30c8\u30eb> ]
PlaneBisector.Syntax=[ <\u7dda\u5206> ]\n[ <\u70b9>, <\u70b9> ]
PlaySound.Syntax=[ <\u30d5\u30a1\u30a4\u30eb> ]\n[ <Boolean Play> ]\n[ <\u95a2\u6570>, <\u6700\u5c0f\u5024>, <\u6700\u5927\u5024> ]\n[ <\u95a2\u6570>, <\u6700\u5c0f\u5024>, <\u6700\u5927\u5024>, <\u30b5\u30f3\u30d7\u30eb\u30ec\u30fc\u30c8>, <\u30b5\u30f3\u30d7\u30eb\u6df1\u5ea6> ]
Point.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]\n[ <\u30ea\u30b9\u30c8> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u5a92\u4ecb\u5909\u6570> ]\n[ <\u70b9>, <\u30d9\u30af\u30c8\u30eb> ]
PointIn.Syntax=[ <\u9818\u57df> ]
PointList.Syntax=[ <\u30ea\u30b9\u30c8> ]
Poisson.Syntax=[ <\u5e73\u5747> ]\n[ <\u5e73\u5747>, <Boolean Cumulative> ]\n[ <\u5e73\u5747>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]
Poisson.SyntaxCAS=[ <\u5e73\u5747>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]
Polar.Syntax=[ <\u70b9>, <\uff12\u6b21\u66f2\u7dda> ]\n[ <\u76f4\u7dda>, <\uff12\u6b21\u66f2\u7dda> ]
PolyLine=PolyLine
PolyLine.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <\u70b9>, ..., <\u70b9> ]
Polygon.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <\u70b9>, ..., <\u70b9> ]\n[ <\u70b9>, <\u70b9>, <\u9802\u70b9\u306e\u6570> ]
Polygon.Syntax3D=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <\u70b9>, ..., <\u70b9> ]\n[ <\u70b9>, <\u70b9>, <\u9802\u70b9\u6570> ]\n[ <\u70b9>, <\u70b9>, <\u9802\u70b9\u6570>, <\u5411\u304d> ]
Polynomial.Syntax=[ <\u95a2\u6570> ]\n[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
Polynomial.SyntaxCAS=[ <\u95a2\u6570> ]\n[ <\u95a2\u6570>, <\u5909\u6570> ]
PresentValue.Syntax=[ <\u6bd4\u7387>, <\u671f\u9593\u306e\u6570>, <\u652f\u6255>, <\u5c06\u6765\u306e\u5024 (optional)>, <\u578b (optional)> ]
PreviousPrime.Syntax=[ <\u6570\u5024> ]
PrimeFactors.Syntax=[ <\u6570\u5024> ]
Prism.Syntax=[ <\u591a\u89d2\u5f62>, <\u70b9> ]\n[ <\u591a\u89d2\u5f62>, <\u9ad8\u3055> ]\n[ <\u70b9>, <\u70b9>, ... ]
Product.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u8981\u7d20\u6570> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]
Product.SyntaxCAS=[ <\u5f0f\u306e\u30ea\u30b9\u30c8> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u958b\u59cb\u30a4\u30f3\u30c7\u30c3\u30af\u30b9>, <\u7d42\u4e86\u30a4\u30f3\u30c7\u30c3\u30af\u30b9> ]
Prove.Syntax=[ <\u8ad6\u7406\u5f0f> ]
ProveDetails.Syntax=[ <\u8ad6\u7406\u5f0f> ]
Pyramid.Syntax=[ <\u591a\u89d2\u5f62>, <\u70b9> ]\n[ <\u591a\u89d2\u5f62>, <\u9ad8\u3055> ]\n[ <\u70b9>, <\u70b9>, <\u70b9>, <\u70b9>, ... ]
Q1.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
Q3.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
QuadricSide.Syntax=[ <\uff12\u6b21\u66f2\u9762> ]
RSquare.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <\u95a2\u6570> ]
Radius.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
Random.Syntax=[ <\u6700\u5c0f\u306e\u6574\u6570>, <\u6700\u5927\u306e\u6574\u6570> ]\n[ <\u6700\u5c0f\u306e\u6574\u6570>, <\u6700\u5927\u306e\u6574\u6570>, <Boolean Fixed> ]
Random.SyntaxCAS=[ <\u6700\u5c0f\u306e\u6574\u6570>, <\u6700\u5927\u306e\u6574\u6570> ]
RandomBinomial.Syntax=[ <\u8a66\u884c\u56de\u6570>, <\u78ba\u7387> ]
RandomDiscrete.Syntax=[ <\u30ea\u30b9\u30c8>, <\u30ea\u30b9\u30c8> ]
RandomElement.Syntax=[ <\u30ea\u30b9\u30c8> ]
RandomNormal.Syntax=[ <\u5e73\u5747>, <\u6a19\u6e96\u504f\u5dee> ]
RandomPointIn.Syntax=[ <\u9818\u57df> ]\n[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <x\u6700\u5c0f>, <x\u6700\u5927>, <y\u6700\u5c0f>, <y\u6700\u5927> ]
RandomPoisson.Syntax=[ <\u5e73\u5747> ]
RandomPolynomial.Syntax=[ <\u6b21\u6570>, <\u4fc2\u6570\u306e\u6700\u5c0f\u5024>, <\u4fc2\u6570\u306e\u6700\u5927\u5024> ]
RandomPolynomial.SyntaxCAS=[ <\u6b21\u6570>, <\u4fc2\u6570\u306e\u6700\u5c0f\u5024>, <\u4fc2\u6570\u306e\u6700\u5927\u5024> ]\n[ <\u5909\u6570>, <\u6b21\u6570>, <\u4fc2\u6570\u306e\u6700\u5c0f\u5024>, <\u4fc2\u6570\u306e\u6700\u5927\u5024> ]
RandomUniform.Syntax=[ <\u6700\u5c0f>, <\u6700\u5927> ]\n[ <\u6700\u5c0f>, <\u6700\u5927>, <\u6a19\u672c\u6570> ]
Rate.Syntax=[ <\u671f\u9593\u306e\u6570>, <\u652f\u6255>, <\u73fe\u5728\u306e\u5024>, <\u5c06\u6765\u306e\u5024 (optional)>, <\u578b(optional)>, <Guess (optional)> ]
Rationalize.SyntaxCAS=[ <\u6570\u5024> ]
Ray.Syntax=[ <\u958b\u59cb\u70b9>, <\u70b9> ]\n[ <\u958b\u59cb\u70b9>, <\u65b9\u5411\u30d9\u30af\u30c8\u30eb> ]
ReadText.Syntax=[ <\u30c6\u30ad\u30b9\u30c8> ]
RectangleSum.Syntax=[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024>, <\u9577\u65b9\u5f62\u306e\u6570>, <\u9577\u65b9\u5f62\u306e\u958b\u59cb\u4f4d\u7f6et> ]
ReducedRowEchelonForm.Syntax=[ <\u884c\u5217> ]
Relation.Syntax=[ <\u30ea\u30b9\u30c8> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
Remove.Syntax=[ <\u30ea\u30b9\u30c8>, <\u30ea\u30b9\u30c8> ]
RemoveUndefined.Syntax=[ <\u30ea\u30b9\u30c8> ]
Rename.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u540d\u524d> ]
Repeat.Syntax=[ <\u6570\u5024>, <\u547d\u4ee4>, <\u547d\u4ee4>, ... ]
ResidualPlot.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <\u95a2\u6570> ]
Reverse.Syntax=[ <\u30ea\u30b9\u30c8> ]
RightSide.Syntax=[ <\u7b49\u5f0f> ]
RightSide.SyntaxCAS=[ <\u7b49\u5f0f> ]\n[ <\u7b49\u5f0f\u306e\u30ea\u30b9\u30c8> ]\n[ <\u7b49\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u30a4\u30f3\u30c7\u30c3\u30af\u30b9> ]
RigidPolygon.Syntax=[ <\u591a\u89d2\u5f62> ]\n[ <\u591a\u89d2\u5f62>, <x\u30aa\u30d5\u30bb\u30c3\u30c8>, <y\u30aa\u30d5\u30bb\u30c3\u30c8> ]\n[ <\u81ea\u7531\u70b9>, ..., <\u81ea\u7531\u70b9> ]
Root.Syntax=[ <\u591a\u9805\u5f0f> ]\n[ <\u95a2\u6570>, <x\u306e\u521d\u671f\u5024> ]\n[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024> ]
Root.SyntaxCAS=[ <\u591a\u9805\u5f0f> ]
RootList.Syntax=[ <\u30ea\u30b9\u30c8> ]
RootMeanSquare.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
Roots.Syntax=[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024> ]
Rotate.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u89d2\u5ea6> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u89d2\u5ea6>, <\u70b9> ]
Rotate.Syntax3D=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u89d2\u5ea6> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u89d2\u5ea6>, <\u70b9> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u89d2\u5ea6>, <\u56de\u8ee2\u8ef8> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u89d2\u5ea6>, <\u56de\u8ee2\u8ef8\u4e0a\u306e\u70b9>, <\u8ef8\u306e\u65b9\u5411\u307e\u305f\u306f\u5e73\u9762> ]
RotateText.Syntax=[ <\u30c6\u30ad\u30b9\u30c8>, <\u89d2\u5ea6> ]
Row.Syntax=[ <\u8868\u8a08\u7b97\u306e\u30bb\u30eb> ]
RunClickScript.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
RunUpdateScript.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
SD.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
SDX.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
SDY.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
SVD.Syntax=[ <\u884c\u5217> ]
SXX.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]\n[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
SXY.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
SYY.Syntax=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]\n[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
Sample.Syntax=[ <\u30ea\u30b9\u30c8>, <\u30b5\u30a4\u30ba> ]\n[ <\u30ea\u30b9\u30c8>, <\u30b5\u30a4\u30ba>, <\u91cd\u8907\u3092\u8a31\u3059> ]
SampleSD.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
SampleSD.SyntaxCAS=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
SampleSDX.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
SampleSDY.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
SampleVariance.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
SampleVariance.SyntaxCAS=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
ScientificText.Syntax=[ <\u6570\u5024> ]\n[ <\u6570\u5024>, <\u7cbe\u5ea6> ]
SecondAxis.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
SecondAxisLength.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]
Sector.Syntax=[ <\uff12\u6b21\u66f2\u7dda>, <\u70b9>, <\u70b9> ]\n[ <\uff12\u6b21\u66f2\u7dda>, <\u5a92\u4ecb\u5909\u6570\u306e\u5024>, <\u5a92\u4ecb\u5909\u6570\u306e\u5024> ]
Segment.Syntax=[ <\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u6570\u5024> ]
SelectObjects.Syntax=[ ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, ... ]
SelectedElement.Syntax=[ <\u30ea\u30b9\u30c8> ]
SelectedIndex.Syntax=[ <\u30ea\u30b9\u30c8> ]
Semicircle.Syntax=[ <\u70b9>, <\u70b9> ]
Sequence.Syntax=[ <\u7d42\u4e86\u5024> ]\n[ <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]\n[ <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024>, <\u5897\u5206> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024>, <\u5897\u5206> ]
SetActiveView.Syntax=[ <\u30d3\u30e5\u30fc> ]\n[ <\u5e73\u9762> ]
SetAxesRatio.Syntax=[ <\u6570\u5024>, <\u6570\u5024> ]
SetAxesRatio.Syntax3D=[ <\u6570\u5024>, <\u6570\u5024> ]\n[ <\u6570\u5024>, <\u6570\u5024>, <\u6570\u5024> ]
SetBackgroundColor.Syntax=[ "<\u8272>" ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, "<\u8272>" ]\n[ <\u8d64>, <\u7dd1>, <\u9752> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u8d64>, <\u7dd1>, <\u9752> ]
SetCaption.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30c6\u30ad\u30b9\u30c8> ]
SetColor.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, "<Color>" ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <Red>, <Green>, <Blue> ]
SetConditionToShowObject.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u6761\u4ef6> ]
SetConstructionStep.Syntax=[ <\u6570\u5024> ]
SetCoords.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <x>, <y> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u6570\u5024> ]
SetDynamicColor.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <Red>, <Green>, <Blue> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <Red>, <Green>, <Blue>, <\u900f\u904e\u7387> ]
SetFilling.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u6570\u5024> ]
SetFixed.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <true | false> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <true | false>, <true | false> ]
SetLabelMode.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u6570\u5024> ]
SetLayer.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <Layer> ]
SetLevelOfDetail.Syntax=[ <\u66f2\u9762>, <Level of Detail> ]
SetLineStyle.Syntax=[ <\u76f4\u7dda>, <\u6570\u5024> ]
SetLineThickness.Syntax=[ <\u76f4\u7dda>, <\u6570\u5024> ]
SetPerspective.Syntax=[ <\u30c6\u30ad\u30b9\u30c8> ]
SetPointSize.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u6570\u5024> ]
SetPointStyle.Syntax=[ <\u70b9>, <\u6570\u5024> ]
SetSeed.Syntax=[ <\u6574\u6570> ]
SetSpinSpeed.Syntax=[ <\u6570\u5024> ]
SetTooltipMode.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u6570\u5024> ]
SetTrace.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <true | false> ]
SetValue.Syntax=[ <\u771f\u507d\u5024>, <0|1> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]\n[ <\u30ea\u30b9\u30c8>, <\u6570\u5024>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
SetViewDirection.Syntax=[ ]\n[ <\u5411\u304d> ]\n[ <\u5411\u304d>, <Boolean animate> ]
SetVisibleInView.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <View Number 1|2>, <\u771f\u507d\u5024> ]
Shear.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u76f4\u7dda>, <\u6bd4\u7387> ]
ShortestDistance.Syntax=[ <\u7dda\u5206\u306e\u30ea\u30b9\u30c8>, <\u958b\u59cb\u70b9>, <\u7d42\u4e86\u70b9>, <Boolean Weighted> ]
ShowAxes.Syntax=[ ]\n[ <\u771f\u507d\u5024> ]\n[ <\u30d3\u30e5\u30fc>, <\u771f\u507d\u5024> ]
ShowGrid.Syntax=[ ]\n[ <\u771f\u507d\u5024> ]\n[ <\u30d3\u30e5\u30fc>, <\u771f\u507d\u5024> ]
ShowLabel.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u771f\u507d\u5024> ]
ShowLayer.Syntax=[ <\u6570\u5024> ]
Shuffle.Syntax=[ <\u30ea\u30b9\u30c8> ]
SigmaXX.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
SigmaXY.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <x\u5ea7\u6a19\u306e\u30ea\u30b9\u30c8>, <y\u5ea7\u6a19\u306e\u30ea\u30b9\u30c8> ]
SigmaYY.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
Simplify.Syntax=[ <\u95a2\u6570> ]\n[ <\u30c6\u30ad\u30b9\u30c8> ]
Simplify.SyntaxCAS=[ <\u95a2\u6570> ]
Slider.Syntax=[ <\u6700\u5c0f>, <\u6700\u5927>, <\u5897\u5206>, <\u901f\u5ea6>, <\u5e45>, <\u89d2\u5ea6\u304b>, <\u6c34\u5e73>, <\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3>, <\u30e9\u30f3\u30c0\u30e0> ]
Slope.Syntax=[ <\u76f4\u7dda> ]
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <\u6570\u5024 n> ]\n[ <f(x, y)>, <\u6570\u5024 n>, <Length Multiplier a> ]\n[ <f(x, y)>, <\u6570\u5024 n>, <Length Multiplier a>, <x\u6700\u5c0f>, <y\u6700\u5c0f>, <x\u6700\u5927>, <y\u6700\u5927> ]
SlowPlot.Syntax=[ <\u95a2\u6570> ]\n[ <\u95a2\u6570>, <\u8ad6\u7406 \u53cd\u5fa9> ]
Solutions.Syntax=[ <\u65b9\u7a0b\u5f0f> ]
Solutions.SyntaxCAS=[ <\u65b9\u7a0b\u5f0f> ]\n[ <\u65b9\u7a0b\u5f0f>, <\u5909\u6570> ]\n[ <\u65b9\u7a0b\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u5909\u6570\u306e\u30ea\u30b9\u30c8> ]
Solve.Syntax=[ <\u65b9\u7a0b\u5f0f> ]
Solve.SyntaxCAS=[ <x\u306e\u65b9\u7a0b\u5f0f> ]\n[ <\u65b9\u7a0b\u5f0f>, <\u5909\u6570> ]\n[ <\u65b9\u7a0b\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u5909\u6570\u306e\u30ea\u30b9\u30c8> ]\n[ <\u200b\u5a92\u4ecb\u5909\u6570\u65b9\u7a0b\u5f0f\u306e\u30ea\u30b9\u30c8>, <\u5909\u6570\u306e\u30ea\u30b9\u30c8> ]\n[ <\u65b9\u7a0b\u5f0f>, <\u200b\u5909\u6570>, <\u4eee\u5b9a\u306e\u30ea\u30b9\u30c8> ]
SolveCubic.SyntaxCAS=[ <\uff13\u6b21\u591a\u9805\u5f0f> ]
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <f\u4e0a\u306e\u70b9> ]\n[ <f'(x, y)>, <x\u958b\u59cb\u5024>, <y\u958b\u59cb\u5024>, <x\u7d42\u4e86\u5024>, <\u9593\u9694> ]\n[ <y'>, <x'>, <x\u958b\u59cb\u5024>, <y\u958b\u59cb\u5024>, <t\u7d42\u4e86\u5024>, <\u9593\u9694> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x\u958b\u59cb\u5024>, <y\u958b\u59cb\u5024>, <y'\u958b\u59cb\u5024>, <x\u7d42\u4e86\u5024>, <\u9593\u9694> ]
SolveODE.SyntaxCAS=[ <\u65b9\u7a0b\u5f0f> ]\n[ <\u65b9\u7a0b\u5f0f>, <f\u4e0a\u306e\u70b9\uff08\u306e\u30ea\u30b9\u30c8\uff09> ]\n[ <\u65b9\u7a0b\u5f0f>, <f\u4e0a\u306e\u70b9\uff08\u306e\u30ea\u30b9\u30c8\uff09>, <f'\u4e0a\u306e\u70b9\uff08\u306e\u30ea\u30b9\u30c8\uff09> ]\n[ <\u65b9\u7a0b\u5f0f>, <\u5f93\u5c5e\u5909\u6570>, <\u72ec\u7acb\u5909\u6570>, <f\u4e0a\u306e\u70b9\uff08\u306e\u30ea\u30b9\u30c8\uff09> ]\n[ <\u65b9\u7a0b\u5f0f>, <\u5f93\u5c5e\u5909\u6570>, <\u72ec\u7acb\u5909\u6570>, <f\u4e0a\u306e\u70b9\uff08\u306e\u30ea\u30b9\u30c8\uff09>, <f'\u4e0a\u306e\u70b9\uff08\u306e\u30ea\u30b9\u30c8\uff09> ]
SolveQuartic.SyntaxCAS=[ <\uff14\u6b21\u591a\u9805\u5f0f> ]
Sort.Syntax=[ <\u30ea\u30b9\u30c8> ]\n[ <Values>, <Keys> ]
Spearman.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
Sphere.Syntax=[ <\u70b9>, <\u534a\u5f84> ]\n[ <\u70b9>, <\u70b9> ]
Spline.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <\u6b21\u6570 \u2265 3> ]\n[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <\u6b21\u6570 \u2265 3>, <Weight Function> ]
StartAnimation.Syntax=[ ]\n[ <\u771f\u507d\u5024> ]\n[ <Slider or Point>, <Slider or Point>, ... ]\n[ <Slider or Point>, <Slider or Point>, ..., <\u771f\u507d\u5024> ]
StartLogging.Syntax=[ "<\u30bb\u30f3\u30b5\u30fc>", <\u5909\u6570>, "<\u30bb\u30f3\u30b5\u30fc>", <\u5909\u6570>, ... ]
StartRecord.Syntax=[ ]\n[ <\u771f\u507d\u5024> ]
StemPlot.Syntax=[ <\u30ea\u30b9\u30c8> ]\n[ <\u30ea\u30b9\u30c8>, <Adjustment -1|0|1> ]
StepGraph.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <Boolean Join> ]\n[ <List of x-coordinates>, <List of y-coordinates> ]\n[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <Boolean Join>, <Point style> ]\n[ <List of x-coordinates>, <List of y-coordinates>, <Boolean Join> ]\n[ <List of x-coordinates>, <List of y-coordinates>, <Boolean Join>, <Point style> ]
StickGraph.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]\n[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <Boolean Horizontal> ]\n[ <List of x-coordinates>, <List of y-coordinates> ]\n[ <List of x-coordinates>, <List of y-coordinates>, <Boolean Horizontal> ]
StopLogging.Syntax=[ ]
Stretch.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30d9\u30af\u30c8\u30eb> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u76f4\u7dda>, <\u6bd4\u7387> ]
Substitute.SyntaxCAS=[ <\u5f0f>, <\u4ee3\u5165\u30ea\u30b9\u30c8> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u4ee3\u5165\u3059\u308b\u5024> ]
Sum.Syntax=[ <\u30ea\u30b9\u30c8> ]\n[ <\u30ea\u30b9\u30c8>, <\u8981\u7d20\u6570> ]\n[ <\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]
Sum.SyntaxCAS=[ <\u30ea\u30b9\u30c8> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]
SumSquaredErrors.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8>, <\u95a2\u6570> ]
SurdText.Syntax=[ <\u70b9> ]\n[ <\u6570\u5024> ]\n[ <\u6570\u5024>, <\u30ea\u30b9\u30c8> ]
Surface.Syntax=[ <\u95a2\u6570>, <\u89d2\u5ea6> ]\n[ <\u66f2\u7dda>, <\u89d2\u5ea6>, <\u76f4\u7dda> ]\n[ <\u5f0f>, <\u5f0f>, <\u5f0f>, <\u5a92\u4ecb\u5909\u65701>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024>, <\u5a92\u4ecb\u5909\u65702>, <\u958b\u59cb\u5024>, <\u7d42\u4e86\u5024> ]
TDistribution.Syntax=[ <\u81ea\u7531\u5ea6>, <\u5909\u6570\u5024> ]\n[ <\u81ea\u7531\u5ea6>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <\u81ea\u7531\u5ea6>, x, <Boolean Cumulative> ]
TDistribution.SyntaxCAS=[ <\u81ea\u7531\u5ea6>, <\u5909\u6570\u5024> ]
TMean2Estimate.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <\u30ec\u30d9\u30eb>, <Boolean Pooled> ]\n[ <Sample Mean 1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Sample Mean 2>, <Sample Standard Deviation 2>, <Sample Size 2>, <\u30ec\u30d9\u30eb>, <Boolean Pooled> ]
TMeanEstimate.Syntax=[ <\u6a19\u672c\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u30ec\u30d9\u30eb> ]\n[ <\u6a19\u672c\u5e73\u5747>, <\u6a19\u672c\u6a19\u6e96\u504f\u5dee>, <\u6a19\u672c\u306e\u5927\u304d\u3055>, <\u30ec\u30d9\u30eb> ]
TTest.Syntax=[ <\u6a19\u672c\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8>, <\u4eee\u8aac\u5e73\u5747>, <\u88fe> ]\n[ <\u6a19\u672c\u5e73\u5747>, <\u6a19\u672c\u306e\u6a19\u6e96\u504f\u5dee>, <\u6a19\u672c\u306e\u5927\u304d\u3055>, <\u4eee\u8aac\u5e73\u5747>, <\u88fe> ]
TTest2.Syntax=[ <\u6a19\u672c\u30c7\u30fc\u30bf1\u306e\u30ea\u30b9\u30c8>, <\u6a19\u672c\u30c7\u30fc\u30bf2\u306e\u30ea\u30b9\u30c8>, <\u88fe>, <Boolean Pooled> ]\n[ <\u6a19\u672c\u5e73\u57471>, <\u6a19\u672c\u6a19\u6e96\u504f\u5dee1>, <\u6a19\u672c\u306e\u5927\u304d\u30551>, <\u6a19\u672c\u5e73\u57472>, <\u6a19\u672c\u6a19\u6e96\u504f\u5dee2>, <\u6a19\u672c\u306e\u5927\u304d\u30552>, <\u88fe>, <Boolean Pooled> ]
TTestPaired.Syntax=[ <\u6a19\u672c\u30c7\u30fc\u30bf1\u306e\u30ea\u30b9\u30c8>, <\u6a19\u672c\u30c7\u30fc\u30bf2\u306e\u30ea\u30b9\u30c8>, <\u88fe> ]
TableText.Syntax=[ <\u30ea\u30b9\u30c8>, <\u30ea\u30b9\u30c8>, ... ]\n[ <\u30ea\u30b9\u30c8>, <\u30ea\u30b9\u30c8>, ..., <\u30c6\u30ad\u30b9\u30c8\u306e\u63c3\u3048> ]
Take.Syntax=[ <\u30ea\u30b9\u30c8>, <\u958b\u59cb\u4f4d\u7f6e> ]\n[ <\u30c6\u30ad\u30b9\u30c8>, <\u958b\u59cb\u4f4d\u7f6e> ]\n[ <\u30ea\u30b9\u30c8>, <\u958b\u59cb\u4f4d\u7f6e>, <\u7d42\u4e86\u4f4d\u7f6e> ]\n[ <\u30c6\u30ad\u30b9\u30c8>, <\u958b\u59cb\u4f4d\u7f6e>, <\u7d42\u4e86\u4f4d\u7f6e> ]
Take.SyntaxCAS=[ <\u30ea\u30b9\u30c8>, <\u958b\u59cb\u4f4d\u7f6e> ]\n[ <\u30ea\u30b9\u30c8>, <\u958b\u59cb\u4f4d\u7f6e>, <\u7d42\u4e86\u4f4d\u7f6e> ]
Tangent.Syntax=[ <\u70b9>, <\uff12\u6b21\u66f2\u7dda> ]\n[ <\u70b9>, <\u95a2\u6570> ]\n[ <\u66f2\u7dda\u4e0a\u306e\u70b9>, <\u66f2\u7dda> ]\n[ <x\u306e\u5024>, <\u95a2\u6570> ]\n[ <\u76f4\u7dda>, <\uff12\u6b21\u66f2\u7dda> ]\n[ <\uff12\u6b21\u66f2\u7dda>, <\uff12\u6b21\u66f2\u7dda> ]
Tangent.SyntaxCAS=[ <\u6570\u5024>, <\u95a2\u6570> ]\n[ <\u70b9>, <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
TaylorSeries.Syntax=[ <\u95a2\u6570>, <x\u306e\u5024>, <\u6b21\u6570> ]
TaylorSeries.SyntaxCAS=[ <\u5f0f>, <x\u306e\u5024>, <\u6b21\u6570> ]\n[ <\u5f0f>, <\u5909\u6570>, <\u5909\u6570\u306e\u5024>, <\u6b21\u6570> ]
Tetrahedron.Syntax=[ <\u6b63\u4e09\u89d2\u5f62> ]\n[ <\u70b9>, <\u70b9>, <\u70b9> ]\n[ <\u70b9>, <\u70b9>, <\u5411\u304d> ]
Text.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u5909\u6570\u4ee3\u5165\u306e\u305f\u3081\u306e\u771f\u507d\u5024> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u70b9> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u70b9>, <\u5909\u6570\u4ee3\u5165\u306e\u305f\u3081\u306e\u771f\u507d\u5024> ]\n[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u70b9>, <\u5909\u6570\u4ee3\u5165\u306e\u305f\u3081\u306e\u771f\u507d\u5024>, <Boolean for LaTeX formula> ]
TextToUnicode.Syntax=[ "<\u30c6\u30ad\u30b9\u30c8>" ]
Textfield.Syntax=[ ]\n[ <\u30ea\u30f3\u30af\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
TiedRank.Syntax=[ <\u30ea\u30b9\u30c8> ]
ToBase.Syntax=[ <\u6570\u5024>, <\u9032\u6cd5\u306e\u5e95> ]
ToComplex.Syntax=[ <\u30d9\u30af\u30c8\u30eb> ]
ToExponential.SyntaxCAS=[ <\u8907\u7d20\u6570> ]
ToPoint.Syntax=[ <\u8907\u7d20\u6570> ]
ToPolar.Syntax=[ <\u8907\u7d20\u6570> ]\n[ <\u30d9\u30af\u30c8\u30eb> ]
ToolImage.Syntax=[ <\u6570\u5024> ]\n[ <\u6570\u5024r>, <\u70b9> ]\n[ <\u6570\u5024>, <\u70b9>, <\u70b9> ]
Top.Syntax=[ <\uff12\u6b21\u66f2\u9762> ]
Translate.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8>, <\u30d9\u30af\u30c8\u30eb> ]\n[ <\u30d9\u30af\u30c8\u30eb>, <\u958b\u59cb\u70b9> ]
Transpose.Syntax=[ <\u884c\u5217> ]
TrapezoidalSum.Syntax=[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024>, <\u53f0\u5f62\u306e\u6570> ]
TravelingSalesman.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
TriangleCenter.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9>, <\u6570\u5024> ]
TriangleCurve.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9>, <\u7b49\u5f0f> ]
Triangular.Syntax=[ <\u4e0b\u9650>, <\u4e0a\u9650>, <\u30e2\u30fc\u30c9>, <\u5909\u6570\u5024> ]\n[ <\u4e0b\u9650>, <\u4e0a\u9650>, <\u30e2\u30fc\u30c9>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <\u4e0b\u9650>, <\u4e0a\u9650>, <\u30e2\u30fc\u30c9>, x, <Boolean Cumulative> ]
TrigCombine.Syntax=[ <\u5f0f> ]\n[ <\u5f0f>, <Target Function> ]
TrigExpand.Syntax=[ <\u5f0f> ]\n[ <\u5f0f>, <Target Function> ]
TrigExpand.SyntaxCAS=[ <\u5f0f> ]\n[ <\u5f0f>, <Target Function> ]\n[ <\u5f0f>, <Target Function>, <Target Variable> ]\n[ <\u5f0f>, <Target Function>, <Target Variable>, <Target Variable> ]
TrigSimplify.Syntax=[ <\u5f0f> ]
Trilinear.Syntax=[ <\u70b9>, <\u70b9>, <\u70b9>, <\u6570\u5024>, <\u6570\u5024>, <\u6570\u5024> ]
TurningPoint.Syntax=[ <\u591a\u9805\u5f0f> ]
Turtle.Syntax=[ ]
TurtleBack.Syntax=[ <\u30bf\u30fc\u30c8\u30eb>, <\u8ddd\u96e2> ]
TurtleDown.Syntax=[ <\u30bf\u30fc\u30c8\u30eb> ]
TurtleForward.Syntax=[ <\u30bf\u30fc\u30c8\u30eb>, <\u8ddd\u96e2> ]
TurtleLeft.Syntax=[ <\u30bf\u30fc\u30c8\u30eb>, <\u89d2\u5ea6> ]
TurtleRight.Syntax=[ <\u30bf\u30fc\u30c8\u30eb>, <\u89d2\u5ea6> ]
TurtleUp.Syntax=[ <\u30bf\u30fc\u30c8\u30eb> ]
UnicodeToLetter.Syntax=[ <\u6574\u6570> ]
UnicodeToText.Syntax=[ <\u6574\u6570\u306e\u30ea\u30b9\u30c8> ]
Uniform.Syntax=[ <\u4e0b\u9650>, <\u4e0a\u9650>, <\u5909\u6570\u5024> ]\n[ <\u4e0b\u9650>, <U\u4e0a\u9650>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <\u4e0b\u9650>, <\u4e0a\u9650>, x, <Boolean Cumulative> ]
Union.Syntax=[ <\u30ea\u30b9\u30c8>, <\u30ea\u30b9\u30c8> ]\n[ <\u591a\u89d2\u5f62>, <\u591a\u89d2\u5f62> ]
Unique.Syntax=[ <\u30ea\u30b9\u30c8> ]
UnitOrthogonalVector.Syntax=[ <\u76f4\u7dda> ]\n[ <\u7dda\u5206> ]\n[ <\u30d9\u30af\u30c8\u30eb> ]
UnitOrthogonalVector.Syntax3D=[ <\u76f4\u7dda> ]\n[ <\u7dda\u5206> ]\n[ <\u30d9\u30af\u30c8\u30eb> ]\n[ <\u5e73\u9762> ]
UnitOrthogonalVector.SyntaxCAS=[ <\u30d9\u30af\u30c8\u30eb> ]
UnitVector.Syntax=[ <\u30aa\u30d6\u30b8\u30a7\u30af\u30c8> ]
UnitVector.SyntaxCAS=[ <\u30d9\u30af\u30c8\u30eb> ]
UpdateConstruction.Syntax=[ ]\n[ <\u56de\u6570> ]
UpperSum.Syntax=[ <\u95a2\u6570>, <x\u306e\u958b\u59cb\u5024>, <x\u306e\u7d42\u4e86\u5024>, <\u9577\u65b9\u5f62\u306e\u6570> ]
Variance.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
Variance.SyntaxCAS=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
Vector.Syntax=[ <\u70b9> ]\n[ <\u59cb\u70b9>, <\u7d42\u70b9> ]
Vertex.Syntax=[ <\uff12\u6b21\u66f2\u7dda> ]\n[ <\u4e0d\u7b49\u5f0f> ]\n[ <\u591a\u89d2\u5f62> ]\n[ <\u591a\u89d2\u5f62>, <\u9802\u70b9\u756a\u53f7> ]\n[ <\u7dda\u5206>, <\u9802\u70b9\u756a\u53f7> ]
VerticalText.Syntax=[ <\u30c6\u30ad\u30b9\u30c8> ]\n[ <\u30c6\u30ad\u30b9\u30c8>, <\u70b9> ]
Volume.Syntax=[ <\u7acb\u4f53> ]
Voronoi.Syntax=[ <\u70b9\u306e\u30ea\u30b9\u30c8> ]
Weibull.Syntax=[ <\u30b7\u30a7\u30a4\u30d7>, <\u30b9\u30b1\u30fc\u30eb>, <\u5909\u6570\u5024> ]\n[ <\u30b7\u30a7\u30a4\u30d7>, <\u30b9\u30b1\u30fc\u30eb>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]\n[ <\u30b7\u30a7\u30a4\u30d7>, <\u30b9\u30b1\u30fc\u30eb>, x, <Boolean Cumulative> ]
Weibull.SyntaxCAS=[ <\u30b7\u30a7\u30a4\u30d7>, <\u30b9\u30b1\u30fc\u30eb>, <\u5909\u6570\u5024> ]
ZMean2Estimate.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <\u03c31>, <\u03c32>, <\u30ec\u30d9\u30eb> ]\n[ <Sample Mean 1>, <\u03c31>, <Sample Size 1>, <Sample Mean 2>, <\u03c32>, <Sample Size 2>, <\u30ec\u30d9\u30eb> ]
ZMean2Test.Syntax=[ <\u6a19\u672c\u30c7\u30fc\u30bf1\u306e\u30ea\u30b9\u30c8>, <\u03c31>, <\u6a19\u672c\u30c7\u30fc\u30bf2\u306e\u30ea\u30b9\u30c8>, <\u03c32>, <\u88fe> ]\n[ <\u6a19\u672c\u5e73\u57471>, <\u03c31>, <\u6a19\u672c\u306e\u5927\u304d\u30551>, <\u6a19\u672c\u5e73\u57472>, <\u03c32>, <\u6a19\u672c\u306e\u5927\u304d\u30552>, <\u88fe> ]
ZMeanEstimate.Syntax=[ <List of Sample Data>, <\u03c3>, <\u30ec\u30d9\u30eb> ]\n[ <Sample Mean>, <\u03c3>, <Sample Size>, <\u30ec\u30d9\u30eb> ]
ZMeanTest.Syntax=[ <\u6a19\u672c\u5e73\u5747\u306e\u30ea\u30b9\u30c8>, <\u03c3>, <\u4eee\u8aac\u5e73\u5747>, <\u88fe> ]\n[ <\u6a19\u672c\u5e73\u5747>, <\u03c3>, <\u6a19\u672c\u306e\u5927\u304d\u3055>, <\u4eee\u8aac\u5e73\u5747>, <\u88fe> ]
ZProportion2Estimate.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Sample Size 2>, <\u30ec\u30d9\u30eb> ]
ZProportion2Test.Syntax=[ <\u6a19\u672c\u6bd4\u73871>, <\u6a19\u672c\u306e\u5927\u304d\u30551>, <\u6a19\u672c\u6bd4\u73872>, <\u6a19\u672c\u306e\u5927\u304d\u30552>, <\u88fe> ]
ZProportionEstimate.Syntax=[ <Sample Proportion>, <Sample Size>, <\u30ec\u30d9\u30eb> ]
ZProportionTest.Syntax=[ <\u6a19\u672c\u6bd4\u7387>, <\u6a19\u672c\u306e\u5927\u304d\u3055>, <\u4eee\u8aac\u6bd4\u7387>, <\u88fe> ]
Zip.Syntax=[ <\u5f0f>, <Var1>, <List1>, <Var2>, <List2>, ... ]
Zipf.Syntax=[ <\u8981\u7d20\u6570>, <\u6307\u6570> ]\n[ <\u8981\u7d20\u6570>, <\u6307\u6570>, <Boolean Cumulative> ]\n[ <\u8981\u7d20\u6570>, <\u6307\u6570>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]
Zipf.SyntaxCAS=[ <\u8981\u7d20\u6570>, <\u6307\u6570>, <\u5909\u6570\u5024>, <Boolean Cumulative> ]
ZoomIn.Syntax=[ <\u500d\u7387> ]\n[ <\u500d\u7387>, <\u4e2d\u5fc3\u70b9> ]\n[ <x\u6700\u5c0f>, <y\u6700\u5c0f>, <x\u6700\u5927>, <y\u6700\u5927> ]
ZoomOut.Syntax=[ <\u500d\u7387> ]\n[ <\u500d\u7387>, <\u4e2d\u5fc3\u70b9> ]
mad.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
mean.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
mean.SyntaxCAS=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]
nCr.Syntax=[ <\u6570\u5024>, <\u6570\u5024> ]
stdev.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
stdevp.Syntax=[ <\u751f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8> ]\n[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8>, <\u5ea6\u6570\u306e\u30ea\u30b9\u30c8> ]
stdevp.SyntaxCAS=[ <\u6570\u5024\u306e\u30ea\u30b9\u30c8> ]